1,2179728,77534,10819573,Arvind Kumar Avinash,false,0,1734193308,1734193308,79280986,36325982,"<h1>You do not need a <code>DateTimeFormatter</code></h1>
<p>Your date-time string, <code>2015-01-12T13:00:00.000+02:00</code> is in the default format (based on <a href=""https://en.wikipedia.org/wiki/ISO_8601"" rel=""nofollow noreferrer"">ISO 8601</a> standard) used by <a href=""https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html#parse-java.lang.CharSequence-"" rel=""nofollow noreferrer""><code>OffsetDateTime#parse</code></a>:</p>
<blockquote>
<p>Obtains an instance of <code>OffsetDateTime</code> from a text string such as
<code>2007-12-03T10:15:30+01:00</code>.</p>
</blockquote>
<p>So, you do not need to use a <code>DateTimeFormatter</code> explicitly.</p>
<h2>What symbol should I use to parse a zone offset string?</h2>
<p>You should use <code>X</code> to parse the zone offset in an offset-date-time string that is not in the default format.</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: right;"">Example of zone offset format</th>
<th>Pattern</th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: right;""><code>-08</code></td>
<td><code>X</code></td>
</tr>
<tr>
<td style=""text-align: right;""><code>-0830</code></td>
<td><code>XX</code></td>
</tr>
<tr>
<td style=""text-align: right;""><code>-08:30</code></td>
<td><code>XXX</code></td>
</tr>
<tr>
<td style=""text-align: right;""><code>-08:30:15</code></td>
<td><code>XXXXX</code></td>
</tr>
</tbody>
</table></div>
<p>Check the <a href=""https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html"" rel=""nofollow noreferrer"">documentation</a> to learn more about it.</p>
<p><strong>Demo:</strong></p>
<pre><code>class Main {
    public static void main(String args[]) {
        OffsetDateTime odt = OffsetDateTime.parse(&quot;2015-01-12T13:00:00.000+02:00&quot;);
        System.out.println(odt);

        // Examples of parsing an offset-date-time string that is not in the
        // default format:
        System.out.println(
                OffsetDateTime.parse(&quot;12/01/2015 13:00:00.000+02&quot;,
                        DateTimeFormatter.ofPattern(&quot;dd/MM/uuuu HH:mm:ss.SSSX&quot;)));
        System.out.println(
                OffsetDateTime.parse(&quot;12/01/2015 13:00:00.000+0200&quot;,
                        DateTimeFormatter.ofPattern(&quot;dd/MM/uuuu HH:mm:ss.SSSXX&quot;)));
        System.out.println(
                OffsetDateTime.parse(&quot;12/01/2015 13:00:00.000+02:00&quot;,
                        DateTimeFormatter.ofPattern(&quot;dd/MM/uuuu HH:mm:ss.SSSXXX&quot;)));
        System.out.println(
                OffsetDateTime.parse(&quot;12/01/2015 13:00:00.000-08:30:15&quot;,
                        DateTimeFormatter.ofPattern(&quot;dd/MM/uuuu HH:mm:ss.SSSXXXXX&quot;)));
    }
}
</code></pre>
<p><strong>Output:</strong></p>
<pre class=""lang-none prettyprint-override""><code>2015-01-12T13:00+02:00
2015-01-12T13:00+02:00
2015-01-12T13:00+02:00
2015-01-12T13:00+02:00
2015-01-12T13:00-08:30:15
</code></pre>
<p><a href=""https://ideone.com/VX08Dq"" rel=""nofollow noreferrer"">Online Demo</a></p>
<p>Learn more about the modern Date-Time API from <strong><a href=""https://docs.oracle.com/javase/tutorial/datetime/index.html"" rel=""nofollow noreferrer"">Trail: Date Time</a></strong>.</p>
"
2,2702906,22973,2333222,SubOptimal,true,7,1459411293,1459411293,36327486,36325982,"<p>I would believe it's an error in the Javadoc and this part is a mistake</p>

<pre><code>Symbol  Meaning                     Presentation      Examples&lt;br&gt;
------  -------                     ------------      -------
Z       zone-offset                 offset-Z          +0000; -0800; -08:00;
</code></pre>

<p>because if you read further you find the explanation of the offset <code>Z</code></p>

<blockquote>
  <p><strong>Offset Z</strong>: This formats the offset based on the number of pattern letters. One, two or three letters outputs the hour and minute, without a colon, such as '+0130'. The output will be '+0000' when the offset is zero. Four letters outputs the full form of localized offset, equivalent to four letters of Offset-O. The output will be the corresponding localized offset text if the offset is zero. Five letters outputs the hour, minute, with optional second if non-zero, with colon. It outputs 'Z' if the offset is zero. Six or more letters throws IllegalArgumentException. </p>
</blockquote>

<p>Which complies <a href=""http://www.ietf.org/rfc/rfc822.txt"" rel=""noreferrer"">RFC 822</a>. </p>

<p>For me the pattern should behave same as for <a href=""http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html"" rel=""noreferrer"">SimpleDateFormat</a></p>
"
3,4585687,11,3720443,Anandh,false,0,1734192397,1734192397,79280961,67808136,"<p>I am getting below error while connecting the device.</p>
<pre><code>java.lang.UnsatisfiedLinkError: no otmcjni in java.library.path
at java.lang.ClassLoader.loadLibrary(Unknown Source)
at java.lang.Runtime.loadLibrary0(Unknown Source)
at java.lang.System.loadLibrary(Unknown Source)
at com.digitalpersona.onetouch.jni.MatchingLibrary.&lt;clinit&gt;(MatchingLibrary.java:16)
at com.digitalpersona.onetouch.jni.Matcher.&lt;clinit&gt;(Matcher.java:8)
at com.digitalpersona.onetouch.processing._impl.DPFPEnrollmentFactoryImpl$EnrollmentImpl.&lt;init&gt;(DPFPEnrollmentFactoryImpl.java:40)
at com.digitalpersona.onetouch.processing._impl.DPFPEnrollmentFactoryImpl.createEnrollment(DPFPEnrollmentFactoryImpl.java:20)
at com.digitalpersona.onetouch.ui.swing.CapturePanel.&lt;init&gt;(CapturePanel.java:42)
at com.digitalpersona.onetouch.ui.swing.DPFPEnrollmentControl.&lt;init&gt;(DPFPEnrollmentControl.java:32)
</code></pre>
<p>where can I download otmcjni ? Please suggests?</p>
"
4,4225222,11,3458895,ratnesh,false,1,1643385012,1643385012,70896458,67808136,"<p>I faced the similar issue and it can be fixed by opening a reader in exclusive mode as below,</p>
<pre><code>    m_reader.Open(Reader.Priority.EXCLUSIVE);
</code></pre>
<p>Refer to below lines from documents,</p>
<p><em>public static final Reader.Priority COOPERATIVE</em></p>
<p>Client uses this priority to open reader in cooperative mode. Multiple clients with this priority are allowed. Client receives captured images if it has window with focus.</p>
<p><em>public static final Reader.Priority EXCLUSIVE</em></p>
<p>Client uses this priority to open reader exclusively. Only one client with this priority is allowed.</p>
"
5,102134,18551,274354,mydoghasworms,false,1,1622786635,1622706510,67817462,67808136,"<p>I finally managed to get an example working.</p>
<p>Strange as it may seem, it only works in the context of a Java GUI application.</p>
<p>So, simply extending a JFrame and starting the reader capture on a separate thread seems to be sufficient.</p>
<p>This requirement is not specified anywhere in the SDK documentation that I can see.</p>
<p><strong>UPDATE</strong></p>
<p>It seems the problem is worse than I initially thought. Not only must the API be called in the context of a Java GUI application, but <strong>the GUI must also be in focus</strong>, otherwise the capture call simply does not return.</p>
<p>I have verified this with the example SDK applications. The Capture() method does not return if the apps are not in focus. This also applies to the C# examples, where the windows must be in focus, which suggests that this is built into the DLLs that ship with the solution.</p>
<p>This is terrible for our scenario, where we want to develop a local service that a browser can communicate with because, while the browser is in focus, obviously the Java application is not.</p>
"
6,24696567,1,18588457,lopespietro,false,0,1734189025,1734189025,79280870,31211842,"<p>With the blinking cursor positioned on the line where your &quot;extends Something&quot; is located, just press &quot;ctrl + .&quot; on your keyboard.</p>
<p>This will either automatically import the class you want to extend or open a list where the first option will be the class you need to import. Then, just press Enter to confirm.</p>
<p>So, &quot;ctrl + .&quot; or &quot;ctrl + .&quot; and than &quot;Enter&quot;.</p>
"
7,15294318,69,11034928,REghZY,false,0,1692451943,1692451943,76935355,31211842,"<p>As others mentioned, IntelliJ auto imports them on the fly (if enabled in the settings).</p>
<p>If you want to do this across an entire project, what you can do is replace all (<code>CTRL+SHIFT+H</code>) occurrences of the class name to include the package too (e.g. <code>MyClass</code> -&gt; <code>com.app.MyClass</code>), and then you can run the &quot;Remove Unnecessary Qualifications&quot; inspection on the whole project by pressing <code>ALT+Enter</code> on some code that was replaced. Then once the inspection is done, just keep clicking the &quot;Replace qualified name with import&quot; button on the right.</p>
<p>I couldn't find any other way to do the project-wide auto import</p>
"
58,38426411,1,28768924,46_Raveesh Gautam,false,0,1734158383,1734098302,79278562,50563593,"<pre><code>  &quot;timestamp&quot;: &quot;2024-12-13T13:34:15.671+00:00&quot;,
    &quot;status&quot;: 415,
    &quot;error&quot;: &quot;Unsupported Media Type&quot;,
    &quot;trace&quot;: &quot;org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/json;charset=UTF-8' is not supported\r\n\tat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:236)\r\n\tat org.springframework.web.
</code></pre>
<p>in springboot project this error occured:
I am using &quot; @JsonBackReference&quot; it throws the error ,if you remove then ,You will be not getting the error</p>
"
8,4528798,11447,3679900,y2k-shubham,false,1,1662151426,1662150642,73587684,31211842,"<p><strong>UPDATE</strong></p>
<p><a href=""https://stackoverflow.com/users/508907/ntg""><strong>@ntg</strong></a> has given a <a href=""https://stackoverflow.com/a/69939063/3679900"">very smart solution</a> for converting <code>import .*</code> to individual imports in existing files (it is not completely automatic, but still quite low-effort)</p>
<ul>
<li>Go to any <code>import .*</code> statement and press <kbd>Alt</kbd> <kbd>Enter</kbd> (<kbd>⌥</kbd> <kbd>return</kbd> on Mac)
<ul>
<li>a popup will appear to replace the * import with individual imports</li>
</ul>
</li>
<li>then just hit <kbd>Enter</kbd> again</li>
</ul>
<p><a href=""https://i.sstatic.net/m91xw.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/m91xw.png"" alt=""enter image description here"" /></a></p>
<hr />
<p><strong>Original answer</strong></p>
<p>Not sure if this is universal but I've found that after enabling both the following settings (as told in earlier answers), my <code>IntelliJ</code> is able to smartly <strong>convert <code>package.*</code> imports into individual imports</strong> (in existing files) just <strong>by deleting the <code>import com.company.package.*</code> line</strong></p>
<ul>
<li>Add unambiguous imports on the fly</li>
<li>Optimize imports on the fly</li>
</ul>
<p><a href=""https://i.sstatic.net/3HlDr.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/3HlDr.png"" alt=""enter image description here"" /></a></p>
<p><em>Essentially it will be able to add all 'unambiguous' imports for us, the rest will have to be resolved manually</em></p>
<hr />
<p>I'm using</p>
<ul>
<li>IntelliJ IDEA Ultimate 2022.1 (Build #IU-222.3739.54)</li>
<li>MacOS Monterey 12.5.1</li>
</ul>
"
9,18168949,140,13218973,Mbuso Kotobe,false,-1,1622639405,1622639405,67805770,31211842,"<p>Hover on top of the code which needs a class then press</p>
<p>alt + shift + Enter</p>
<p>This will auto import the needed class.</p>
"
10,9068580,1,6752612,Unnikrishnan S,false,-1,1620878185,1620878185,67513701,31211842,"<p>Use <kbd>Alt</kbd>+<kbd>Enter</kbd> for importing a single package or use <kbd>Alt</kbd>+<kbd>Shift</kbd>+<kbd>Enter</kbd> to auto import all the unambiguous packages in the current file.</p>
"
11,2179728,77534,10819573,Arvind Kumar Avinash,false,1,1734187834,1734187834,79280833,8911099,"<p>There are two problems with the <a href=""https://stackoverflow.com/a/8911900/10819573"">accepted answer</a>:</p>
<ol>
<li>It has missed using an English-<code>Locale</code> while parsing a date-time with English text. So, that answer can work merely by chance, only when that code is executed on a JVM with an English-<code>Locale</code> as the default.</li>
<li>There is no point in using three <code>a</code>s for am/pm, only one is required.</li>
</ol>
<h1><code>java.time</code></h1>
<p>In March 2014, Java 8 introduced the modern, <code>java.time</code> date-time API which supplanted the <a href=""https://www.oracle.com/technical-resources/articles/java/jf14-date-time.html"" rel=""nofollow noreferrer"">error-prone legacy <code>java.util</code> date-time API</a>. Any new code should use the <code>java.time</code> API.</p>
<h2>Solution using modern date-time API</h2>
<ol>
<li>Apart from using an English-<code>Locale</code>, I recommend using a case-insensitive <code>DateTimeFormatter</code> which can parse both <code>am</code> and <code>AM</code> (or <code>pm</code> and <code>PM</code>).</li>
<li>If you need the number of milliseconds from the epoch, convert the obtained <code>LocalDateTime</code> into an <code>Instant</code> using the applicable <code>ZoneId</code> and then get the epoch millis from the <code>Instant</code>.</li>
</ol>
<p><strong>Demo:</strong></p>
<pre><code>class Main {
    public static void main(String args[]) {
        DateTimeFormatter dtf = new DateTimeFormatterBuilder()
                .parseCaseInsensitive()
                .appendPattern(&quot;EEE MMM dd uuuu hh:mm a&quot;)
                .toFormatter(Locale.ENGLISH);

        LocalDateTime ldt = LocalDateTime.parse(&quot;Thu Jan 19 2012 08:00 PM&quot;, dtf);
        System.out.println(ldt);

        // If you need the number of milliseconds from the epoch:
        // ZoneId.systemDefault() returns the ZoneId of the JVM. Change it as per your
        // requirement e.g. ZoneId.of(&quot;America/New_York&quot;)
        long epochMillis = ldt.atZone(ZoneId.systemDefault())
                                .toInstant()
                                .toEpochMilli();
        System.out.println(epochMillis);
    }
}
</code></pre>
<p><strong>Output when executed on a JVM with UTC zone:</strong></p>
<pre class=""lang-none prettyprint-override""><code>2012-01-19T20:00
1327003200000
</code></pre>
<p><a href=""https://ideone.com/YVb43F"" rel=""nofollow noreferrer"">Online Demo</a></p>
<p>Learn more about the modern Date-Time API from <strong><a href=""https://docs.oracle.com/javase/tutorial/datetime/index.html"" rel=""nofollow noreferrer"">Trail: Date Time</a></strong>.</p>
"
12,4906212,2675,3952885,Amir Dora.,false,0,1531227621,1531227621,51265949,8911099,"<p>// make sure your string date and DateFormat pattern are same;
                                // for example you have String date=""2018/07/10 10:00:00"";</p>

<pre><code>                            DateFormat format = new SimpleDateFormat( ""yyyy/MM/dd HH:mm:ss"");

                            // now makesure format has same pattern in this case """"yyyy/MM/dd HH:mm:ss""
</code></pre>
"
13,1066374,31614,1066828,Fahim Parkar,true,17,1326897713,1326897303,8911900,8911099,"<p>Try below code... Tested and worked</p>

<pre><code>    String dateStr = ""Thu Jan 19 2012 01:00 PM"";
    DateFormat readFormat = new SimpleDateFormat( ""EEE MMM dd yyyy hh:mm aaa"");

    DateFormat writeFormat = new SimpleDateFormat( ""yyyy-MM-dd HH:mm:ss"");
    Date date = null;
    try {
       date = readFormat.parse( dateStr );
    } catch ( ParseException e ) {
        e.printStackTrace();
    }

    String formattedDate = """";
    if( date != null ) {
    formattedDate = writeFormat.format( date );
    }

    System.out.println(formattedDate);
</code></pre>

<p>Output is <code>2012-01-19 13:00:00</code></p>

<p>Cheers!!! Happy to help!!!</p>
"
14,903562,15209,939023,Shivan Dragon,false,5,1326894725,1326894725,8911263,8911099,"<p>Try setting a Locale such as US in this case:</p>

<pre><code>SimpleDateFormat format = new SimpleDateFormat(""EEE MMM dd yyyy hh:mm aaa"",Locale.US);
format.parse(""Thu Jan 19 2012 08:00 PM"");
</code></pre>
"
15,106491,59965,283676,Andrey,false,0,1326894387,1326894387,8911175,8911099,"<p>Make sure that value really got to that call. Put a breakpoint right on that line and double check actual value.</p>

<p>As you can see here <a href=""http://ideone.com/MBzYn"" rel=""nofollow"">http://ideone.com/MBzYn</a> code works perfectly.</p>
"
16,26197329,21,24123140,Pax,false,0,1734181362,1734181362,79280669,79280620,"<p>I completly agree on what you wrote me. However, the sorting method is still not working and the display still seems flipped...</p>
<p>Here is the result:</p>
<p><a href=""https://i.sstatic.net/9nrs2LUK.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/9nrs2LUK.png"" alt=""Screen capture of the result"" /></a></p>
<p>If you need any details on the coordinates or the base, feel free to ask!</p>
<hr />
<p>You said that the calculus has to correspond to my transformation. I don't know how to check that, here is the base:</p>
<pre><code>this.gameBase = new Base2D(
    new Vector2D(1.0 * 64 / 2, 0.5 * 64 / 2),
    new Vector2D(-1.0 * 64 / 2, 0.5 * 64 / 2)
);
</code></pre>
"
38,31180,29580,85421,user85421,false,0,1734169486,1734167751,79280370,19527695,"<p>The statement &quot;<em>obviously give the same result</em>&quot; is wrong:</p>
<h2>Differences</h2>
<h4>not the same result:</h4>
<pre class=""lang-java prettyprint-override""><code>int x = 10;
int a = x++; // a = 10
</code></pre>
<pre class=""lang-java prettyprint-override""><code>int x = 10;
int b = x = x + 1; // b = 11
</code></pre>
<h4>compile error</h4>
<p><code>x = x + 1</code> will not compile if the type of <code>x</code> is neither <code>int</code> nor <code>long</code> - <code>x+1</code> is always compiled as an <code>int</code> addition, that is, <code>x</code> is promoted to <code>int</code>; unless <code>x</code> is <code>long</code>:</p>
<pre class=""lang-java prettyprint-override""><code>byte x = 10;
x = x + 1; // incompatible types: possible lossy conversion from int to byte
</code></pre>
<h2>Bytecode</h2>
<p>If the generated bytecode is the same or not is probably implementation dependent; probably even on how these expressions are being used - is the result needed, or just the value of <code>x</code>.<br />
You can use <code>javap</code> to check the bytecode for your compiler.</p>
"
17,38449885,11,28780242,Hamdi Ben Jarrar,false,1,1734179748,1734179748,79280643,79280620,"<p>The issue you're facing is likely caused by how you're calculating and comparing the depth of your entities for sorting. Since you're working with isometric tiles, the rendering order should ensure that tiles closer to the screen (or bottom-right) are drawn after tiles farther away (or top-left).</p>
<p>In your current code, you calculate the depth as the sum of Cartesian x+yx+y, but this might not correctly capture the isometric depth ordering for rendering purposes.
This depth can be calculated as
depth =p1.getY()−p1.getX()
depth =p1.getY()−p1.getX(), assuming your isometric transformation aligns with this logic.</p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>// Sort entities by isometric depth
Arrays.sort(entities, (e1, e2) -&gt; {
    PositionComponent p1 = e1.getComponent(PositionComponent.class);
    PositionComponent p2 = e2.getComponent(PositionComponent.class);

    // Calculate depth based on isometric Y-X
    double depth1 = p1.getY() - p1.getX();
    double depth2 = p2.getY() - p2.getX();

    // Primary sorting criterion: depth
    int result = Double.compare(depth1, depth2);

    // Secondary sorting: cartesian Y coordinate
    if (result == 0) {
        result = Double.compare(p1.getY(), p2.getY());
    }

    // Tertiary sorting: cartesian X coordinate
    if (result == 0) {
        result = Double.compare(p1.getX(), p2.getX());
    }

    // Fallback sorting: hashCode
    if (result == 0) {
        result = Integer.compare(e1.hashCode(), e2.hashCode());
    }

    return result;
});</code></pre>
</div>
</div>
</p>
"
18,10313291,1819,7608371,Noor Hossain,false,0,1734186716,1734186716,79280802,28071349,"<p><strong>Another Case of the same Exception: (No Need To Remove Views)</strong></p>
<p>In my case, I want to add some TextView in a LineareLayout which resides in a HorizontalScroView. I made TextView Programmatically in a loop. I see that when I added every new Instance of TextView, it was ok, but when I wanted to add an old instance of TextView which already added to the LinearLayout again, Exception arise <code>&quot;IllegalStateException: The specified child already has a parent. You must call removeView() on the child's parent first.&quot;</code></p>
<p>So, I come to the decision that, though the exception says removeView(), every time it's not necessary to removeView() in all cases.</p>
<p>Here is My Methods :</p>
<pre><code>public  static TextView createTextView (Context mContext, String text){
        LinearLayout.LayoutParams lp = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT,
                LinearLayout.LayoutParams.WRAP_CONTENT);

        TextView tv = new TextView(mContext);
        tv.setLayoutParams(lp);
        tv.setText(text);
        tv.setTextSize(18);
        tv.setPadding(25, 0, 25, 5);
        // tv.setTypeface(Typeface.DEFAULT_BOLD);
        tv.setGravity(Gravity.CENTER);

        return  tv ;
    }
</code></pre>
<p>Now the method in which exception arises :</p>
<pre><code>public static void createHorizontalScrollViewWithTextView
            (Context mContext, @NonNull ArrayList&lt;String&gt; list, HorizontalScrollView hSView, LinearLayout linearLayout, EditText etSearch) {
        //It can also create by ImageView
       
        TextView arrowLeft = createTextView(mContext, &quot;  &lt;  &quot;);
        linearLayout.addView(arrowLeft);
        for (int i = 0; i &lt; list.size(); i++) {
            String s = list.get(i);
            System.out.println(&quot;Catagory in Horizontal : &quot; + s);

            TextView tv = createTextView(mContext, s);
            tv.setOnClickListener(new View.OnClickListener() {
                @SuppressLint(&quot;SetTextI18n&quot;)
                @Override
                public void onClick(View v) {
                    etSearch.setText(&quot;  ( &quot;+s+&quot; )&quot; );
                }
            });

            linearLayout.addView(tv);
        }
       
        linearLayout.addView(arrowLeft);  // &lt;= exception Comes to this Line 
        hSView.setVisibility(View.VISIBLE);
    }
</code></pre>
<p>Fixing :</p>
<pre><code>public static void createHorizontalScrollViewWithTextView
            (Context mContext, @NonNull ArrayList&lt;String&gt; list, HorizontalScrollView hSView, LinearLayout linearLayout, EditText etSearch) {
        //It can also create by ImageView

        TextView arrow = createTextView(mContext, &quot;  &lt;  &quot;);
        linearLayout.addView(arrow);
        for (int i = 0; i &lt; list.size(); i++) {
            String s = list.get(i);
            System.out.println(&quot;Catagory in Horizontal : &quot; + s);

            TextView tv = createTextView(mContext, s);
            tv.setOnClickListener(new View.OnClickListener() {
                @SuppressLint(&quot;SetTextI18n&quot;)
                @Override
                public void onClick(View v) {
                    etSearch.setText(&quot;  ( &quot;+s+&quot; )&quot; );
                }
            });

            linearLayout.addView(tv);
        }
        TextView arrowRight = createTextView(mContext, &quot; &gt;  &quot;);  //&lt;= Fix by New View Created, No need To remove Any Views 
        linearLayout.addView(arrowRight);
        hSView.setVisibility(View.VISIBLE);
    }
</code></pre>
<p>See The below Picture Firs Line of the Activity : ( &lt; bangla English....) :
<a href=""https://i.sstatic.net/lQNFNaZ9.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/lQNFNaZ9.png"" alt=""enter image description here"" /></a></p>
"
19,10313291,1819,7608371,Noor Hossain,false,0,1715952713,1715952713,78495999,28071349,"<p>Actually, In this case, when you have inflated one view to another view, then remove all child views from the another view's parent view, see the setup order below:</p>
<p>Xml :</p>
<pre><code>&lt;LinearLayout
        android:id=&quot;@+id/listLlParent&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:orientation=&quot;vertical&quot;&gt;
       &lt;ListView
            android:id=&quot;@+id/imgListview&quot;
            android:layout_width=&quot;match_parent&quot;
            android:layout_height=&quot;match_parent&quot;
            android:layout_marginTop=&quot;2dp&quot;
            android:clipToPadding=&quot;false&quot;
            android:paddingBottom=&quot;100dp&quot; /&gt;
    &lt;/LinearLayout&gt;
</code></pre>
<p>Example:</p>
<pre><code>    listLlParent.removeAllViews(); // add this line to parent view 
    zoomView.addView(imgListview);
   listLlParent.addView(zoomView);
</code></pre>
<p>And the Exception was :</p>
<pre><code>       FATAL EXCEPTION: main
                                                                                                           java.lang.RuntimeException: Unable to start activity ComponentInfo{-----}: 
java.lang.IllegalStateException: The specified child already has a parent. You must call removeView() on the child's parent first.
</code></pre>
"
20,6555535,1500,5068349,Bharat Lalwani,false,0,1698907024,1698907024,77407391,28071349,"<p>For me, it was very weird problem, the fragment XML code contain a view with id as <strong>root</strong>. And I was returning fragment view with <strong>viewBinding.root</strong>.</p>
<pre><code>override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
val mViewBinding = FragmentMainBinding.inflate(inflater, container, false)
return mViewBinding.root
}
</code></pre>
<p>Make sure that XML doesn't have any view <strong>id</strong> as <strong>root</strong>.</p>
"
21,11794185,81,8629290,Lloyd Munyai,false,0,1692167816,1692167816,76911060,28071349,"<p>I think the proper answer to your problem is to initialize the Views inside your runnable function:</p>
<pre><code>private void ConsoleWindow(){
        runOnUiThread(new Runnable(){

     @Override
     public void run(){
        tv = new TextView(getApplicationContext()); 
        et = new EditText(getApplicationContext());

        // MY LAYOUT:
        setContentView(R.layout.activity_console);
        // LINEAR LAYOUT
        LinearLayout layout=new LinearLayout(getApplicationContext());
        layout.setOrientation(LinearLayout.VERTICAL);
        setContentView(layout);

        // TEXTVIEW
        layout.addView(tv); //  &lt;==========  ERROR IN THIS LINE DURING 2ND RUN
        // EDITTEXT
        et.setHint(&quot;Enter Command&quot;);
        layout.addView(et);
        }
    }
}
</code></pre>
<p>So what it does is that it attach the views on your first run and store that on your allocated memory. so when you run it the second time you no longer have the available memory for that view, hence it require you to remove the view first before you try to attach it again.</p>
<p>So if is inside your function it will always create an instance of those views.</p>
"
22,25064200,31,18918712,darwin iqui&#241;a,false,3,1650716044,1650716044,71979521,28071349,"<p><strong>This is how I do my custom dialog</strong></p>
<pre><code>AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);
android.view.View views = getLayoutInflater().inflate(layout_file, null, false);

builder.setView(views);
dialog = builder.create();
dialog.show();
</code></pre>
<p><strong>I changed it into this and its works for me, I hope this helps</strong></p>
<pre><code>Dialog dialog = new Dialog(MainActivity.this);
dialog.setContentView(layout_file);
dialog.show();
</code></pre>
"
59,29370927,1,22503572,Halil Ozturk,false,0,1704711205,1704711205,77779053,50563593,"<p>I had similar problem, which caused from the mismatch of JsonBackReference and JsonManagedReference's values.
@JsonBackReference(value = &quot;parent - address - reference&quot;) vs @JsonManagedReference(value = &quot;parent - address reference&quot;)</p>
"
23,401843,101552,768644,rzwitserloot,false,2,1734165103,1734155675,79280141,79279976,"<p>Scanner is the mostly wrong tool for the job. Or, at least, the way you're using it.</p>
<p>Scanner is a thing that separates input into tokens and returns those. Tokens are defined as 'the things in between the delimiter', and the delimiter is set up by default as 'any amount of whitespace'.</p>
<p>What you want is a funky delimiter: &quot;Any amount of spaces, including none at all, between 2 characters, but at least 1 space between 2 digits&quot;.</p>
<p>This gets you into fancy <a href=""https://en.wikipedia.org/wiki/Regular_expression"" rel=""nofollow noreferrer"">regexes</a> that are unreadable unless you are very familiar with them.</p>
<p>You'll learn a lot more if you skip all that and find another way to do it. For example, just grab individual characters. Only if the character you fetch is a digit <em>and</em> the previous character was also a digit, combine them into a new number, otherwise, you got a token.</p>
<p>Forget <code>Scanner</code>, it was never meant for keyboard input anyway.</p>
<pre class=""lang-java prettyprint-override""><code>class MyApp {
  public static void main(String[] args) throws IOException {
    new MyApp().go();
  }

  StringBuilder token = new StringBuilder();

  void go() throws IOException {
    while (true) {
      int v = System.in.read();
      if (v == -1) {
        cycleToken();
        return;
      }
      
      char w = (char) v;
      if (w &gt;= '0' &amp;&amp; w &lt;= '9') {
        token.append(w);
      } else {
        cycleToken();
        token.append(w);
        cycleToken();
      }
    }
  }

  void cycleToken() {
    String z = token.toString().trim();
    if (!z.isEmpty()) System.out.println(&quot;TOKEN: &quot; + z);
    token.setLength(0);
  }
}
</code></pre>
<ul>
<li><code>StringBuilder</code> is a mutable string. We need it here to add numbers; we don't know when we're &quot;done&quot; with a number until we see a non-number, or the end of input.</li>
<li>Any non-digit can be emitted as token immediately; only digits are 'saved' to be emitted later, because another digit might come next.</li>
</ul>
"
24,23811671,33,23787503,Bob the Builder,false,0,1734179739,1734178122,79280597,79260793,"<p>Thanks to <a href=""https://stackoverflow.com/a/79275709/23787503"">gthanop's answer</a> I was able to figure out a solution to the issue. Here is the updated code</p>
<pre><code>// Add a mouse listener
c.addMouseMotionListener(new MouseAdapter() {
    // If the mouse is moved
    public void mouseMoved(MouseEvent e) {
        // Get the current X
        int currentX = e.getX();
        // Get the current Y
        int currentY = e.getY();
                
        // Get the current X on screen
        int currentXOnScreen = f.getX() + currentX;
        // Get the current Y on screen
        int currentYOnScreen = f.getY() + currentY;
                
        // Get the mouse X position delta
        infiniteMouse.x += (currentXOnScreen - infiniteMouse.centerX) + 8;
        // Get the mouse Y position delta
        infiniteMouse.y += (currentYOnScreen - infiniteMouse.centerY) + 32;
                
        // Move the mouse to the center
        robot.mouseMove(infiniteMouse.centerX, infiniteMouse.centerY);
    }
});
</code></pre>
<p>I believe that <code>Robot.moveMouse</code> infact does not move the pointer to the specified location but sets the center of the pointer to the specified location maybe something like that. That is why I add 8 to the difference on the X and 32 on the Y. However I am not sure as to what the reason could be but since it works I will just leave it like that.</p>
<p>This answer provides a solution to the problem in the question. However <a href=""https://stackoverflow.com/a/79275709/23787503"">gthanop's answer</a> provides a lot more detail I highly recommend reading that</p>
"
25,9059972,3226,6746785,gthanop,true,1,1734017884,1734017884,79275709,79260793,"<p>The following snippet in your code:</p>
<pre><code>// Remove the listener when moving to the center
c.removeMouseMotionListener(this);
// Move the mouse to the center
robot.mouseMove(infiniteMouse.centerX, infiniteMouse.centerY);
// Add the listener back
c.addMouseMotionListener(this);
</code></pre>
<p>should have the same effect as the following one only:</p>
<pre><code>// Move the mouse to the center
robot.mouseMove(infiniteMouse.centerX, infiniteMouse.centerY);
</code></pre>
<p>The Event Dispatch Thread (EDT) is a single thread and as far as I know all Swing events are posted to it. The <code>mouseMoved</code> method is called on the EDT. You are not going to get <code>mouseMoved</code> calls interleaved, but instead you get them sequentially. So, in the first snippet, you are essentially removing and re-adding the listener to the component on the same thread, inside the same fired event code. As far as I understand, the <code>robot.mouseMove</code> will eventually create another <code>mouseMoved</code> event on the EDT <em>queue</em>, but since EDT is a single thread and all events in its queue are executed sequentially, then the <code>mouseMoved</code> event generated by the <code>robot.mouseMove</code> will be dispatched at some point <em>after</em> the current <code>mouseMoved</code> call. But the listener always exists in the component (as long as we are outside <code>mouseMoved</code>). When the event generated by <code>robot.mouseMove</code> is dispatched, the listeners of the component will be called, which will include the listener of the first snippet (for the aforementioned reasons and code).</p>
<p>Some other minor considerations are:</p>
<ol>
<li>The following code:
<pre><code>// Get the mouse Y position delta
infiniteMouse.y += currentY - infiniteMouse.previousY;
</code></pre>
assumes the y axis is incremented going downwards, as it stands for components too. Did you mean then the following instead?
<pre><code>// Get the mouse Y position delta
infiniteMouse.y += infiniteMouse.previousY - currentY;
</code></pre>
It doesn't really matter for the question though, just saying.</li>
<li>You are setting the mouse to the center of the frame. Did you mean to set it to the component? It doesn't really matter for the question though, just saying.</li>
</ol>
<p>Back to finding a solution, since <code>robot.mouseMove</code> is expected to generate mouse events, then one solution could be to discard them at some point of their dispatch. The most convenient way I guess is inside the mouse listener, the last destination of the event which we can control easily. Nevertheless, I couldn't find an easy (or non-hypothetic) way to distinguish between user and robot generated mouse move events inside the listener. I am also assuming that we cannot know when the <code>robot.mouseMove</code> will actually complete the native movement of the cursor (this is something I couldn't find guarantee of happening, inside the documentation). It could be for example the case that <code>robot.mouseMove</code> only posts a request to the OS to move the mouse and then immediately returns. So we can't be certain when that request completes. Also, we cannot block waiting for the mouse to reach the destination because we will lose information on what actually caused the mouse to move to destination (was it the user? Was it only the <code>Robot</code>? A combination of their movements? etc). Also, <code>robot.waitForIdle</code> cannot be called inside EDT (throws an exception), so that would require an extra thread, but its documentation states that:</p>
<blockquote>
<p>Waits until all events currently on the event queue have been processed.</p>
</blockquote>
<p>...which does not (at least for me) mean that the native events will be completed. <em>Processing the events in the (<code>Robot</code>'s) queue</em> for me just means that the request to the OS was successful, but that does not mean the OS completed it yet. Then I realised that we can just <em>cancel the <code>Robot</code>'s events out proactively</em> because we know the event that is going to be generated by the <code>robot.mouseMove</code>, since at any point we know the current location of the mouse, as well as where we want it to go. The delta resulting from these two locations can be subtracted from the <code>InfiniteMouse</code> location just before (or just after) the <code>robot.mouseMove</code> is called from our code. When trying to write this in code, I ended up using an even simpler concept: just assume the mouse is always (after each <code>mouseMoved</code> call) at the same location and <em>don't</em> maintain a <em>previous</em> location (we always know/assume it's on the location we specified). Of course this requires to call <code>robot.mouseMove</code> to that constant location on each <code>mouseMoved</code> event, so that the assumption holds:</p>
<pre><code>import java.awt.AWTException;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Robot;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.util.Objects;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import javax.swing.SwingUtilities;
import javax.swing.event.MouseInputAdapter;

public class Main {
    
    /** A model for a two dimensional point, with integer coordinates. */
    public static interface IntXYModel {
        
        /*public static final*/ String PROPERTY_XY = &quot;xy&quot;;
        
        void setXY(final Point xy);
        Point getXY();
        
        void addPropertyChangeListener(final PropertyChangeListener listener);
        void removePropertyChangeListener(final PropertyChangeListener listener);
        
        /*There is only one property in this model currently (PROPERTY_XY), but the model may be
        subinterfaced to include more properties. In that case there needs to be a way to specify
        which property we are interested in. Clients accepting plain IntXYModels do not have to know
        if there exist more properties in them, in which case they should use the following
        overloads (instead of the above methods which do not accept 'propertyName').*/
        void addPropertyChangeListener(final String propretyName, final PropertyChangeListener listener);
        void removePropertyChangeListener(final String propretyName, final PropertyChangeListener listener);
    }
    
    /** A basic implementation of a plain {@link IntXYModel}. */
    public static class DefaultIntXYModel implements IntXYModel {
        
        private final PropertyChangeSupport support;
        private final Point xy;
        
        public DefaultIntXYModel(final Point xy) {
            this.xy = new Point(xy); //Defensive copy.
            support = new PropertyChangeSupport(this);
        }
        
        @Override
        public void setXY(final Point xy) {
            if (!Objects.equals(xy, this.xy)) {
                final Point oldXY = new Point(this.xy);
                this.xy.setLocation(xy);
                support.firePropertyChange(PROPERTY_XY, oldXY, xy);
            }
        }
        
        @Override
        public Point getXY() {
            return new Point(xy); //Defensive copy.
        }
        
        @Override
        public void addPropertyChangeListener(final PropertyChangeListener listener) {
            if (listener != null)
                support.addPropertyChangeListener(listener);
        }
        
        @Override
        public void removePropertyChangeListener(final PropertyChangeListener listener) {
            if (listener != null)
                support.removePropertyChangeListener(listener);
        }
        
        @Override
        public void addPropertyChangeListener(final String propretyName,
                                              final PropertyChangeListener listener) {
            if (listener != null)
                support.addPropertyChangeListener(propretyName, listener);
        }
        
        @Override
        public void removePropertyChangeListener(final String propretyName,
                                                 final PropertyChangeListener listener) {
            if (listener != null)
                support.removePropertyChangeListener(propretyName, listener);
        }
    }
    
    /** A grid drawing panel. Essentially used as a visual clue to the user for the movement of the grid (with the mouse). */
    public static class DrawPanel extends JPanel {

        private IntXYModel currentLocationModel, strideModel;
        
        /** A {@code PropertyChangeListener} which calls {@link #repaint() repaint}. Both our models need only this common listener. */
        private final PropertyChangeListener repaintListener;
        
        /**
         * @param currentLocationModel A model for the location we are currently in the grid.
         * @param strideModel A model for the spacing between drawn lines of the grid (essentially the cell size).
         */
        public DrawPanel(final IntXYModel currentLocationModel,
                         final IntXYModel strideModel) {
            this.currentLocationModel = Objects.requireNonNull(currentLocationModel);
            this.strideModel = Objects.requireNonNull(strideModel);
            repaintListener = evt -&gt; repaint();
            //We are specifying explicitly the PROPERTY_XY constant for the listener, because we are only interested in it. See IntXYModel comments.
            currentLocationModel.addPropertyChangeListener(IntXYModel.PROPERTY_XY, repaintListener);
            strideModel.addPropertyChangeListener(IntXYModel.PROPERTY_XY, repaintListener);
            super.setBorder(BorderFactory.createLineBorder(super.getForeground(), 4));
        }
        
        public IntXYModel getCurrentLocationModel() {
            return currentLocationModel;
        }
        
        public IntXYModel getStrideModel() {
            return strideModel;
        }
        
        public void setCurrentLocationModel(final IntXYModel currentLocationModel) {
            Objects.requireNonNull(currentLocationModel);
            if (currentLocationModel != this.currentLocationModel) {
                //We are specifying explicitly the PROPERTY_XY constant for the listener, because we are only interested in it. See IntXYModel comments.
                this.currentLocationModel.removePropertyChangeListener(IntXYModel.PROPERTY_XY, repaintListener);
                this.currentLocationModel = currentLocationModel;
                currentLocationModel.addPropertyChangeListener(IntXYModel.PROPERTY_XY, repaintListener);
            }
        }
        
        public void setStrideModel(final IntXYModel strideModel) {
            Objects.requireNonNull(strideModel);
            if (strideModel != this.strideModel) {
                //We are specifying explicitly the PROPERTY_XY constant for the listener, because we are only interested in it. See IntXYModel comments.
                this.strideModel.removePropertyChangeListener(IntXYModel.PROPERTY_XY, repaintListener);
                this.strideModel = strideModel;
                strideModel.addPropertyChangeListener(IntXYModel.PROPERTY_XY, repaintListener);
            }
        }

        @Override
        protected void paintComponent(final Graphics g) {
            super.paintComponent(g);

            //Standard metrics (panel size and center, as well as grid location and stride):
            final int w = getWidth(), h = getHeight();
            final int cx = w / 2, cy = h / 2;
            final Point location = currentLocationModel.getXY(),
                        stride = strideModel.getXY();

            final Graphics2D g2d = (Graphics2D) g.create();
            try {
//                //Draw a RadialGradientPaint to help the user navigate visually back to the origin (reduces EventQueue perceived experience a lot).
//                final Paint originalPaint = g2d.getPaint();
//                g2d.setPaint(new RadialGradientPaint(cx - location.x, h - cy + location.y, 1000, new float[]{0, 1}, new Color[]{Color.CYAN, Color.BLUE.brighter().brighter()}, MultipleGradientPaint.CycleMethod.REFLECT));
//                g2d.fill(g2d.getClipBounds());
//                g2d.setPaint(originalPaint);
                
                //Draw a 'X' in the center of the panel (just so the user always knows where the mouse supposedly is):
                final int fillSideSpace = 10;
                g2d.drawLine(cx - fillSideSpace, cy - fillSideSpace, cx + fillSideSpace, cy + fillSideSpace);
                g2d.drawLine(cx + fillSideSpace, cy - fillSideSpace, cx - fillSideSpace, cy + fillSideSpace);

                //Draw grid:
                final int verticalLinesForW = Math.max(1, (w + stride.x - 1) / stride.x),
                          horizontalLinesForH = Math.max(1, (h + stride.y - 1) / stride.y);
                final int verticalLinesWhichForHalfW = (verticalLinesForW + 1) / 2,
                          horizontalLinesWhichForHalfH = (horizontalLinesForH + 1) / 2;
                final int leftMostVisibleVerticalLineX = cx - location.x % stride.x - (verticalLinesWhichForHalfW - 1) * stride.x,
                          topMostVisibleHorizontalLineY = cy - location.y % stride.y - (horizontalLinesWhichForHalfH - 1) * stride.y;
                //g2d.setStroke(new BasicStroke(6));
                for (int i = -1; i &lt;= verticalLinesForW; ++i)
                    g2d.drawLine(leftMostVisibleVerticalLineX + i * stride.x, 0, leftMostVisibleVerticalLineX + i * stride.x, h);
                for (int i = -1; i &lt;= horizontalLinesForH; ++i)
                    g2d.drawLine(0, h - topMostVisibleHorizontalLineY - i * stride.y, w, h - topMostVisibleHorizontalLineY - i * stride.y);
                
                //Draw a String to indicate the grid origin (0,0):
                //g2d.setColor(Color.GREEN.darker());
                g2d.setFont(g.getFont().deriveFont(g.getFont().getSize2D() * 1.5f));
                g2d.drawString(&quot;Origin&quot;, cx - location.x, h - cy + location.y);
            }
            finally {
                g2d.dispose();
            }
        }
        
        @Override
        public Dimension getPreferredSize() {
            final Dimension preferredSize = super.getPreferredSize();
            if (isPreferredSizeSet())
                return preferredSize;
            return new Dimension(Math.max(900, preferredSize.width), Math.max(600, preferredSize.height)); //Give some room for the drawing...
        }
    }
    
    /**
     * Adds infinite mouse capability to a {@code JComponent}. The mouse capturing functionality is
     * enabled when the user presses the mouse inside the component, and disabled when the user
     * types the given {@code escapeKeyStroke}.
     * @param c The component which will capture the mouse.
     * @param locationModel The model of the location inside the 2D grid. This will be updated when
     * the funcionality is enabled and the mouse is moved by the user.
     * @param escapeKeyStroke A Key Binding will be created for this {@code KeyStroke} which, when
     * typed, will disable mouse capturing functionality. It is applied to the
     * {@linkplain JComponent#getInputMap() input map} ({@code WHEN_FOCUSED}) of the component.
     * @return The {@code Action} created for the given {@code escapeKeyStroke}. Its enabled state
     * serves as the mouse capturing functionality's enabled state.
     * @throws AWTException In case of failing to create the {@link Robot} required to restore mouse
     * position after each user's move.
     */
    private static Action addInfiniteMouseMovement(final JComponent c,
                                                   final IntXYModel locationModel,
                                                   final KeyStroke escapeKeyStroke) throws AWTException {
        final Robot robot = new Robot();
        final Action escapeAction = new AbstractAction(&quot;Disable mouse capturing&quot;) {
            @Override
            public void actionPerformed(final ActionEvent e) {
                setEnabled(false); /*Disabling this action effectively disables mouse capturing
                support in the mouse listener which follows the creation of this action.*/
            }
        };
        final MouseInputAdapter mouseListener = new MouseInputAdapter() {
            
            /** The original mouse location, when the mouse capturing started. */
            private Point mouseLocation = null;
            
            @Override
            public void mouseMoved(final MouseEvent e) {
                if (escapeAction.isEnabled()) {
                    /*Always requesting focus is mandatory, since the escape action is registered
                    on WHEN_FOCUSED input map. If you remove the requestFocusInWindow() call, then
                    the escape action won't function!*/
                    e.getComponent().requestFocusInWindow();
                    
                    /*Obtain mouse coordinate difference. We know the original mouse location when
                    the capturing started (see 'mousePressed' implementation), ie 'mouseLocation',
                    as well as the mouse location of the event. Thus subtracting them gives us the
                    relative movement of the mouse which we add to the grid. Both locations are on
                    the same coordinate system (ie screen coordinates). Note that the y axis is
                    inverted with respect to the component (we assume that the y coordinate in the
                    grid grows larger as we go upwards).*/
                    final Point currentMouseLocation = e.getLocationOnScreen();
                    final int dx = (mouseLocation.x - currentMouseLocation.x),
                              dy = (currentMouseLocation.y - mouseLocation.y);
                    
                    //Move grid:
                    final Point xy = locationModel.getXY();
                    xy.x += dx;
                    xy.y += dy;
                    locationModel.setXY(xy);
                    
                    /*Always move the mouse to original mouse location... This way the mouse is
                    reset, allowing for infinite mouse movement effect. Additionally the calculation
                    of 'dx' and 'dy' (in the next mouse event) will be valid.*/
                    robot.mouseMove(mouseLocation.x, mouseLocation.y);
                }
            }

            @Override
            public void mouseDragged(final MouseEvent e) {
                mouseMoved(e); //Assume same behaviour on drag.
            }

            //When the user presses the mouse in the component, we start mouse capturing...
            @Override
            public void mousePressed(final MouseEvent e) {
                if (!escapeAction.isEnabled()) {
                    escapeAction.setEnabled(true);
                    
                    /*Initialize the original mouse location as the center of the component and, of
                    course move to it:*/
                    final Component source = e.getComponent();
                    mouseLocation = new Point(source.getLocationOnScreen());
                    mouseLocation.x += (source.getWidth() / 2);
                    mouseLocation.y += (source.getHeight() / 2);
                    robot.mouseMove(mouseLocation.x, mouseLocation.y);
                }
            }
        };
        c.addMouseListener(mouseListener);
        c.addMouseMotionListener(mouseListener);
        c.setFocusable(true); //Mandatory.
        
        //Add escape Key Binding:
        final Object key = new Object();
        c.getInputMap().put(escapeKeyStroke, key);
        c.getActionMap().put(key, escapeAction);

        return escapeAction;
    }
    
    public static void main(final String[] args) {
        SwingUtilities.invokeLater(() -&gt; {
            //Will be used as a key binding which stops mouse capturing:
            final KeyStroke escape = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
            
            //The following 3 objects will be properly initialized after adding listeners...
            final IntXYModel locationModel = new DefaultIntXYModel(new Point(-1, -1));
            final JLabel locationLabel = new JLabel(),
                         infoLabel = new JLabel();
            
            final DrawPanel area = new DrawPanel(locationModel, new DefaultIntXYModel(new Point(300, 200)));
            try {
                final Action escapeAction = addInfiniteMouseMovement(area, locationModel, escape);
                escapeAction.addPropertyChangeListener(e -&gt; {
                    if (Objects.equals(e.getPropertyName(), &quot;enabled&quot;))
                        infoLabel.setText(
                                ((Boolean) e.getNewValue())
                                ? &quot;Stop mouse capture key: &quot; + escape
                                : &quot;Left click inside the grid to capture the mouse!&quot;
                        );
                });

                //We need to start the program without capturing the mouse (and also initialize 'infoLabel', because of the listener):
                escapeAction.setEnabled(false);

                locationModel.addPropertyChangeListener(IntXYModel.PROPERTY_XY, e -&gt; {
                    final Point location = (Point) e.getNewValue();
                    locationLabel.setText(String.format(&quot;Location: (%+06d, %+06d)&quot;, location.x, location.y));
                });

                //Grid starts at location (0,0) supposedly (and also the text of 'locationLabel' is initialized, because of the listener):
                locationModel.setXY(new Point());

                //Just a button to reset the grid location to its origin:
                final JButton resetGrid = new JButton(&quot;Reset grid&quot;);
                resetGrid.addActionListener(e -&gt; locationModel.setXY(new Point()));
                
                //Create frame contents' panels:
                final JPanel pageStart = new JPanel(new FlowLayout(FlowLayout.LEADING));
                pageStart.add(resetGrid);
                pageStart.add(infoLabel);
                final JPanel contents = new JPanel(new BorderLayout());
                contents.add(area, BorderLayout.CENTER);
                contents.add(pageStart, BorderLayout.PAGE_START);
                contents.add(locationLabel, BorderLayout.PAGE_END);

                //Create and show frame:
                final JFrame frame = new JFrame(&quot;Infinite mouse move 2D&quot;);
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.add(contents);
                frame.pack();
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
            }
            catch (final AWTException awtException) {
                awtException.printStackTrace();
            }
        });
    }
}
</code></pre>
<p>The above code is an MVC design attempt to approach the problem, where <em>grid</em> is assumed to be the 2D map which the user sees in the drawing panel. At some point the deltas are added to the grid's location, moving the grid. I think this could be changed to degrees of sight in a 3D game for example in your case. Click inside the drawing panel to start mouse capturing and press <kbd>ESCAPE</kbd> to stop capturing. The code is documented to guide the reader through.</p>
"
26,37991946,146,28538163,aaa,true,3,1734175999,1734175999,79280554,79280493,"<ul>
<li>You've appended all numbers into <code>StringBuilder</code> but printed the result only once after the loop, which outputs the entire sequence in one single line, not step-by-step as you want.</li>
<li>Also, the numbers were appended directly without any space, resulting in a single concatenated string like 12345</li>
</ul>
<p>Here is the corrected version:</p>
<pre><code>import java.util.Scanner;

public class Series {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print(&quot;Insert number: &quot;);
        int a = sc.nextInt();
        sc.close();

        StringBuilder sb = new StringBuilder();
        for (int i = 1; i &lt;= a; i++) {
            sb.append(i).append(&quot; &quot;);
            System.out.println(sb.toString().trim());
        }
    }
}
</code></pre>
<h3>Result</h3>
<pre><code>Insert number: 10
1
1 2
1 2 3
1 2 3 4
1 2 3 4 5
1 2 3 4 5 6
1 2 3 4 5 6 7
1 2 3 4 5 6 7 8
1 2 3 4 5 6 7 8 9
1 2 3 4 5 6 7 8 9 10
</code></pre>
"
27,6383069,76,4951785,Cameron Browne,false,0,1734174543,1734174543,79280516,1273688,"<p>The following approach works for me with Java 11 and Graphics2D:</p>
<pre><code>final Area inverted = new Area(new Rectangle(0, 0, getWidth(), getHeight()));
inverted.subtract(new Area(g2d.getClip()));
g2d.setClip(inverted);
</code></pre>
"
28,14406,4540,29620,banjollity,true,2,1250354790,1250322854,1281418,1273688,"<p>I have a <a href=""https://stackoverflow.com/questions/1241253/inside-clipping-with-java-graphics/1241731#1241731"">similar answer</a> on the other question too, which is to use a polygon as an AWT clip. Maybe this is supported in J2ME? You'll need to know the bounds of the rectangle you want to exclude, and the outer bounds of your drawing area.</p>

<pre>
+-------------------+
| clip drawing area |
+---+-----------+   |
|   | excluded  |   |
|   |   area    |   |
|   +-----------+   |
|                   |
+-------------------+
</pre>

<hr>

<p>EDIT FROM OP.</p>

<p>This answer worked for me and the API's are supported on J2ME.  The answer of the other question appears to have one mistake - the set of coordinates needs to start a the point on the outer-left and inner top in order to create an enclosed polygon.  My final code which worked follows:</p>

<p>To create a clipping Shape, I used this method:</p>

<pre><code>static public Shape getOutsideEdge(Graphics gc, Rectangle bb, int top, int lft, int btm, int rgt) {
    int                                 ot=bb.y            , it=(ot+top);
    int                                 ol=bb.x            , il=(ol+lft);
    int                                 ob=(bb.y+bb.height), ib=(ob-btm);
    int                                 or=(bb.x+bb.width ), ir=(or-rgt);

    return new Polygon(
     new int[]{ ol, ol, or, or, ol, ol,   il, ir, ir, il, il },
     new int[]{ it, ot, ot, ob, ob, it,   it, it, ib, ib, it },
     11
     );
    }
</code></pre>

<p>which I set into the Graphics context and then filled my rectangle:</p>

<pre><code>Rectangle tmp=new Rectangle(px,py,pw,ph);
gc.setClip(getOutsideEdge(gc,tmp,thickness,thickness,thickness,thickness));
gc.fillRoundRect(px,py,pw,ph,RADIUS,RADIUS);
</code></pre>

<p>and then I created the illusion of rounded inside corners by painting a single dot in each corner:</p>

<pre><code>gc.setClip(px,py,pw,ph);
gc.drawLine((px   +thickness  ),(py   +thickness  ),(px   +thickness  ),(py   +thickness  ));
gc.drawLine((px+pw-thickness-1),(py   +thickness  ),(px+pw-thickness-1),(py   +thickness  ));
gc.drawLine((px   +thickness  ),(py+ph-thickness-1),(px   +thickness  ),(py+ph-thickness-1));
gc.drawLine((px+pw-thickness-1),(py+ph-thickness-1),(px+pw-thickness-1),(py+ph-thickness-1));
</code></pre>
"
29,22694,11576,56242,Savvas Dalkitsis,false,1,1250196255,1250187594,1273711,1273688,"<p>Please check my answer on <a href=""https://stackoverflow.com/questions/1241253/inside-clipping-with-java-graphics/1241748#1241748"">this</a> question. It is very similar.</p>

<p>EDIT: you might want to check if AlphaComposite is available in j2me. In Java you can simulate the clip by changing the alpha composite mode (i can't remember to which exactly i think its srcIn) and by painting on an image with black and white areas. You might want to check it out.</p>
"
39,31518,36281,86604,Ingo,false,7,1382474510,1382474029,19527775,19527695,"<p>The two expressions <code>x++</code> and <code>x=x+1</code> will not give the same result, your professor is wrong (or you confused this with <code>++x</code>, which is again different).
To see this</p>

<pre><code>void notthesame() {
    int i = 0;
    System.out.println(i = i + 1);
    i = 0;
    System.out.println(i++);
    System.out.println(""See?"");
}
</code></pre>

<p>Hence, the question for bytecode is meaningless, because 2 different computations can't have the same bytecode.</p>
"
60,13973190,121,10091199,Leonardo,false,9,1683927337,1683927337,76240069,50563593,"<p>In my case
I Had two times the same identifier for jsonProperty in my dto class
When I made the request return:
&quot;Content type 'application/json;charset=UTF-8&quot;
Not sure why return that error but once I changed the identifier it works.</p>
<p><a href=""https://i.sstatic.net/zeSBb.png"" rel=""noreferrer""><img src=""https://i.sstatic.net/zeSBb.png"" alt=""enter image description here"" /></a></p>
"
30,38321090,246,28712954,Joas Coder,true,18,1734172917,1734009906,79275283,79275170,"<p>GraalVM is using a brand new JIT implementation written in Java. I wouldn't say it is better or worse than the HotSpot C2 JIT compiler, which by the way is very old and written in C++. As Adam Ruka says in <a href=""https://www.endoflineblog.com/graal-truffle-tutorial-part-0-what-is-truffle"" rel=""nofollow noreferrer"">this blog post</a>:</p>
<blockquote>
<p>The JIT compiler that is used in most distributions of the JVM is
HotSpot. It’s the first Java JIT compiler, and thus its codebase is
quite old. It’s also written in C++; and since a JIT compiler is a
very complex piece of technology, C++’s unmanaged nature means every
potential bug in its code can lead to very serious JVM issues, like
runtime crashes, security vulnerabilities, or memory leaks. All of
those factors mean that developing HotSpot is so difficult that only a
few experts in the world can realistically do it. This slow pace of
development means that HotSpot lags behind the current state of the
art when it comes to supporting all of the newest optimizations.</p>
</blockquote>
<p>But not all is lost; you can use the Graal JIT compiler with the latest Oracle JVM 23:</p>
<pre class=""lang-none prettyprint-override""><code>-XX:+UnlockExperimentalVMOptions -XX:+UseJVMCICompiler
</code></pre>
<p>If you run your code with that option you will see that it runs very fast.</p>
<hr />
<p>For the record, here are my results using <a href=""https://www.github.com/coralblocks/CoralBench"" rel=""nofollow noreferrer"">CoralBench</a>:</p>
<h3>HotSpot C2 JIT</h3>
<pre class=""lang-none prettyprint-override""><code>Measurements: 10,000,000 | Warm-Up: 0 | Iterations: 10,000,000
Avg Time: 376.860 nanos | Min Time: 125.000 nanos | Max Time: 151.625 micros
75% = [avg: 368.000 nanos, max: 375.000 nanos]
90% = [avg: 369.000 nanos, max: 416.000 nanos]
99% = [avg: 374.000 nanos, max: 500.000 nanos]
99.9% = [avg: 375.000 nanos, max: 583.000 nanos]
99.99% = [avg: 375.000 nanos, max: 5.083 micros]
99.999% = [avg: 376.000 nanos, max: 16.875 micros]
</code></pre>
<h3>HotSpot Graal JIT</h3>
<pre class=""lang-none prettyprint-override""><code>Measurements: 10,000,000 | Warm-Up: 0 | Iterations: 10,000,000
Avg Time: 8.190 nanos | Min Time: 0.000 nano | Max Time: 161.000 micros
75% = [avg: 0.000 nano, max: 0.000 nano]
90% = [avg: 0.000 nano, max: 41.000 nanos]
99% = [avg: 4.000 nanos, max: 42.000 nanos]
99.9% = [avg: 5.000 nanos, max: 42.000 nanos]
99.99% = [avg: 5.000 nanos, max: 21.708 micros]
99.999% = [avg: 7.000 nanos, max: 24.625 micros]
</code></pre>
<h3>Semeru/OpenJ9 JIT (from IBM)</h3>
<pre class=""lang-none prettyprint-override""><code>Measurements: 10,000,000 | Warm-Up: 0 | Iterations: 10,000,000
Avg Time: 3.354 micros | Min Time: 3.166 micros | Max Time: 2.390 millis
75% = [avg: 3.286 micros, max: 3.292 micros]
90% = [avg: 3.292 micros, max: 3.334 micros]
99% = [avg: 3.305 micros, max: 4.500 micros]
99.9% = [avg: 3.336 micros, max: 12.458 micros]
99.99% = [avg: 3.347 micros, max: 19.958 micros]
99.999% = [avg: 3.350 micros, max: 106.250 micros]
</code></pre>
"
31,13863832,3504,10008771,Edward Aung,false,3,1558662352,1558662352,56284867,56246243,"<p>The first function </p>

<pre><code>public HeightfieldTerrainShape(int heightStickWidth, int heightStickLength, byte[] heightfieldData, float heightScale, float minHeight, float maxHeight, int upAxis, PHY_ScalarType heightDataType, boolean flipQuadEdges)
</code></pre>

<p>is the preferred on according to documentation <a href=""https://pybullet.org/Bullet/BulletFull/classbtHeightfieldTerrainShape.html#a90d823ba5f44871a0bcfce0174177223"" rel=""nofollow noreferrer"">https://pybullet.org/Bullet/BulletFull/classbtHeightfieldTerrainShape.html#a90d823ba5f44871a0bcfce0174177223</a>. </p>

<p>Going through the documentation (and the cpp code), it seems like the rectangular size for atomic rectangular surfaces which represent the surface (terrain) you are defining.</p>

<p>For example, if your width and height are 1 and your terrain is 10 x 10 (x and y), there will be 10 x 10 = 100 such rectangles that is representing your terrain. </p>
"
32,15144230,5903,10928439,Simon Jacobs,true,2,1734170263,1734113171,79279218,79278992,"<p>You want to add a directory to your <code>test</code> source set. In your build file:</p>
<pre><code>// Groovy DSL
java.sourceSets.test.java.srcDirs('src/testfx/java')

// Kotlin DSL, shortening further per @Slaw comment
java.sourceSets.test { java.srcDirs(&quot;src/testfx/java&quot;) }
</code></pre>
"
33,38371663,3,28739931,Amelia Gruber,false,0,1734170083,1733947761,79273062,17113460,"<h2>java.time</h2>
<p>Use java.time, the modern Java date and time API, for all of your date and time work. I will show you that this is much simpler than the accepted answer.</p>
<p><strong>Edit:</strong></p>
<p>To add days correctly to the current point in time taking summer time transitions and other time anomalies into account, we need to add 4 days to today’s date. After that (or before that, depending on exact requirements) we can add the hours, minutes and seconds.</p>
<h2>ZoneId, ZonedDateTime and Duration</h2>
<p>Your string in format <code>HH:mm:ss</code> denotes an amount of time, neither a date nor a time of day. Therefore parse it into a <code>Duration</code> object, not into a date-time object.</p>
<p>The <code>Duration</code> class can parse strings in ISO 8601 format only. So my trick is to convert your string into that format. ISO 8601 durations go like for example <code>PT15H14M15S</code> for 15 hours 14 minutes 15 seconds. Think P for period and T marking the start of the time-based part (as opposed to any date-based part of years, months, weeks and/or days).</p>
<p>I am using the following method to add the contents of your string to a <code>ZonedDateTime</code>. A <code>ZonedDateTime</code> holds the date and time in a specific time zone.</p>
<pre><code>public static ZonedDateTime addTimeFromString(ZonedDateTime dateTime, String timeString) {
    if (timeString.length() &gt; 8) {  // x days HH:mm:ss
        String[] daysTime = timeString.split(&quot; days &quot;);
        dateTime = dateTime.plusDays(Integer.parseInt(daysTime[0]));
        timeString = daysTime[1];
    }

    // Now timeString is HH:mm:ss

    var isoDurationString = timeString.replaceFirst(
            &quot;^(\\d{2}):(\\d{2}):(\\d{2})$&quot;, &quot;PT$1H$2M$3S&quot;);
    var duration = Duration.parse(isoDurationString);
    return dateTime.plus(duration);
}
</code></pre>
<p>Let’s try this method out.</p>
<pre><code>    var now = ZonedDateTime.now(ZoneId.of(&quot;America/Asuncion&quot;));
    System.out.println(&quot;Time now:                   &quot; + now);

    System.out.println(&quot;Time after 14:21:15:        &quot;
            + addTimeFromString(now, &quot;14:21:15&quot;));

    System.out.println(&quot;Time after 4 days 15:14:15: &quot;
            + addTimeFromString(now, &quot;4 days 15:14:15&quot;));
</code></pre>
<p>Please substitute your desired time zone instead of America/Asuncion. To use the JVM’s default time zone specify <code>ZoneId.systemDefault()</code>.</p>
<p>When I ran the above snippet just now, the output was:</p>
<pre class=""lang-none prettyprint-override""><code>Time now:                   2024-12-14T06:48:16.216672420-03:00[America/Asuncion]
Time after 14:21:15:        2024-12-14T21:09:31.216672420-03:00[America/Asuncion]
Time after 4 days 15:14:15: 2024-12-18T22:02:31.216672420-03:00[America/Asuncion]
</code></pre>
<p><strong>Original code follows.</strong></p>
<pre><code>public static Duration parseDuration(String durationString) {
    String isoDurationString;
    if (durationString.length() &lt;= 8) { // HH:mm:ss
        isoDurationString
                = durationString.replaceFirst(&quot;^(\\d{2}):(\\d{2}):(\\d{2})$&quot;, &quot;PT$1H$2M$3S&quot;);
    } else { // x days HH:mm:ss
        isoDurationString
                = durationString.replaceFirst(&quot;^(\\d+) days (\\d{2}):(\\d{2}):(\\d{2})$&quot;,
                        &quot;P$1DT$2H$3M$4S&quot;);
    }
    return Duration.parse(isoDurationString);
}
</code></pre>
<p>Let’s try this method out.</p>
<pre><code>    ZonedDateTime now = ZonedDateTime.now(ZoneId.of(&quot;America/Asuncion&quot;));
    System.out.println(&quot;Time now:   &quot; + now);

    Duration duration1 = parseDuration(&quot;14:21:15&quot;);
    System.out.println(&quot;Delay:      &quot; + duration1);
    System.out.println(&quot;Time after: &quot; + now.plus(duration1));

    Duration duration2 = parseDuration(&quot;4 days 15:14:15&quot;);
    System.out.println(&quot;Delay:      &quot; + duration2);
    System.out.println(&quot;Time after: &quot; + now.plus(duration2));
</code></pre>
<p>Again please substitute your desired time zone.</p>
<p>When I ran the above snippet just now, the output was:</p>
<pre class=""lang-none prettyprint-override""><code>Time now:   2024-12-11T17:08:21.290431517-03:00[America/Asuncion]
Delay:      PT14H21M15S
Time after: 2024-12-12T07:29:36.290431517-03:00[America/Asuncion]
Delay:      PT111H14M15S
Time after: 2024-12-16T08:22:36.290431517-03:00[America/Asuncion]
</code></pre>
<p>The latter delay is printed as PT111H14M15S, that is, 111 hours 14 minutes 15 seconds. This is how <code>Duration.toString()</code> renders it, which for our purpose isn’t perfect. Calculating backward the 111 hours equal 4 days 15 hours (assuming a day is 24 hours), so the duration is correct.</p>
<p>The <code>Duration</code> class calculates a day as always 24 hours, which isn’t always correct. To take summer time transitions and other time anomalies into account you would need to add 4 days to today’s date, not just a <code>Duration</code> of 4 days, which will always be taken to be 96 hours.</p>
<h2>Link</h2>
<p><a href=""https://docs.oracle.com/javase/tutorial/datetime/"" rel=""nofollow noreferrer"">The Java™ Tutorials: Trail: Date Time</a> explaining how to use java.time</p>
"
34,322981,335881,642706,Basil Bourque,false,1,1733873469,1733873162,79270087,17113460,"<h2>tl;dr</h2>
<p>Ideally, communicate the span of time in standard format rather than your custom format.</p>
<pre class=""lang-java prettyprint-override""><code>Instant
.now()
.plus(
    Duration.parse( &quot;PT1H30M&quot; ) 
)
</code></pre>
<p>Otherwise, hack it a bit to parse.</p>
<pre class=""lang-java prettyprint-override""><code>Instant
.now()
.plus(
    Duration
    .ofDays ( 
        Integer.parseInt( input.split( &quot; days &quot; )[0] ) 
    )
    .plus( 
        Duration.between ( 
            LocalTime.MIN , 
            LocalTime.parse( input.split( &quot; days &quot; )[1] ) 
        ) 
    )
)
</code></pre>
<h2>Date-with-time versus elapsed time</h2>
<p>You seem to be abusing a moment value, contorting it to serve as a span-of-time.</p>
<p>Also, you are using terribly-flawed legacy classes that were supplanted by the modern <em>java.time</em> classes defined in JSR 310, and built into Java 8+. Never use <code>Date</code>, <code>Calendar</code>, nor <code>SimpleDateFormat</code>.</p>
<p>Fortunately <em>java.time</em> provides classes for both concepts:</p>
<ul>
<li>A moment, a point on the timeline: <code>Instant</code>, <code>OffsetDateTime</code>, or <code>ZonedDateTime</code>.</li>
<li>Span of time: <code>Duration</code> for scale of hours-minutes-seconds-nanos, and <code>Period</code> for scale of years-months-days.</li>
</ul>
<p>You said:</p>
<blockquote>
<p>I have a string that is usually in format &quot;HH:mm:ss&quot;, but can also appear as &quot;x days HH:mm:ss&quot;.</p>
</blockquote>
<p>Educate the publisher of your data about the <a href=""https://en.wikipedia.org/wiki/ISO_8601#Durations"" rel=""nofollow noreferrer"">ISO 8601</a> standard for text expressing a span-of-time: <code>PnYnMnDTnHnMnS</code>. The <code>P</code> marks the beginning. The <code>T</code> separates the years-months-days from the hours-minutes-seconds. So an hour and a half would be <code>PT1H30M</code>.</p>
<p>You can directly parse ISO 8601 text by default with the <em>java.time</em> classes.</p>
<pre><code>Duration d = Duration.parse( &quot;PT1H30M&quot; ) ;
</code></pre>
<p>To parse your custom format rather than standard format, we must do a bit of hacking.</p>
<pre class=""lang-java prettyprint-override""><code>String[] parts = input.split( &quot; days &quot; ) ;
int days = Integer.parseInt( parts[0] );
LocalTime lt = LocalTime.parse( parts[1] ) ;  // Not really a time-of-day, but we will fake it.
</code></pre>
<p>Combine those into a <code>Duration</code>.</p>
<pre class=""lang-java prettyprint-override""><code>Duration duration = Duration.ofDays ( days ) ;
duration = duration.plus ( Duration.between ( LocalTime.MIN , lt ) ) ; 
</code></pre>
<p>Capture the current moment.</p>
<pre class=""lang-java prettyprint-override""><code>Instant now = Instant.now() ;
</code></pre>
<p>Add your span-of-time.</p>
<pre class=""lang-java prettyprint-override""><code>Instant later = now.plus ( duration ) ;
</code></pre>
"
35,204659,38240,453005,DwB,true,1,1371232142,1371232142,17114418,17113460,"<p>Highlights:</p>

<ul>
<li>Use <code>String.split</code> to determine if you have a time or a duration and a time.</li>
<li>assume the date duration starts with the current date.</li>
<li>duration will be current date + (duration -1) more days (example does not validate duration).</li>
<li>Use <code>Calendar</code> for date stuff.</li>
<li><code>Calendar.add(Calendar.DAY_OF_YEAR, xxx)</code> gives the end date.</li>
</ul>

<p>Try something like this:</p>

<pre><code>public class LearnDate
{
    private static DateFormat timeFormat = new SimpleDateFormat(""HH:mm:ss"");

    public static void main(final String[] arguments)
        throws ParseException
    {
        final String input1 = ""14:21:15"";
        final String input2 = ""4 days 15:14:15"";

        printDateInfo(input1);
        printDateInfo(input2);
    }

    private static String formatCalendar(final Calendar input)
    {
        return
            """" +
            input.get(Calendar.DAY_OF_MONTH) +
            monthName(input.get(Calendar.MONTH)) +
            input.get(Calendar.YEAR) +
            "" "" +
            timeFormat.format(input.getTime());
    }

    private static String monthName(final int month)
    {
        switch (month)
        {
            case Calendar.JANUARY:
                return ""Jan"";

            case Calendar.FEBRUARY:
                return ""Feb"";

            case Calendar.MARCH:
                return ""Mar"";

            case Calendar.APRIL:
                return ""Apr"";

            case Calendar.MAY:
                return ""May"";

            case Calendar.JUNE:
                return ""Jun"";

            case Calendar.JULY:
                return ""Jul"";

            default:
                return ""blah"";
        }
    }

    private static void printDateInfo(final String input)
        throws ParseException
    {
        String[] parsedInput = input.split("" "");
        Date time = null;

        if (parsedInput != null)
        {
            switch (parsedInput.length)
            {
                case 1:
                    time = timeFormat.parse(parsedInput[0]);
                    System.out.println(""Just Time: "" + timeFormat.format(time));
                    break;

                case 3:
                {
                    int duration;
                    Calendar end = Calendar.getInstance();
                    Calendar start = Calendar.getInstance();
                    Calendar timeValue = Calendar.getInstance();

                    time = timeFormat.parse(parsedInput[2]);
                    System.out.println(""Time: "" + timeFormat.format(time));
                    System.out.println(""Duration: "" + parsedInput[0] + "" days."");

                    timeValue.setTime(time);
                    transferTime(start, timeValue);
                    transferTime(end, timeValue);

                    duration = Integer.parseInt(parsedInput[0]) - 1;
                    end.add(Calendar.DAY_OF_YEAR, duration);

                    System.out.println(""Start: "" + formatCalendar(start));
                    System.out.println(""  End: "" + formatCalendar(end));
                }
                    break;

                default:
                    System.out.println(""Unrecognized format: "" + input);
                    break;
            }
        }
    }

    private static void transferTime(
        final Calendar destination,
        final Calendar source)
    {
        destination.set(Calendar.HOUR_OF_DAY, source.get(Calendar.HOUR_OF_DAY));
        destination.set(Calendar.MINUTE, source.get(Calendar.MINUTE));
        destination.set(Calendar.SECOND, source.get(Calendar.SECOND));
    }
}</code></pre>
"
36,286681,36800,586086,Andrew Mao,false,3,1371228742,1371228742,17113553,17113460,"<p>You can't add two <code>Date</code>s directly using the <code>+</code> operator. You can, however, add a certain number of hours or minutes, or add their timestamps.</p>

<p>However, <a href=""https://stackoverflow.com/a/1555307/586086"">there seems to be a general consensus that the JDK Time API is broken</a>. They recommend using Joda Time, which provides additional features, such as adding a <code>Period</code> or <code>Duration</code> to a <code>DateTime</code>:</p>

<pre><code>DateTime dt = new DateTime(2005, 3, 26, 12, 0, 0, 0);
DateTime plusPeriod = dt.plus(Period.days(1));
DateTime plusDuration = dt.plus(new Duration(24L*60L*60L*1000L));
</code></pre>

<p>For more information see <a href=""http://joda-time.sourceforge.net/quickstart.html"" rel=""nofollow noreferrer"">http://joda-time.sourceforge.net/quickstart.html</a></p>
"
37,119671,17017,311525,Scott,false,1,1371228719,1371228719,17113546,17113460,"<p>You'll want to try something like this:</p>

<pre><code>Date now = new Date();
Date delay = new SimpleDateFormat(""HH:mm:ss"").parse(""02:15:30"");
Date after = new Date(now.getTime() + delay.getTime());
</code></pre>
"
423,362885,39386,706317,ZhekaKozlov,false,5,1522905042,1522904253,49664430,31602425,"<p>Use Guava:</p>

<pre><code>Streams
    .mapWithIndex(stream, SimpleImmutableEntry::new)
    .filter(entry -&gt; entry.getValue() % 3 == 0)
    .map(Entry::getKey)
    .collect(Collectors.toList());
</code></pre>
"
40,1853886,212945,1679863,Rohit Jain,true,29,1382527879,1382473970,19527749,19527695,"<blockquote>
  <p>My professor recently said that although x = x + 1 and x++ will obviously give the same result</p>
</blockquote>

<p>I guess your professor perhaps meant - <em>the value of <code>x</code> after <code>x = x + 1</code> and <code>x++</code> will be same</em>. Just to re-phrase, as it seems to be creating confusion in interpreting the question.</p>

<p>Well, although the value of <code>x</code> will be same, they are different operators, and use different JVM instructions in bytecode. <code>x + 1</code> uses <a href=""http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-6.html#jvms-6.5.iadd"" rel=""noreferrer""><code>iadd</code></a> instruction, whereas <code>x++</code> uses <a href=""http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-6.html#jvms-6.5.iinc"" rel=""noreferrer""><code>iinc</code></a> instruction. Although this is compiler dependent. A compiler is free to use a different set of instructions for a particular operation. I've checked this against <code>javac</code> compiler.</p>

<p>For <em>eclipse</em> compiler, from one of the comment below from @Holger:</p>

<blockquote>
  <p>I just tested it with my eclipse and it produced <code>iinc</code> for both expressions. So I found one compiler producing the same instructions</p>
</blockquote>

<p>You can check the byte code using <code>javap</code> command. Let's consider the following class:</p>

<pre><code>class Demo {
    public static void main(String[] args) {
        int x = 5;

        x = x + 1;
        System.out.println(x);

        x++;
        System.out.println(x);
    }
} 
</code></pre>

<p>Compile the above source file, and run the following command:</p>

<pre><code>javap -c Demo
</code></pre>

<p>The code will be compiled to the following bytecode (just showing the <code>main</code> method):</p>

<pre><code> public static void main(java.lang.String[]);
   Code:
      0: iconst_5
      1: istore_1
      2: iload_1
      3: iconst_1
      4: iadd
      5: istore_1
      6: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
      9: iload_1
     10: invokevirtual #3                  // Method java/io/PrintStream.println:(I)V
     13: iinc          1, 1
     16: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
     19: iload_1
     20: invokevirtual #3                  // Method java/io/PrintStream.println:(I)V
     23: return
</code></pre>
"
41,1119690,20482,1108305,M. Justin,false,0,1734123338,1734115759,79279306,68638213,"<pre class=""lang-java prettyprint-override""><code>Set&lt;Integer&gt; twoIds = twoColl.stream().map(TypeTwo::getId)
        .collect(Collectors.toSet());

for(TypeOne one : oneColl) {
    if (twoIds.contains(one.getId())) {
        System.out.println(one.getId());
    }
}
</code></pre>
<h1>Explanation</h1>
<p>For each element in <code>oneColl</code>, your implementation potentially iterates through all elements of <code>twoColl</code>.  So if <code>oneColl</code> is size m and <code>twoColl</code> is size n, your implementation has time complexity of O(m × n).</p>
<p>This is changed to linear time of O(m + n) by replacing the inner loop by a lookup in a collection type that has linear lookup time, as is the case with many <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/util/Set.html"" rel=""nofollow noreferrer""><code>Set</code></a> and <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/util/Set.html"" rel=""nofollow noreferrer""><code>Map</code></a> implementations.</p>
<p>Copying the elements into a new <code>HashSet</code> is O(n), checking whether an element is in the <code>HashSet</code> is O(1), and looping over all the elements in <code>oneColl</code> is O(m).  That gives us O(n + m × 1) = O(m + n).</p>
<h1>Timing Example</h1>
<p>As a concrete example, take the case where <code>oneColl</code> and <code>twoColl</code> each have 50,000 elements, and the ID values in <code>oneColl</code> are all in <code>twoColl</code> (and vice versa).  And let's also ignore the time taken by <code>println</code>, since that's not insignificant and is the same amount of time in both implementations as it's called the same number of times.</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th><strong>Implementation</strong></th>
<th><strong>Time</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>Two for each loops</td>
<td>4908 ms</td>
</tr>
<tr>
<td><code>Set</code> lookup</td>
<td>11 ms</td>
</tr>
</tbody>
</table></div>
<p>The relative difference between the two timings gets exponentially larger as the collection sizes increase.</p>
"
42,13993199,175,10362945,Sagar,false,1,1714993554,1714993554,78436188,68638213,"<p>If the property by which the collection elements are being compared is <code>int</code> we can use bitset api for better performance</p>
<pre><code>        BitSet setOne = new BitSet();
        BitSet setTwo = new BitSet();

        List&lt;TypeOne&gt; l1 = java.util.Arrays.asList(new TypeOne(7),new TypeOne(1), new TypeOne(88));
        List&lt;TypeTwo&gt; l2 = java.util.Arrays.asList(new TypeTwo(1), new TypeTwo(98),new TypeTwo(7));

        l1.stream()
                .map(t-&gt;t.id)
                .forEach(setOne::set);
        
        for (TypeTwo typeTwo : l2) {
            setTwo.set(typeTwo.id);
        }
        setOne.and(setTwo);//find the commons in setOne
        setOne.stream().forEach(i-&gt; System.out.println(i));
        
</code></pre>
"
43,322981,335881,642706,Basil Bourque,true,1,1734164949,1628008224,68639723,68638213,"<h2>tl;dr</h2>
<pre><code>ones.stream().forEach(
    one -&gt; System.out.println(
        twos.stream().filter( two -&gt; two.getId() == one.getId() ).findAny().toString()
    )
)
</code></pre>
<h2>Details</h2>
<p>I assume sorting as a <code>NavigableSet</code> will improve performance of our searching, though I’ve not verified this attempt at optimization works.</p>
<pre><code>NavigableSet &lt; TypeOne &gt; ones = new TreeSet &lt;&gt;( Comparator.comparingInt( TypeOne :: getId ) );
ones.addAll( collectionOfOnes ) ;

NavigableSet &lt; TypeTwo &gt; twos = new TreeSet &lt;&gt;( Comparator.comparingInt( TypeTwo :: getId ) );
twos.addAll( collectionOfTwos ) ;
</code></pre>
<p>Loop one navigable set while searching for a match in the other.</p>
<pre class=""lang-java prettyprint-override""><code>for( TypeOne one : ones )
{
    Optional&lt;TypeTwo&gt; optionalTwo = twos.stream().filter( two -&gt; two.getId() == one.getId() ).findAny() ;
    // handle your Optional which may or may not contain an object. 
}
</code></pre>
<h3><code>stream</code> vs <code>parallelStream</code></h3>
<p>Here is a full code example.</p>
<pre class=""lang-java prettyprint-override""><code>record TypeOne( int id ) { }
record TypeTwo( int id ) { }

final int limit = 50_000;
SequencedCollection &lt; TypeOne &gt; sourceOfOnes = IntStream.rangeClosed ( 1 , limit ).mapToObj ( TypeOne :: new ).toList ( );
SequencedCollection &lt; TypeTwo &gt; sourceOfTwos = IntStream.rangeClosed ( 1 , limit ).mapToObj ( TypeTwo :: new ).toList ( );

NavigableSet &lt; TypeOne &gt; ones = new TreeSet &lt;&gt; ( Comparator.comparingInt ( TypeOne :: id ) );
ones.addAll ( sourceOfOnes );

NavigableSet &lt; TypeTwo &gt; twos = new TreeSet &lt;&gt; ( Comparator.comparingInt ( TypeTwo :: id ) );
twos.addAll ( sourceOfTwos );

long start = System.nanoTime ( );
for ( TypeOne one : ones )
{
    Optional &lt; TypeTwo &gt; optionalTwo = twos.parallelStream ( ).filter ( two -&gt; two.id ( ) == one.id ( ) ).findAny ( );
    if ( optionalTwo.isEmpty ( ) )
    {
        System.out.println ( &quot;FAILED to find &quot; + one );
    }
}
Duration elapsed = Duration.ofNanos ( System.nanoTime ( ) - start );
System.out.println ( &quot;elapsed = &quot; + elapsed );
</code></pre>
<p>No fancy testing, I just executed this around five times on a MacBook Pro (18,1) with Apple M1 Pro chip, 10 cores (8 performance and 2 efficiency), 16 GB RAM, macOS Sonoma 14.7.2, Java 23.0.1, IntelliJ IDEA 2024.3.1 (Ultimate Edition), relatively quiet (little other CPU use). I ran two batches of tests, each batch runs the stream in one thread versus in parallel:</p>
<ul>
<li><code>twos.stream ( )</code></li>
<li><code>twos.parallelStream ( )</code></li>
</ul>
<p>Results:</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th style=""text-align: right;""><code>stream</code></th>
<th style=""text-align: left;""><code>parallelStream</code></th>
</tr>
</thead>
<tbody>
<tr>
<td style=""text-align: right;"">≈ 7.5 seconds</td>
<td style=""text-align: left;"">≈ 4 seconds</td>
</tr>
</tbody>
</table></div>
"
44,2015465,1,1802872,Juha Saarenp&#228;&#228;,false,0,1603918719,1603918719,64581204,7454330,"<p>For anyone else looking for answer to the question when dealing with different linebreaks:</p>
<pre><code>string.replaceAll(&quot;(\n|\r|\r\n)$&quot;, &quot;&quot;); // Java 7
string.replaceAll(&quot;\\R$&quot;, &quot;&quot;);          // Java 8
</code></pre>
<p>This should remove exactly the last line break and preserve all other whitespace from string and work with Unix (\n), Windows (\r\n) and old Mac (\r) line breaks: <a href=""https://stackoverflow.com/a/20056634"">https://stackoverflow.com/a/20056634</a>, <a href=""https://stackoverflow.com/a/49791415"">https://stackoverflow.com/a/49791415</a>. <code>&quot;\\R&quot;</code> is matcher introduced in Java 8 in Pattern class: <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html"" rel=""nofollow noreferrer"">https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html</a></p>
<p>This passes these tests:</p>
<pre><code>// Windows:
value = &quot;\r\n test \r\n value \r\n&quot;;
assertEquals(&quot;\r\n test \r\n value &quot;, value.replaceAll(&quot;\\R$&quot;, &quot;&quot;));

// Unix:
value = &quot;\n test \n value \n&quot;;
assertEquals(&quot;\n test \n value &quot;, value.replaceAll(&quot;\\R$&quot;, &quot;&quot;));

// Old Mac:
value = &quot;\r test \r value \r&quot;;
assertEquals(&quot;\r test \r value &quot;, value.replaceAll(&quot;\\R$&quot;, &quot;&quot;));
</code></pre>
"
45,14387497,2192,10393067,logbasex,false,0,1602127666,1602127666,64255348,7454330,"<p>Another elegant solution.</p>
<pre><code>String myString = &quot;\nLogbasex\n&quot;;
myString = org.apache.commons.lang3.StringUtils.strip(myString, &quot;\n&quot;);
</code></pre>
"
46,2168556,2834,1921115,Jobelle,false,0,1596208663,1596208663,63194624,7454330,"<p>Try this</p>
<pre><code>function replaceNewLine(str) { 
  return str.replace(/[\n\r]/g, &quot;&quot;);
}
</code></pre>
"
61,27289241,356,20807930,gdthegeek,false,0,1671522115,1671366800,74841343,50563593,"<p>I had the same issue when using <code>@PutMapping</code> and <code>@RequestBody</code> <code>MultiValueMap&lt;String,String&gt;</code>. I changed the <code>MultiValueMap</code> to Map and it worked, just like what edta had suggested above.</p>
"
62,,,,user11150317,false,0,1644789813,1644789813,71105245,50563593,"<p>Try removing charset from header Content-type, application json only, and it will probably work.</p>
"
47,219730,21496,476791,slartidan,false,4,1620896828,1596198347,63191799,7454330,"<p>If you only want to remove <em>line breaks</em> (not spaces, tabs) at <em>the beginning and end</em> of a String (not inbetween), then you can use this approach:</p>
<p>Use a regular expressions to remove carriage returns (<code>\\r</code>) and line feeds (<code>\\n</code>) from the beginning (<code>^</code>) and ending (<code>$</code>) of a string:</p>
<pre><code> s = s.replaceAll(&quot;(^[\\r\\n]+|[\\r\\n]+$)&quot;, &quot;&quot;)
</code></pre>
<p>Complete Example:</p>
<pre><code>public class RemoveLineBreaks {
    public static void main(String[] args) {
        var s = &quot;\nHello world\nHello everyone\n&quot;;
        System.out.println(&quot;before: &gt;&quot;+s+&quot;&lt;&quot;);
        s = s.replaceAll(&quot;(^[\\r\\n]+|[\\r\\n]+$)&quot;, &quot;&quot;);
        System.out.println(&quot;after: &gt;&quot;+s+&quot;&lt;&quot;);
    }
}
</code></pre>
<p>It outputs:</p>
<pre><code>before: &gt;
Hello world
Hello everyone
&lt;
after: &gt;Hello world
Hello everyone&lt;
</code></pre>
"
48,6169002,2528,4807875,Alexander Samoylov,false,27,1582630208,1582558575,60379251,7454330,"<p>This Java code does exactly what is asked in the title of the question, that is ""remove newlines from beginning and end of a string-java"":</p>

<pre><code>String.replaceAll(""^[\n\r]"", """").replaceAll(""[\n\r]$"", """")
</code></pre>

<p>Remove newlines only from the end of the line:</p>

<pre><code>String.replaceAll(""[\n\r]$"", """")
</code></pre>

<p>Remove newlines only from the beginning of the line:</p>

<pre><code>String.replaceAll(""^[\n\r]"", """")
</code></pre>
"
49,938677,1885,967151,Ali Rasouli,false,0,1734160284,1734160284,79280225,70971730,"<p>Follow this code:</p>
<pre><code>        var notificationManager = getSystemService(Context.NOTIFICATION_SERVICE) as
                NotificationManager
        var newNotifId = (1000000..2000000).random()// or you can change it to your uniquee id

        var builder:Notification.Builder
        var description=&quot;this is my notif description!&quot;
        var title=&quot;my custom title&quot;
        // checking if android version is greater than oreo(API 26) or not
        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {
            val channelId = &quot;thisismyapp&quot;
            builder  = Notification.Builder(_context, channelId)
                .setContentTitle(title)
                .setContentText(description)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setLargeIcon(BitmapFactory.decodeResource(_context.resources,
                    R.drawable.ic_launcher_background
                ))
        } else {

            builder = Notification.Builder(_context)
                .setContentTitle(title)
                .setContentText(desc)
                .setSmallIcon(R.mipmap.ic_launcher)
                .setLargeIcon(BitmapFactory.decodeResource(_context.resources, R.mipmap.ic_launcher))
        }
        val notifLink=&quot;https://aliras.ir&quot;//or your custom link
        val myuri = Uri.parse(notifLink)
        val browserAction = Intent(Intent.ACTION_VIEW,myuri )
        browserAction
            .addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION)
            .addFlags(Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION)
        browserAction.setData(myuri);
        browserAction.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);

        val pendingIntent =
            PendingIntent.getActivity(
                _context,
                newNotifId,
                browserAction,
                PendingIntent.FLAG_ONE_SHOT or PendingIntent.FLAG_MUTABLE
            )
        builder.setContentIntent(pendingIntent);
        _notificationManager.notify(newNotifId, builder.build())
</code></pre>
"
50,17438290,184,12640900,Pratik PSB,true,1,1643959923,1643894255,70971990,70971730,"<p><strong>You need to use <code>pending intent</code> instead of simple intent. because notification only triggers <code>pending intents</code> usually while your app is in the background.
so, please try this code.</strong></p>
<pre><code>Intent browserAction = new Intent(Intent.ACTION_VIEW, uri);
browserAction.setData(uri);
browserAction.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);

// Create the PendingIntent
PendingIntent notifyPendingIntent = PendingIntent.getActivity(
        this, 0, browserAction, PendingIntent.FLAG_UPDATE_CURRENT
);
</code></pre>
<hr />
<h2>UPDATE</h2>
<p>this answer will be useful for you. please refer to this.</p>
<h2><a href=""https://stackoverflow.com/a/43835512/12640900"">refer this</a></h2>
"
51,7017583,101,5378327,Mike,false,0,1734158771,1734158771,79280191,77676475,"<p>You no longer need to use fetchSignInMethodsForEmail as Firebase automatically returns an error if the user has already signed up or signed in with the same email. Instead, you simply need to handle the error message when trying to sign up or sign in the user, as Firebase will notify you if the email is already in use.</p>
"
52,72426,596735,209103,Frank van Puffelen,true,14,1702886989,1702860433,77676498,77676475,"<p>The <code>fetchSignInMethodsForEmail</code> was deprecated as it allows malicious users to perform an email enumeration attack on your project, and those have unfortunately become quite common. There is no workaround, as those too would be susceptible to the same type of attack.</p>
<p>For now, you can disable Firebase's email enumeration protection to ensure the <code>fetchSignInMethodsForEmail</code> method works. If that method disappears in the future though, there is no alternative API.</p>
<p>If you want to continue using a similar flow, you could store the same information in a database and create your own API on that. But keep in mind that this would once again expose your project and users to the risk of an email enumeration attack.</p>
<p>Also see:</p>
<ul>
<li>The Firebase documentation on its <a href=""https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection"" rel=""noreferrer"">email enumeration protection</a>.</li>
<li>The documentation on how to <a href=""https://cloud.google.com/identity-platform/docs/admin/email-enumeration-protection#enable"" rel=""noreferrer"">enable/disable the protection against email enumeration attacks</a>.</li>
</ul>
"
53,38430589,1,28771048,Kien Pham,false,0,1734158444,1734107905,79278997,32639866,"<p>If the methods above do not work, try launching Eclipse with the file <code>org.eclipse.equinox.launcher_1.6.900.v20240613-2009.jar</code> located in the eclipse\plugins directory.</p>
"
54,32565017,1,25303431,MJC,false,0,1716966188,1716966188,78547831,32639866,"<p>For me, I had multiple versions of Java installed in my PC. So I un-installed the un-necessary versions and it worked fine.</p>
<ol>
<li>Find out the Java version used by Eclipse, version <strong>X</strong>.</li>
<li>Go to control panel.</li>
<li>Find out the other Java versions to un-install.</li>
<li>Un-Install the java versions <strong>except X</strong></li>
</ol>
<p>It worked.</p>
"
55,4483869,1190,3647165,Michael G,false,1,1515173389,1515173389,48118487,32639866,"<p>Just Uninstall the latest Java updates from ControlPanel->Programs and Features
and Re-Open Eclipse .</p>
"
56,7774245,191,5882838,Shiv,false,1,1512544282,1512544282,47668774,32639866,"<p>SOLUTION IS SIMPLE</p>

<p>Firstly you wil come across this issue if you have uninstalled Java versions from system uninstall window. eg., I uninstalled Java 8 u151 from my machine and downloaded and installed Java 8 u152. Then it was opening with splash screens for few seconds.
Quick Fix is:</p>

<pre><code>Undo all your java version changes.
Uninstall 152 for exammple and install the original 151 version. This fixed my issue. 
</code></pre>

<blockquote>
  <p>DONT FOGET TO COPY ECLIPSE folder TO c:\program files folder.</p>
</blockquote>
"
57,8193227,314,6166898,Taher Mahodia,true,4,1479359004,1479359004,40647077,32639866,"<p>Step 1: Open Command Prompt as Administrator</p>

<p>Step 2: Change Your Directory to eclipse folder</p>

<p>Run</p>

<p>Step 3: eclipse -clean -clearPersistedState</p>

<p>Done!</p>
"
63,11169681,41,8197088,M&#248;h&#227;məđ Đąŕw&#238;čh,false,0,1734158347,1734081035,79277728,77477209,"<p>in android.manifest
under <code>&lt;application</code>
remove this line:</p>
<pre><code>android:enableOnBackInvokedCallback=&quot;true&quot;
</code></pre>
"
64,12701632,1,11799896,TurboSokol,false,0,1730915369,1730915369,79163721,77477209,"<p>Answer from Nov 2024:
Remove this <code>android:enableOnBackInvokedCallback=&quot;true&quot;</code> from your Manifest (application tags) and onBackPressed will work in regular way.</p>
"
424,1119690,20482,1108305,M. Justin,false,1,1733978440,1733517500,79259330,68911336,"<p><code>ArrayList</code> is, by design, not thread safe.  Per the class <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/util/ArrayList.html"" rel=""nofollow noreferrer"">Javadocs</a>:</p>
<blockquote>
<p><strong>Note that this implementation is not synchronized.</strong> If multiple threads access an <code>ArrayList</code> instance concurrently, and at least one of the threads modifies the list structurally, it <em>must</em> be synchronized externally. (A structural modification is any operation that adds or deletes one or more elements, or explicitly resizes the backing array; merely setting the value of an element is not a structural modification.)</p>
</blockquote>
<p>Since you are calling the <code>add</code> method from multiple threads, you are violating the usage requirements of <code>ArrayList</code>.  This in turn is causing the unexpected result.</p>
<p>To answer the question of why you're seeing the specific behavior of elements missing, let's take a look at the Java 23 OpenJDK implementation of <a href=""https://github.com/openjdk/jdk/blob/jdk-23%2B37/src/java.base/share/classes/java/util/ArrayList.java#L495"" rel=""nofollow noreferrer""><code>ArrayList.add</code></a>.  The implementation you're using may or may not be different, but regardless this is a good example of potential behavior when misusing thread-unsafe code.</p>
<blockquote>
<pre class=""lang-java prettyprint-override""><code>public class ArrayList&lt;E&gt; extends AbstractList&lt;E&gt;
        implements List&lt;E&gt;, RandomAccess, Cloneable, java.io.Serializable
{
    // [...]

    transient Object[] elementData; // non-private to simplify nested class access
    
    private int size;

    // [...]

    public boolean add(E e) {
        modCount++;
        add(e, elementData, size);
        return true;
    }
    
    private void add(E e, Object[] elementData, int s) {
        if (s == elementData.length)
            elementData = grow();
        elementData[s] = e;
        size = s + 1;
    }

    private Object[] grow() {
        return grow(size + 1);
    }

    private Object[] grow(int minCapacity) {
        int oldCapacity = elementData.length;
        if (oldCapacity &gt; 0 || elementData != DEFAULTCAPACITY_EMPTY_ELEMENTDATA) {
            int newCapacity = ArraysSupport.newLength(oldCapacity,
                    minCapacity - oldCapacity, /* minimum growth */
                    oldCapacity &gt;&gt; 1           /* preferred growth */);
            return elementData = Arrays.copyOf(elementData, newCapacity);
        } else {
            return elementData = new Object[Math.max(DEFAULT_CAPACITY, minCapacity)];
        }
    }

    // [...]
}
</code></pre>
</blockquote>
<p>Let's take the simple case, where the <code>elementData</code> array is large enough for all new elements being added, and therefore doesn't need to be resized.</p>
<p>When <code>add(e)</code> is called, the following things happen in order:</p>
<ol>
<li>The current value of the <code>size</code> field is retrieved (and is passed to <code>add(e, elementData, size)</code>); this will be the local variable <code>s</code></li>
<li>The value at <code>elementData[s]</code> is set to the new element: <code>elementData[s] = e</code></li>
<li>The size field is set to <code>s + 1</code>: <code>size = s + 1</code>.</li>
</ol>
<p>When all of this happens in a single thread, everything works as it should.  When this happens in multiple threads, race conditions can occur, as the operations of the different threads may be interleaved.</p>
<p>As an example of where things might go wrong, take threads A &amp; B that are concurrently processing the <code>add</code> method.  Let <code>elementData</code> = <code>[1, 2, null, null]</code> and <code>size</code> = 2.  Here is an ordering of operations that would result in only one of the added elements being present in the resulting list:</p>
<ol>
<li>A (size=2, elementData=[1,2,null,null]): <code>myList.add(11);</code></li>
<li>B (size=2, elementData=[1,2,null,null]): <code>myList.add(12);</code></li>
<li>A (size=2, elementData=[1,2,null,null]): <code>add(e, elementData, 11)</code></li>
<li>B (size=2, elementData=[1,2,null,null]): <code>add(e, elementData, 12)</code></li>
<li>A (size=2, elementData=[1,2,null=&gt;11,null]): <code>elementData[2] = 11</code></li>
<li>A (size=2=&gt;3, elementData=[1,2,11,null]): <code>size = 3</code></li>
<li>A (size=3, elementData=[1,2,11=&gt;12,null]): <code>elementData[2] = 12</code></li>
<li>A (size=3=&gt;3, elementData=[1,2,12,null]): <code>size = 3</code></li>
</ol>
<p>Note that despite adding two elements to an <code>ArrayList</code> of size 2, the resulting size is 3, and only one of the two elements ended up in the list.</p>
<p>Note that this is a simplified version of what's happening.  The exact behavior with multiple threads is more complicated, but it does demonstrate how thread-unsafe code can break down when used by multiple threads.</p>
"
65,26151778,373,19839635,Purple6666,false,2,1700490838,1700490838,77516676,77477209,"<p><code>on onBackPressed()</code> is deprecated for higher android versions.</p>
<p>Instead try using the onBackPressedDispatcher.
Add a call back when the activity/ fragment is created and don't forget to pass the lifercycle owner otherwise the callback won't be called, and remove it when the activity/ fragment is destroyed.
Kotlin example code:</p>
<pre><code>onBackPressedDispatcher.addCallback(owner = yourActivityOrFragment) {
    ... // your code
    finish()
}
</code></pre>
"
66,2013263,1108,1801202,theJango,false,0,1700176199,1700176199,77498507,77477209,"<p>Though it's difficult to answer without looking at the high level app structure but I will still try.</p>
<ol>
<li><strong>Fragments</strong> - If you are overriding <code>onBackPressed()</code> within the fragments that are hosted by your activity and not calling <code>super.onBackPressed()</code> or the way your fragments handle <code>onBackPressed()</code> can cause this issue.</li>
<li><strong>Super</strong> - Make sure you are calling <code>super.onBackPressed()</code> in all the overridden <code>onBackPressed()</code> methods to make sure the default behaviour remains intact.</li>
</ol>
"
67,30215938,51,23156758,Eldo Martadjaya,false,0,1734158288,1732880806,79236979,66380187,"<p>If you still wanting to use the old deprecated ButterKnife, you can still use older versions such as:</p>
<pre><code>    implementation 'com.jakewharton:butterknife:10.0.0'
annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
</code></pre>
<p>Refer to the Butterknife <a href=""https://github.com/JakeWharton/butterknife/blob/master/CHANGELOG.md"" rel=""nofollow noreferrer"">changelog</a> documentation.</p>
"
68,14096747,746,10183294,SVK,true,1,1614315599,1614315599,66380380,66380187,"<p>Please note that, as per official documentation the Butter Knife tool is now deprecated.<br />
And they have recommended to switch to <a href=""https://developer.android.com/topic/libraries/view-binding"" rel=""nofollow noreferrer"">View Binding</a>.</p>
<p>Hence, I request you to revisit your decision of using Butter Knife.</p>
<p>And in your gradle files, please ensure that below lines are added properly.<br />
Add these changes and then click on File &gt; Invalidate Cache and Restart in Android Studio.</p>
<pre><code>android {
  ...
  // Butterknife requires Java 8.
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}
</code></pre>
<p>Dependency</p>
<pre><code>dependencies {
  implementation 'com.jakewharton:butterknife:10.2.3'
  annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
}
</code></pre>
<p>If you are using Kotlin, replace annotationProcessor with kapt.</p>
<p>And to use Butter Knife in a library, please follow the steps provided in section <strong>Library Projects</strong> inside <a href=""https://github.com/JakeWharton/butterknife"" rel=""nofollow noreferrer"">official documentation</a></p>
"
69,3681121,137,3066062,nik_7,false,0,1621450630,1621450321,67609255,56913567,"<p>1)mapToInt function's main purpose is to convert current stream to Intstream, over which other Integer operations can be performed like sum,Min,max etc.</p>
<ol start=""2"">
<li><p>It's generics you can never predict what will be the input, in your case it is String, it might be double ,long or Something else.
It has been left to Developers to take care of explicit cast.</p>
</li>
<li><p>You can write your own function, here in this case it is function&lt;T,int&gt;   which is nothing but the ToIntFunction taken as an argument of mapToInt func.
You can rewrite your own functional interface like function&lt;String, int&gt; , but here also u need to do parseInt inside of function applyAsInt, but this will be a one time job that you can reuse while making certain other similar calls.</p>
</li>
</ol>
"
70,8532578,45278,6395627,Slaw,true,2,1562592904,1562498247,56921679,56913567,"<p>It's important to differentiate between what calling <a href=""https://docs.oracle.com/en/java/javase/12/docs/api/java.base/java/util/stream/Stream.html#mapToInt(java.util.function.ToIntFunction)"" rel=""nofollow noreferrer""><code>Stream#mapToInt(ToIntFunction)</code></a> does and what the <a href=""https://docs.oracle.com/en/java/javase/12/docs/api/java.base/java/util/function/ToIntFunction.html"" rel=""nofollow noreferrer""><code>ToIntFunction</code></a> argument does.</p>

<ul>
<li>The call to <code>mapToInt</code> is <strong>what</strong> the stream is going to do (i.e. map the elements to an <code>int</code>).</li>
<li>The <code>ToIntFunction</code> argument is <strong>how</strong> the stream is going to map each element to an <code>int</code>.</li>
</ul>

<hr>

<p>Could they have included a no-arg <code>mapToInt</code> method that implicitly parses <code>String</code>s to <code>int</code>s? Yes, but <a href=""https://stackoverflow.com/q/53219523/6395627"">look at how well that works for <code>Stream#sorted()</code></a>—and that situation is nowhere near as arbitrary or ambiguous as a no-arg <code>mapToInt</code> method.</p>

<p>The no-arg <code>sorted</code> method assumes the elements are <code>Comparable</code> which is a fundamental, standardized and wide-spread interface in Java—any class can implement the interface (whereas there's only one class that can be a <code>String</code>). Thus while the method is not type-safe it can be argued the use-case is common enough to justify its existence. </p>

<p>However, a no-arg <code>mapToInt</code> method that assumes the elements are <code>String</code>s and parses their content to an <code>int</code> is a highly specific use-case. Why would such a generic API offer such a specific operation? It'd be an entirely arbitrary decision with no reasonable justification. For instance, why not map each <code>String</code> to its <code>length</code> instead? And why is <code>String</code> being handled specially but not some other type(s)? Hence the method accepts a <code>ToIntFunction</code> argument that describes <em>how</em> to map the elements to an <code>int</code> on a case-by-case basis.</p>

<hr>

<p>It may help to note that <code>Integer::parseInt</code> is a <a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/methodreferences.html"" rel=""nofollow noreferrer"">method reference</a>, which is shorthand for a trivial <a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html"" rel=""nofollow noreferrer"">lambda expression</a>. Both are an implementation of a <a href=""https://docs.oracle.com/javase/specs/jls/se12/html/jls-9.html#jls-9.8"" rel=""nofollow noreferrer"">functional interface</a> which is less verbose option than using an <a href=""https://docs.oracle.com/javase/tutorial/java/javaOO/anonymousclasses.html"" rel=""nofollow noreferrer"">anonymous class</a>. In other words, you're creating a new <code>ToIntFunction</code> instance and passing it as an argument.</p>

<p>All of the following are functionally equivalent:</p>

<pre><code>// method reference
stream.mapToInt(Integer::parseInt)

// lambda expression
stream.mapToInt((String value) -&gt; Integer.parseInt(value)) // explicit parameter types
stream.mapToInt(value -&gt; Integer.parseInt(value))          // implicit parameter types

// anonymous class
stream.mapToInt(new ToIntFunction&lt;&gt;() {

    @Override
    public int applyAsInt(String value) {
        return Integer.parseInt(value);
    }

})
</code></pre>

<p>Where <code>stream</code> is a <code>Stream&lt;String&gt;</code>.</p>
"
71,3431310,2101,2875641,dushkin,false,0,1562489810,1562489810,56920692,56913567,"<p>Well actually, after reading the kind answers here I understood 
1. That my question was not clear enough.
2. The answer...</p>

<p>So,</p>

<ol>
<li><p>What I really meant was - isn't passing the Integer::parseInt as an argument to mapToInt redundant? Because I felt the mapToInt describes exactly the purpose of the method - mapping an object to int, And adding the parseInt is needless because it actually the same - parse an object to int...</p></li>
<li><p>But then I tried to pass also Integer:valueOf and it was accepted as well - so I understood that there are couple of options to pass to mapToInt, and that answered my question...</p></li>
</ol>
"
72,957044,48203,982161,ΦXocę 웃 Пepe&#250;pa ツ,false,1,1562413163,1562412508,56913682,56913567,"<p>the operations you are doing are like:</p>

<pre><code>Stream.of(""a1"", ""a2"", ""a3"")           //step1
        .map(s -&gt; s.substring(1))     //step2
        .mapToInt(Integer::parseInt)  //step3
        .max()
</code></pre>

<p>you define a stream of strings (in step1), then you take eauch of them an discard the 1 char on it leaving a stream of ""1"", ""2""and ""3"", (step2) but note that those are still string objects...
then you convert that into integers therefore you need to give to the 'mapToInt' a ""function"" that takes a string as parameter and returns an integer (step3)</p>

<p>and that is defined in the Integer class:</p>

<p><a href=""https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#parseInt(java.lang.String)"" rel=""nofollow noreferrer"">https://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#parseInt(java.lang.String)</a></p>

<p>you can for sure write and pass your own function... but why to reinvent the wheel? :)</p>
"
114,15527624,89,11202002,Mikhail Yaskou,false,-1,1638263598,1638263598,70166834,44000755,"<p>Try use this format &quot;yyyy-MM-dd'T'HH:mm:ss.SSSSSSSZ&quot;</p>
"
73,136531,22091,340088,jbx,false,1,1562423895,1562412494,56913679,56913567,"<p><code>substring</code> returns a string not an integer.
<code>mapToInt</code> converts the stream of objects (in this case Strings) to an <code>IntStream</code> of int primitives. However it doesn't know how to do the mapping, you need to provide it a function, which in your case is <code>parseInt</code>.</p>
"
74,38440814,1,28775640,user28775640,false,0,1734143685,1734143685,79279964,24567625,"<p>I have the same error I have to install Xvfb to use:
xvfb :99 &amp;
export DISPLAY=':99'</p>
<p>In order to TIBCO executes normally</p>
"
75,3415876,674,2864807,Nicolas Heitz,true,0,1404463501,1404463501,24570165,24567625,"<p>The <code>buildear</code> utility requires an X server to be executed.</p>

<p>To work around this, try adding <code>java.property.java.awt.headless=true</code> in the <code>bwengine.tra</code>. If it doesn't do the trick, you might want to ask your sys admin to install and configure <a href=""http://www.x.org/archive/X11R7.7/doc/man/man1/Xvfb.1.xhtml"" rel=""nofollow"">Xvfb</a>, a virtual X server.</p>
"
76,13472617,660,10060134,Niko,false,1,1734016572,1734016572,79275638,79275183,"<p>Hi lots of answers to your questions you can find from official documentation.</p>
<blockquote>
<p>The file system connector itself is included in Flink and does not require an additional dependency. The corresponding jar can be found in the Flink distribution inside the /lib directory.</p>
</blockquote>
<p>You can find here: <a href=""https://nightlies.apache.org/flink/flink-docs-release-1.19/docs/connectors/table/filesystem/"" rel=""nofollow noreferrer"">Flink documentation</a>
chose your version of the doc according to version of Flink you using.</p>
<p>For each format (parquet, avro, etc..) there is dedicated page with instructions and links to download libraries. For <a href=""https://nightlies.apache.org/flink/flink-docs-release-1.19/docs/connectors/table/formats/parquet/"" rel=""nofollow noreferrer"">parquet</a> in your case.</p>
"
77,4364208,540,3560472,shiva1791,false,1,1444583644,1444583644,33067820,33067606,"<pre><code>c= 10
for i in range(1,10,1):
   for j in range(1,10,1):
       pass
</code></pre>

<p>The range takes 3 parameters(start,stop,step)
start - from where to begin a for loop, when to stop the loop and how much to step</p>

<p>in the above code snippet the loop will begin at 1, stop at 10 and will step by 1 every time just like i++ in java</p>
"
78,6196844,33,4827901,matrix,false,1,1444582976,1444582976,33067704,33067606,"<p>in python you can write for like </p>

<pre><code>for (setelements) in (set):
</code></pre>

<p>so for what you want it will be like </p>

<pre><code>for i in range(1, c+1 ):
      for j in range(i, c+1 ):
            ecc...
</code></pre>
"
79,1096613,63714,1090079,Filip Ros&#233;en,true,1,1734134930,1444582911,33067691,33067606,"<h3>Using <a href=""https://docs.python.org/2/tutorial/controlflow.html#for-statements"" rel=""nofollow noreferrer""><code>for</code></a> + <a href=""https://docs.python.org/3/library/functions.html#range"" rel=""nofollow noreferrer""><code>range</code></a></h3>
<p>In python you can get a <em>range</em> by invoking <code>range(begin, end)</code> — where <code>begin</code> denotes the start of the range, and <code>end</code> is the upper limit (not included in the resulting range). Mathematically speaking the result will be the set of numbers in the range <code>[begin, end)</code>.</p>
<p>In order to <em>port</em> your <a href=""/questions/tagged/java"" class=""s-tag post-tag"" title=""show questions tagged &#39;java&#39;"" aria-label=""show questions tagged &#39;java&#39;"" rel=""tag"" aria-labelledby=""tag-java-tooltip-container"" data-tag-menu-origin=""Unknown"">java</a> code into <a href=""/questions/tagged/python"" class=""s-tag post-tag"" title=""show questions tagged &#39;python&#39;"" aria-label=""show questions tagged &#39;python&#39;"" rel=""tag"" aria-labelledby=""tag-python-tooltip-container"" data-tag-menu-origin=""Unknown"">python</a>, you can easily create an outer range with the construct previously mentioned, and then have the inner range depend on the former.</p>
<pre><code>for i in range (0, c+1):
  for j in range (i, C+1):
    ...
</code></pre>
<hr />
<h3>Using <a href=""https://docs.python.org/2/reference/compound_stmts.html#while"" rel=""nofollow noreferrer""><code>while</code></a></h3>
<p>You can of course also write the equivalent looping construct using <code>while</code>, even though this is not very <em>pythonic</em> — nor is it as clean.</p>
<pre><code>i = 0
while i &lt;= c:
  j = i
  while j &lt;= C:
    ...
    j += 1
  i += 1
</code></pre>
"
80,3515678,2907,2939175,Mate Hegedus,false,1,1444582832,1444582832,33067674,33067606,"<pre><code>for i in range(1, c+1):
    for j in range (i, C+1):
        print j
</code></pre>
"
81,5033242,1449,4042839,Ghazanfar,false,1,1444582821,1444582821,33067671,33067606,"<p>It can be done like this,</p>

<pre><code>for i in range(1, c + 1):
    for j in range(i, C + 1):
        ecc...
</code></pre>

<p>Please go through a basic python tutorial. One is found <a href=""https://docs.python.org/2/tutorial/"" rel=""nofollow"">here</a></p>
"
82,12082405,1,8833640,user8833640,false,0,1621394065,1621394065,67596413,23503921,"<p>Use Iterator for getting the elements.</p>
<pre><code>public static void insertionSort(ArrayList&lt;Integer&gt; arrL) {
    Iterator&lt;Integer&gt; it = arrL.iterator();

    while(it.hasNext()){
        int new_element = it.next();

        int j = arrL.indexOf(new_element);
        while(j&gt;0 &amp;&amp; arrL.get(j-1)&gt;new_element){
            arrL.set(j, arrL.get(j-1));
            j--;
        }

        arrL.set(j, new_element);
    }
 }
</code></pre>
"
83,341129,39348,671543,njzk2,false,2,1734116101,1399410861,23504627,23503921,"<p>The basic algorithm is</p>
<ul>
<li>for each element</li>
<li>search for the first smaller element going downward</li>
<li>insert element right after that</li>
</ul>
<p>So, in your case:</p>
<pre><code>public static void insertionSort(ArrayList&lt;Card&gt; cards) {

    for (int i = 1; i &lt; cards.size(); i++) {
        int value = cards.get(i).value;
        for (int j = i-1; j &gt;= 0; j--) {
            if (cards.get(j).value &lt;= key.value) {
                break;
            }
        }
        cards.add(j,cards.remove(i));
    }
}
</code></pre>
<p>One important point here is that at no point does the array contains duplicated values (which happens when you use <code>set</code>)</p>
"
84,367775,1133,714158,Kicsi,true,3,1734131362,1399410029,23504420,23503921,"<p>At every cycle, you insert the object &quot;key&quot; into the list (Array.set(j,key);). So, at the end your whole list will be made of references to the object &quot;key&quot;. So when you set key.value, key.suit and key.faceValue at the end, you are setting the fields of every element of your list, because your list consists of references of the same object.</p>
<p>move <code>Card key = new Card(0, &quot;&quot;,&quot;&quot;);</code> inside the <code>for</code> loop. Like this:</p>
<pre><code>public static void insertionSort(ArrayList&lt;Card&gt; Array) {

    int i, j;

    for (i = 1; i &lt; Array.size(); i++) {
        Card key = new Card(0, &quot;&quot;,&quot;&quot;);
        key.value = Array.get(i).value;
        key.suit = Array.get(i).suit;
        key.faceValue = Array.get(i).faceValue;
        j = i;
        while((j &gt; 0) &amp;&amp; (Array.get(j - 1).value &gt; key.value)) {
            Array.set(j,Array.get(j - 1));
            j--;
        }
        Array.set(j,key);
    }


}
</code></pre>
<p>gl with your studies :)</p>
"
139,401843,101552,768644,rzwitserloot,false,4,1734045703,1734045703,79276858,79276625,"<p><code>Random</code> works on the basis of a seed value; create a new instance of <code>Random</code> with the same seed value and out come the same numbers, in the same order, every time.</p>
<p>This is inherent to <code>Random</code>; the spec <em>demands</em> that it works this way. Straight from the javadoc:</p>
<blockquote>
<p>An instance of this class is used to generate a stream of pseudorandom numbers. The class uses a 48-bit seed, which is modified using a linear congruential formula. (See Donald Knuth, The Art of Computer Programming, Volume 2, Section 3.2.1.)</p>
</blockquote>
<p>It does this (and <em>has to</em>, as per spec) even if you don't bother with a seed value. If you don't bother with it (just <code>new Random()</code>) you get a random seed value, but, there still is one. You can reset it even (with <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/Random.html#setSeed-long-"" rel=""nofollow noreferrer""><code>setSeed()</code></a>).</p>
<p>The system is <strong>fundamentally</strong> synchronized. When explaining a spec, the moment you say 'in the same order', you lose the game immediately. Those words lock you into synchronizing the lot (or not doing so and having the thing fall to bits, i.e. spec dictates that unsynced access means bizarre things can occur, such as repeated values). They didn't do that for kicks - it's to enable that seed functionality.</p>
<p><em>But I don't care or need it!</em></p>
<p>Great, but, that's not how specs work. That's why there's ThreadLocal, which <em>does</em> have a seed value but each thread has its own completely independent rng and seed, or various other sources of randomness which make no promises about the reliability of the emitted sequence in the face of repeating the seed value, thus 'freeing' it from the shackles that that implies (Namely, that access has to be ordered, which requires locking).</p>
<p>Programming is hard. Abstraction is <em>very</em> hard.</p>
<p>In this specific case you thought Random is an abstraction for a concept that doesn't have anything whatsoever to do with ordering, so why in the blazes would a lock even apply? Except, Random is an abstraction that can cover many use cases, and 'same numbers in the same order' is one of those use cases.</p>
<p>This is common: multicore performance and multicore behaviour in general 'does not compose' - you can't just write components such that the concurrency of each component makes sense and is easy/obvious to use, and <em>also</em> have that if you slap these components together that the end result automatically has sensible behaviour and performance as well.</p>
<p>Alternate designs are imaginable; for example, a basic <code>Random</code> class or more likely interface that makes very few guarantees and locks down very little (such as: It would make no promises about concurrent behaviour at all, it would make no promises about how it works, it would neither offer a way to initialize one based off of a seed value nor would it have <code>setSeed</code>), and then various implementations or even a factory toolkit concept where you pass in your particular desires (such as 'I want it to be seed based' or 'I want it to be as fast as possible; I will accept, as long as it is rare, that 2 concurrent threads end up getting identical values, speed is more important to me'), but that'd be a rather heavyhanded, kinda 'overengineered' feel, and such extremes are best left to libraries instead of the core; libraries can update and break API if it is warrented. Core can pretty much never do that.</p>
"
85,1263761,32315,1221512,DRAX,false,4,1459922309,1399409778,23504361,23503921,"<p>I would like to extend ginz's answer.</p>

<p>Java objects are passed by reference.
So you are changing one object and setting it to multiple indexes.</p>

<p>To visualize (<strong>before</strong> and <strong>after</strong>):</p>

<p><img src=""https://i.sstatic.net/qphTE.png"" alt=""visual representation""></p>

<p>For <strong>after</strong>: Please note that not all indexes must reference to same object. Some of them could remain unchanged. </p>

<hr>

<p>Better approach would be to move objects, instead of trying to duplicate them.</p>

<p>Also, by Java standard, name of properties (variables) should always start with small letter.</p>

<p>Here is working code:</p>

<pre><code>public static void insertionSort(ArrayList&lt;Card&gt; array) {
    int i, j;
    for (i = 1; i &lt; array.size(); i++) {
        Card tmp = array.get(i);
        j = i;
        while ((j &gt; 0) &amp;&amp; (array.get(j - 1).value &gt; tmp.value)) {
            array.set(j, array.get(j - 1));
            j--;
        }
        array.set(j, tmp);
    }
}
</code></pre>
"
86,2049682,7461,1828937,Dmitry Ginzburg,false,3,1399408358,1399408358,23504224,23503921,"<p>You're setting all the fields of <code>Array</code>(OMG, please rename it!) with the same element: <code>key</code>.  So, all the elements would be the same.</p>
"
87,19019725,1016,13884034,Sonali Das,true,0,1734127495,1645804484,71268431,64584393,"<p>Using the Graph API one can access the Outlook.</p>
<ol>
<li><p>You need to register in Azure App. Usually done by IT Team. You would get a client Id, client secret and tenant id.</p>
</li>
<li><p>Then you need to use client credential authorization provider to get the token. Here is the code from Microsoft Java SDK shared at <a href=""https://github.com/Azure-Samples/ms-identity-java-daemon/blob/master/msal-client-credential-secret/src/main/java/ClientCredentialGrant.java"" rel=""nofollow noreferrer"">https://github.com/Azure-Samples/ms-identity-java-daemon/blob/master/msal-client-credential-secret/src/main/java/ClientCredentialGrant.java</a></p>
</li>
</ol>
<pre class=""lang-none prettyprint-override""><code>    import com.microsoft.aad.msal4j.ClientCredentialFactory;
    import com.microsoft.aad.msal4j.ClientCredentialParameters;
    import com.microsoft.aad.msal4j.ConfidentialClientApplication;
    import com.microsoft.aad.msal4j.IAuthenticationResult;
    import com.nimbusds.oauth2.sdk.http.HTTPResponse;
    
    import java.io.BufferedReader;
    import java.io.IOException;
    import java.io.InputStreamReader;
    import java.net.HttpURLConnection;
    import java.net.URL;
    import java.util.Collections;
    import java.util.Properties;
    import java.util.concurrent.CompletableFuture;
    
    class ClientCredentialGrant {
    
        private static String authority;
        private static String clientId;
        private static String secret;
        private static String scope;
        private static ConfidentialClientApplication app;
    
        public static void main(String args[]) throws Exception{
    
            setUpSampleData();
    
            try {
                BuildConfidentialClientObject();
                IAuthenticationResult result = getAccessTokenByClientCredentialGrant();
                String usersListFromGraph = getUsersListFromGraph(result.accessToken());
    
                System.out.println(&quot;Users in the Tenant = &quot; + usersListFromGraph);
                System.out.println(&quot;Press any key to exit ...&quot;);
                System.in.read();
    
            } catch(Exception ex){
                System.out.println(&quot;Oops! We have an exception of type - &quot; + ex.getClass());
                System.out.println(&quot;Exception message - &quot; + ex.getMessage());
                throw ex;
            }
        }
        private static void BuildConfidentialClientObject() throws Exception {
            
            // Load properties file and set properties used throughout the sample
            app = ConfidentialClientApplication.builder(
                    clientId,
                    ClientCredentialFactory.createFromSecret(secret))
                    .authority(authority)
                    .build();               
        }
    
        private static IAuthenticationResult getAccessTokenByClientCredentialGrant() throws Exception {
            
            // With client credentials flows the scope is ALWAYS of the shape &quot;resource/.default&quot;, as the
            // application permissions need to be set statically (in the portal), and then granted by a tenant administrator
            ClientCredentialParameters clientCredentialParam = ClientCredentialParameters.builder(
                    Collections.singleton(scope))
                    .build();
            
            CompletableFuture&lt;IAuthenticationResult&gt; future = app.acquireToken(clientCredentialParam);
            return future.get();
        }
    
        private static String getMessagesGraph(String accessToken) throws IOException {
            URL url = new URL(&quot;https://graph.microsoft.com/v1.0/users/&lt;yourEmailID&gt;//mailFolders/Inbox/messages?$search=\&quot;&lt;yourSubject&gt;\&quot;&quot;);
            HttpURLConnection conn = (HttpURLConnection) url.openConnection();
    
            conn.setRequestMethod(&quot;GET&quot;);
            conn.setRequestProperty(&quot;Authorization&quot;, &quot;Bearer &quot; + accessToken);
            conn.setRequestProperty(&quot;Accept&quot;,&quot;application/json&quot;);
    
            int httpResponseCode = conn.getResponseCode();
            if(httpResponseCode == HTTPResponse.SC_OK) {
    
                StringBuilder response;
                try(BufferedReader in = new BufferedReader(
                        new InputStreamReader(conn.getInputStream()))){
    
                    String inputLine;
                    response = new StringBuilder();
                    while (( inputLine = in.readLine()) != null) {
                        response.append(inputLine);
                    }
                }
                return response.toString();
            } else {
                return String.format(&quot;Connection returned HTTP code: %s with message: %s&quot;,
                        httpResponseCode, conn.getResponseMessage());
            }
        }
    
        /**
         * Helper function unique to this sample setting. In a real application these wouldn't be so hardcoded, for example
         * different users may need different authority endpoints or scopes
         */
        private static void setUpSampleData() throws IOException {
            // Load properties file and set properties used throughout the sample
            Properties properties = new Properties();
            properties.load(Thread.currentThread().getContextClassLoader().getResourceAsStream(&quot;application.properties&quot;));
            authority = properties.getProperty(&quot;AUTHORITY&quot;);
            clientId = properties.getProperty(&quot;CLIENT_ID&quot;);
            secret = properties.getProperty(&quot;SECRET&quot;);
            scope = properties.getProperty(&quot;SCOPE&quot;);
        }
    }

</code></pre>
"
88,10621254,2677,7822301,Zakaria Shahed,false,2,1603946055,1603946055,64585048,64584393,"<p>Here is the full code which will print all the inbox message.You need to extract the body and find the verification code</p>
<pre><code> package solution;
import java.util.Properties;


import javax.mail.Folder;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.NoSuchProviderException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Store;
public class test {
    public static String username =null;
    public static String password1 =null;
    public static void check(String host, String storeType, String user,
                             String password)
    { username= user;
        password1 = password;
        try {



            //create properties field
            Properties properties = new Properties();


            properties.put(&quot;mail.imap.host&quot;, host);
            properties.put(&quot;mail.imap.port&quot;, &quot;993&quot;);
            //    properties.put(&quot;mail.imap.starttls.enable&quot;, &quot;true&quot;);
            //   properties.setProperty(&quot;mail.imap.socketFactory.fallback&quot;, &quot;false&quot;);
            // properties.setProperty(&quot;mail.imao.socketFactory.port&quot;,
            //       String.valueOf(&quot;993&quot;));
            //properties.put(&quot;mail.imap.auth&quot;, &quot;false&quot;);
            // properties.put(&quot;mail.debug.auth&quot;, &quot;true&quot;);
            properties.put(&quot;mail.imaps.ssl.trust&quot;, &quot;*&quot;); // This is the most IMP property

            Session emailSession = Session.getDefaultInstance(properties);





            //create the POP3 store object and connect with the pop server

            Store store = emailSession.getStore(&quot;imaps&quot;); //try imap or impas
            store.connect(host, user, password);
            //  store.connect(host, 993, user, password);

            //create the folder object and open it
            Folder emailFolder = store.getFolder(&quot;INBOX&quot;);
            emailFolder.open(Folder.READ_ONLY);

            // retrieve the messages from the folder in an array and print it
            Message[] messages = emailFolder.getMessages();
            System.out.println(&quot;messages.length---&quot; + messages.length);

            for (int i = 0, n = messages.length; i &lt; 10; i++) {
                Message message = messages[i];
                System.out.println(&quot;---------------------------------&quot;);
                System.out.println(&quot;Email Number &quot; + (i + 1));
                System.out.println(&quot;Subject: &quot; + message.getSubject());
                System.out.println(&quot;From: &quot; + message.getFrom()[0]);
                System.out.println(&quot;Text: &quot; + message.getContent().toString());

            }

            //close the store and folder objects
            emailFolder.close(false);
            store.close();

        } catch (NoSuchProviderException e) {
            e.printStackTrace();
        } catch (MessagingException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {

        String host = &quot;outlook.office365.com&quot;;
        String mailStoreType = &quot;imaps&quot;;
        String username = &quot;USERNAME&quot;;
        String password = &quot;PASSWORD&quot;;

        check(host, mailStoreType, username, password);

    }
}
</code></pre>
<p>Also, you need the following dependency</p>
<pre><code> &lt;dependency&gt;
            &lt;groupId&gt;javax.mail&lt;/groupId&gt;
            &lt;artifactId&gt;mail&lt;/artifactId&gt;
            &lt;version&gt;1.4.7&lt;/version&gt;
        &lt;/dependency&gt;
</code></pre>
"
89,2179728,77534,10819573,Arvind Kumar Avinash,false,1,1734126383,1734126383,79279654,24903259,"<h1><code>java.time</code></h1>
<p>In March 2014, Java 8 introduced the modern, <code>java.time</code> date-time API which supplanted the <a href=""https://www.oracle.com/technical-resources/articles/java/jf14-date-time.html"" rel=""nofollow noreferrer"">error-prone legacy <code>java.util</code> date-time API</a>. Any new code should use the <code>java.time</code> API.</p>
<h2>Solution using modern date-time API</h2>
<p>Using <a href=""https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatterBuilder.html#appendValueReduced-java.time.temporal.TemporalField-int-int-int-"" rel=""nofollow noreferrer""><code>DateTimeFormatterBuilder#appendValueReduced</code></a>, you can control the year range. For example, a base value of 1900 and a width of 2 will have valid values from 1900 to 1999.</p>
<p><strong>Demo:</strong></p>
<pre><code>class Main {
    public static void main(String args[]) {
        DateTimeFormatter dtf = new DateTimeFormatterBuilder()
                .appendValueReduced(ChronoField.YEAR, 2, 2, 1900)
                .appendPattern(&quot;/MM/dd&quot;)
                .toFormatter(Locale.ENGLISH);
        LocalDate date = LocalDate.parse(&quot;16/07/23&quot;, dtf);
        System.out.println(date);
    }
}
</code></pre>
<p><strong>Output:</strong></p>
<pre class=""lang-none prettyprint-override""><code>1916-07-23
</code></pre>
<p><a href=""https://ideone.com/LTWPbY"" rel=""nofollow noreferrer"">Online Demo</a></p>
<p>Learn more about the modern Date-Time API from <strong><a href=""https://docs.oracle.com/javase/tutorial/datetime/index.html"" rel=""nofollow noreferrer"">Trail: Date Time</a></strong>.</p>
"
90,3963644,589,3270198,Swaraj,false,1,1406097219,1406097219,24903386,24903259,"<p>May be you are looking for this.</p>

<pre><code>    Calendar cal = Calendar.getInstance();
    cal.set( Calendar.YEAR, 1900 );
    SimpleDateFormat format = new SimpleDateFormat( ""yy/MM/dd"", Locale.US );
    format.set2DigitYearStart( cal.getTime() );
    System.out.println( format.parse( ""16/07/23"" ) );
</code></pre>
"
91,3557625,201294,2970947,Elliott Frisch,false,15,1406096961,1406096961,24903324,24903259,"<p>If I understand your question then yes,</p>

<pre><code>SimpleDateFormat sdf = new SimpleDateFormat(""yy/MM/dd"", Locale.US);
Calendar cal = Calendar.getInstance(Locale.US);
cal.set(1900, 0, 1);
sdf.set2DigitYearStart(cal.getTime());
System.out.println(sdf.parse(""16/07/23""));
</code></pre>

<p>Per the <a href=""http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#set2DigitYearStart%28java.util.Date%29""><code>SimpleDateFormat.set2DigitYearStart(Date)</code></a> javadoc,</p>

<blockquote>
  <p>Sets the 100-year period 2-digit years will be interpreted as being in to begin on the date the user specifies.</p>
</blockquote>
"
92,2006972,43668,1796579,Henry,false,7,1406097717,1406096956,24903321,24903259,"<p>There is the method <code>set2DigitYearStart</code> that can be used for that. It allows you to specify a start date. The parsed date will be in the interval [start date, start date + 100 years].</p>

<p>See the <a href=""http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html#set2DigitYearStart(java.util.Date)"" rel=""noreferrer"">documentation</a> for details.</p>
"
93,45349,10433,133645,reto,true,36,1406096939,1406096939,24903317,24903259,"<p>The Java Doc (<a href=""http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html"">http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html</a>) says:</p>

<blockquote>
  <p>For parsing with the abbreviated year pattern (""y"" or ""yy""), SimpleDateFormat must interpret the abbreviated year relative to some century. It does this by <em>adjusting dates to be within 80 years before and 20 years after the time the SimpleDateFormat instance is created</em>. For example, using a pattern of ""MM/dd/yy"" and a SimpleDateFormat instance created on Jan 1, 1997, the string ""01/11/12"" would be interpreted as Jan 11, 2012 while the string ""05/04/64"" would be interpreted as May 4, 1964. </p>
</blockquote>

<p>The method <code>SimpleDateFormat.set2DigitYearStart(Date)</code> can be used to fix the year.</p>
"
94,8182797,712,6159397,Akash Mishra,false,1,1474981949,1474981949,39725614,39724313,"<p>Would you use a viewResolver to handle the jsp views.
And segregate html and jsp views differently using <a href=""https://stackoverflow.com/a/24838783/6159397"">this</a> technique.</p>
"
95,23006121,27,17214955,Todo-System Todo-System,false,0,1734122962,1734122962,79279546,9663927,"<p>I was getting a similar error:</p>
<blockquote>
<p>Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError:
org/apache/hc/core5/http2/HttpVersionPolicy at
org.apache.hc.client5.http.config.TlsConfig$Builder.build(TlsConfig.java:211)
at
org.apache.hc.client5.http.config.TlsConfig.(TlsConfig.java:47)
at</p>
</blockquote>
<p>The solution was to add this library to the project.</p>
<p><strong>httpcore5-h2-5.3.1.jar</strong>
[https://mvnrepository.com/artifact/org.apache.httpcomponents.core5/httpcore5-h2/5.3.1][1]</p>
"
96,30529368,61,23397690,bhey,false,6,1707830488,1707830488,77988221,9663927,"<p>I experienced a similar issue whilst using Spring Boot 3. The dependency has to be <em>client5.</em></p>
<p>Add the following Maven dependency to your POM file.</p>
<pre><code>&lt;dependency&gt;
  &lt;groupId&gt;org.apache.httpcomponents.client5&lt;/groupId&gt;
  &lt;artifactId&gt;httpclient5&lt;/artifactId&gt;
  &lt;version&gt;5.2.1&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<p><a href=""https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5"" rel=""noreferrer"">https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5</a></p>
"
97,3623434,26,6910975,Moin Abbas Qureshi,false,1,1659364518,1659088827,73164903,9663927,"<pre><code>java.lang.NoClassDefFoundError on HttpAsyncClients.custom
java.lang.NoClassDefFoundError: org/apache/http/impl/nio/clien /CloseableHttpAsyncClient
java.lang.NoClassDefFoundError: org/apache/http/HttpHost 
</code></pre>
<p>You have to import <code>httpclient</code> library.</p>
<p>Go to maven website and download <strong>httpclient</strong> jar file.   <a href=""https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient"" rel=""nofollow noreferrer"">https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient</a></p>
<p>Now you have to copy this jar file into the \lib folder.</p>
<p>After that look for POM file and add dependencies. You can see dependencies code on maven website. Just go to end of <strong></strong> line of code, add the following dependencies.</p>
<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;
    &lt;artifactId&gt;httpclient&lt;/artifactId&gt;
    &lt;version&gt;4.5.13&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<p>In case of Jira/Confluence, POM file location are that.
(<code>C:\Program Files\Atlassian\JIRA\atlassian-jira\META-INF\maven\com.atlassian.jira</code>)</p>
<p>There is two folder at this location: atlassian-jira-webapp and jira-webapp-dist. Both folders contain POM files.</p>
<p>Just open one POM file in notepad++ and search for end of .
<a href=""https://i.sstatic.net/35S1l.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/35S1l.png"" alt=""enter image description here"" /></a></p>
<p>Now go to second folder POM file and add same dependencies too.
Just look into error and add dependencies.</p>
<p>Restart your service after that.</p>
"
98,13691822,561,9879420,Jeberdson Abraham,false,1,1649348361,1649348361,71785684,9663927,"<p>I faced the same issue, later I found I was using wrong gradle dependency.,</p>
<p><strong>Wrong:</strong></p>
<pre><code>compileOnly 'org.apache.httpcomponents:httpclient:4.5.3'
</code></pre>
<p><strong>Correct:</strong></p>
<pre><code>implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
</code></pre>
<p>Once I changed it, it was working fine.</p>
"
99,10313291,1819,7608371,Noor Hossain,false,0,1633528876,1633528876,69467216,9663927,"<p>After Creating Artifact Jar I was facing this Problem. What I do that, I create a new <code>Artifact &gt; With Module Dependency &gt;</code> And then Leave Blank the Main Class. In that way, after creating the artifact jar, the jar was running  Ok. I, think the problem was, http-client from org.apache and from network - this two types of class used for different libraries at the same Time in my first Artifact and the problem arises.  So, When I created new Artifact, and leaving unnecessary libraries and duplicate libraries, the problem gone.</p>
"
100,2179728,77534,10819573,Arvind Kumar Avinash,false,1,1734121380,1734121380,79279485,27840670,"<blockquote>
<p>My questions is, what is the &quot;588Z&quot; at the end? and would this number
be different the retrieve was done in a different timezone? i.e. would
the number 588 be a different number in a different time zone.</p>
</blockquote>
<p>The <a href=""https://stackoverflow.com/a/27840715/10819573"">accepted answer</a> is correct. <code>Z</code> represents a time zone offset of <code>+00:00</code> i.e. zero offset from  Greenwich/UTC. So, you can call a date-time like <code>2014-01-01T00:00:00.588Z</code> as a UTC date-time.</p>
<p>The part <code>.588</code> is the fraction of a second. A time zone offset is available only up to seconds precision; so, irrespective of the time zone you convert your date-time into, this part won't change. Learn more about it from <a href=""https://docs.oracle.com/javase/8/docs/api/java/time/ZoneOffset.html#ofHoursMinutesSeconds-int-int-int-"" rel=""nofollow noreferrer""><code>ZoneOffset#ofHoursMinutesSeconds</code></a> documentation.</p>
<p>If you change this date-time into a time zone at a different offset, the day, hour, minute and second parts (one or more or all of them) of the date-time will change depending on the offset of the target time zone. I have shown a couple of examples in the following demo:</p>
<p><strong>Demo:</strong></p>
<pre><code>class Main {
    public static void main(String args[]) {

        System.out.println(OffsetDateTime
                .parse(&quot;2014-01-01T00:00:00.588Z&quot;)
                .getOffset()
                .getTotalSeconds());

        // Changing the date-time to different time zones
        ZonedDateTime zdt = ZonedDateTime.parse(&quot;2014-01-01T00:00:00.588Z&quot;);
        System.out.println(zdt.withZoneSameInstant(ZoneId.of(&quot;America/New_York&quot;)));
        System.out.println(zdt.withZoneSameInstant(ZoneId.of(&quot;Asia/Kolkata&quot;)));
    }
}
</code></pre>
<p><strong>Output:</strong></p>
<pre class=""lang-none prettyprint-override""><code>0
2013-12-31T19:00:00.588-05:00[America/New_York]
2014-01-01T05:30:00.588+05:30[Asia/Kolkata]
</code></pre>
<p><a href=""https://ideone.com/Mi9RRF"" rel=""nofollow noreferrer"">Online Demo</a></p>
<p>Learn more about the modern Date-Time API from <strong><a href=""https://docs.oracle.com/javase/tutorial/datetime/index.html"" rel=""nofollow noreferrer"">Trail: Date Time</a></strong>.</p>
"
101,251102,2377,528246,Nicholas Daley-Okoye,false,5,1420722007,1420722007,27840754,27840670,"<p>Z is shorthand for the UTC timezone.</p>
"
102,4306838,1113,3519004,motoDrizzt,false,5,1420721991,1420721910,27840730,27840670,"<p>Z stands for UTC (that is GMT, but standard): <a href=""http://en.wikipedia.org/wiki/Coordinated_Universal_Time"" rel=""noreferrer"">http://en.wikipedia.org/wiki/Coordinated_Universal_Time</a></p>
"
103,483323,36633,898289,Adam,true,42,1478973820,1420721868,27840715,27840670,"<p>The <strong><em><code>Z</code></em></strong> stands for the <em>zero UTC offset</em>.</p>

<blockquote>
  <p>If the time is in UTC, add a Z directly after the time without a space.
  <br>
  Z is the zone designator for the zero UTC offset.
  <br>
  ""09:30 UTC"" is therefore represented as ""09:30Z"" or ""0930Z"", while ""14:45:15 UTC"" would be ""14:45:15Z"" or ""144515Z"".</p>
</blockquote>

<p>The portion immediately before the <strong><em><code>Z</code></em></strong> translates into fraction of second; here, <strong><code>588</code></strong>.</p>

<p><em>From your question above, <code>00:00:00.588</code> means ""about a half second past midnight"", with the last three digits after the period, <strong><code>588</code></strong>, translating: <a href=""http://en.m.wikipedia.org/wiki/Millisecond"" rel=""noreferrer"">milliseconds</a>.</em></p>

<p><em>... more details <a href=""http://en.wikipedia.org/wiki/ISO_8601"" rel=""noreferrer"">here</a> on (ISO 8601 standard).</em></p>
"
104,14199152,828,10257512,Jayanth Bala,false,1,1630506496,1630506496,69015703,68905227,"<p>Please include screen size in the chrome option.</p>
<pre><code>ChromeOptions options = new ChromeOptions();
options.addArguments(Arrays.asList(&quot;--window-position=0,0&quot;));
options.addArguments(Arrays.asList(&quot;--window-size=1840,1080&quot;));
</code></pre>
"
105,9207703,29322,9444073,cruisepandey,true,6,1629798885,1629798885,68905434,68905227,"<p>It is actually known issue to Selenium community that headless is not stable as it should be, read here <a href=""https://github.com/MPDL/imeji-gui-testing/issues/39"" rel=""noreferrer"">about the issue more</a></p>
<p>Chrome runs very unstable when headless mode is activated.
There are multiple different issues and bugs depending on: Chrome Version, <code>ChromeDriver</code> Version and the <code>executed tests.</code></p>
<p><strong>Issues and Fixes (occured so far):</strong></p>
<h2>Chrome does not start in headless mode</h2>
<pre><code>Exception:
No informative Error message. Only a timeout exception when navigate() is called on the driver:
org.openqa.selenium.TimeoutException: timeout

Fix:
options.addArguments(&quot;--proxy-server='direct://'&quot;);
options.addArguments(&quot;--proxy-bypass-list=*&quot;);
</code></pre>
<h2>Chrome is very slow in headless mode</h2>
<pre><code>Fix:
options.addArguments(&quot;--proxy-server='direct://'&quot;);
options.addArguments(&quot;--proxy-bypass-list=*&quot;);
</code></pre>
<p><strong>Chrome does not operate correctly after a certain time, when tests run very long resp. many actions are executed in one test session</strong></p>
<pre><code>Exception:
... Timed out receiving message from renderer: ...
Fix (not tested yet!):
options.addArguments(&quot;--disable-browser-side-navigation&quot;);
</code></pre>
"
106,4261091,33257,3485434,Prophet,false,4,1629798494,1629798494,68905343,68905227,"<p>You possibly missing setting the headless window size.<br />
Try this settings:</p>
<pre class=""lang-java prettyprint-override""><code>Map&lt;String,String&gt; prefs = new HashMap&lt;&gt;();
prefs.put(&quot;download.default_directory&quot;, downloadsPath); // Bypass default download directory in Chrome
prefs.put(&quot;safebrowsing.enabled&quot;, &quot;false&quot;); // Bypass warning message, keep file anyway (for .exe, .jar, etc.)
ChromeOptions opts = new ChromeOptions();
opts.setExperimentalOption(&quot;prefs&quot;, prefs);
opts.addArguments(&quot;--headless&quot;, &quot;--disable-gpu&quot;, &quot;--window-size=1920,1080&quot;,&quot;--ignore-certificate-errors&quot;,&quot;--no-sandbox&quot;, &quot;--disable-dev-shm-usage&quot;);

driver = new ChromeDriver(opts);
</code></pre>
<p>Here I put much more setting used by me for the headless chrome.<br />
I hope this will be useful for you.</p>
"
107,35628,27405,100970,Ceki,false,0,1734117398,1734116679,79279341,18952782,"<p>Not an answer per se but I would like share my own experience.</p>
<p>Under Java 21, the same JMH benchmark runs significantly faster using IntelliJ IDEA than invoking Java. CPU Power consumption seems to be similar. I have explored several tracks which lead nowhere.</p>
"
108,11683,1494514,22656,Jon Skeet,true,4,1379930254,1379930254,18956409,18952782,"<p>(After a conversation in comments.)</p>

<p>It seems this is down to a difference in how console output is handled in your command line and in your IDE. These can behave very significantly differently in terms of auto-scrolling, size of buffer etc.</p>

<p>Generally, when benchmarking code it's good to isolate the code you're actually interested in away from any diagnostic output which can interfere with the results. If you absolutely <em>have</em> to include diagnostic output, writing it to a file (possibly on a ram disk) can help to reduce the differences between console implementations.</p>
"
109,137237,14129,341291,Axel,false,0,1379917526,1379917526,18952939,18952782,"<p>I have seen such effects when the IDE (eclipse) used a newer Java version than is used when starting from the command line. Also, it could be that when running from within eclipse you are using the server VM and on the command line the client JVM is used. This can either be set in the run configuration or in the wirkspace JVM settings (""Default VM arguments"" when you click on ""Edit JRE"" in the ""Installed JREs"" preference page).</p>

<p>So, first make sure the same arguments are used. Add the arguments that are used when starting from within eclipse to your command line.</p>
"
110,401940,14135,768795,Thomas W,false,0,1379917089,1379917089,18952841,18952782,"<p>Maybe your IDE has different JVM options, for running your process? Larger heap size (-Xmx) could reduce garbage collection costs. If your application is memory-intensive &amp; choking on an insufficent heap size, this could easily be the problem.</p>

<p>The IDE typically also pipes your process's standard input/ output. I don't know if that would be <em>more efficient</em> than standard output to console, but if you're printing/logging a lot it might be a factor to consider.</p>

<p>As Jon Skeet says, there's a big apparent difference between the I/O traces on left &amp; right.</p>

<p>The third main thing an IDE does, in Debug mode, is attach to your process as a debugger. But this normally makes the process slower, not faster.</p>

<p>Summary: best check your IDE's JVM options &amp; launch configuration. Maybe it's run with <em>different parameters</em>, in a different <em>working directory</em>, or with too small a <em>heap size</em>.</p>
"
111,3915820,1201,3239653,zmx,false,0,1734117343,1734116408,79279333,77856651,"<p><strong>You are a victim of the OSIV anti-pattern</strong>.<br></p>
<p>Vlad Mihalcea describes the problem very well here: <a href=""https://stackoverflow.com/questions/30549489/what-is-this-spring-jpa-open-in-view-true-property-in-spring-boot"">What is this spring.jpa.open-in-view=true property in Spring Boot?</a></p>
<p>TL;DR<br>
Spring Boot has the OSIV pattern enabled by default, which means that for every HTTP request, your database session is being bound by Spring to the HTTP session.
In other words, your hibernate session stays open because the HTTP request is not yet finished at the time of the print.</p>
<p>Disable the property:</p>
<pre><code>spring.jpa.open-in-view=false
</code></pre>
<p>And then you should get a LazyInitException.</p>
<p>I have also been a victim of this pattern: I was starting a Spring batch-job with an HTTP REQUEST, instead of a chron job, for testing purposes, and I wasted hours of analysing heap dumps just to see in the Eclipse Memory Analyzer Tool that the SessionImpl was creating a memory leak of GBs with StatefulPersistenceContext, because it wasn't closing. Thousands upon thousands of entities could not be garbage collected, because the SessionImpl (hibernate) was bound to the HTTP session, which of course for a long running job would not end soon.</p>
<p>For me, the problem was that a single EntityManager was being used for all the batched transactions, as user dunni explains in his answer:
<strong>&quot;This property will register an OpenEntityManagerInViewInterceptor, which registers an EntityManager to the current thread, so you will have the same EntityManager until the web request is finished.&quot;</strong></p>
"
112,14194880,1758,10254476,GJohannes,true,-1,1705876347,1705876347,77856860,77856651,"<p>Sessions are not bound to Transactions. They are bound to the http call (or websocket call).</p>
<p>You can verify this by calling a lazy loaded subentity entity in a Scheduler. This will result in a <code>LazyInitializationException</code> because Schedulers do not have a Session associated.</p>
<p>Transactions and Sessions are different. Transactions complete when the the method annotated with @Transactional is completed. Commits (Database, MessageBroker, usw...) are executed when a Transaction completes.</p>
<p>Sessions hold more information like the security context. This exists for the entires &quot;endpoint call&quot; and will therefore stay open until the Request is completed.</p>
"
113,2179728,77534,10819573,Arvind Kumar Avinash,false,1,1734110534,1734106869,79278957,44000755,"<h1>Some important points first</h1>
<ol>
<li>Avoid using abbreviations for time zone ID. Given below is an excerpt from the legacy <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/TimeZone.html"" rel=""nofollow noreferrer""><code>TimeZone</code> documentation</a>:</li>
</ol>
<blockquote>
<h3><em>Three-letter time zone IDs</em></h3>
<p>For compatibility with JDK 1.1.x, some other three-letter time zone IDs (such as &quot;PST&quot;, &quot;CTT&quot;, &quot;AST&quot;)
are also supported. However, <strong>their use is deprecated</strong> because the
same abbreviation is often used for multiple time zones (for example,
&quot;CST&quot; could be U.S. &quot;Central Standard Time&quot; and &quot;China Standard
Time&quot;), and the Java platform can then only recognize one of them.</p>
</blockquote>
<ol start=""2"">
<li>The error-prone <code>SimpleDateFormat</code> processes the number of decimal points as the milliseconds. 4723017 milliseconds = 1 hour 18 minutes 43.017S which explains the difference in your output.</li>
</ol>
<pre><code>   System.out.println(Duration.ofMillis(4723017)); // PT1H18M43.017S
</code></pre>
<h1><code>java.time</code></h1>
<p>In March 2014, Java 8 introduced the modern, <code>java.time</code> date-time API which supplanted the <a href=""https://www.oracle.com/technical-resources/articles/java/jf14-date-time.html"" rel=""nofollow noreferrer"">error-prone legacy <code>java.util</code> date-time API</a>. Any new code should use the <code>java.time</code> API.</p>
<h2>Solution using modern date-time API</h2>
<p>Your given date-time string is in the <a href=""https://en.wikipedia.org/wiki/ISO_8601"" rel=""nofollow noreferrer"">ISO 8601</a> format, the default format used by <code>java.time</code> types. So, you do not need to use a <code>DateTimeFormatter</code> explicitly to parse it into an <code>Instant</code> or a <code>ZonedDateTime</code> or an <code>OffsetDateTime</code> e.g.</p>
<pre><code>Instant instant = Instant.parse(&quot;2017-03-31T10:38:14.4723017Z&quot;);
ZonedDateTime zdt = ZonedDateTime.parse(&quot;2017-03-31T10:38:14.4723017Z&quot;);
OffsetDateTime odt = OffsetDateTime.parse(&quot;2017-03-31T10:38:14.4723017Z&quot;);
</code></pre>
<p>Note that <code>Z</code> represents a time zone offset of <code>+00:00</code> i.e. zero offset from UTC or GMT. I have parsed your date-time string into an <code>Instant</code> and converted it into a <code>ZonedDateTime</code> at <code>ZoneId.of(&quot;Asia/Kolkata&quot;)</code>.</p>
<p><strong>Demo:</strong></p>
<pre><code>class Main {
    public static void main(String args[]) {
        Instant instant = Instant.parse(&quot;2017-03-31T10:38:14.4723017Z&quot;);
        System.out.println(instant);

        ZonedDateTime zdt = instant.atZone(ZoneId.of(&quot;Asia/Kolkata&quot;));
        System.out.println(zdt);

        // Representation in a custom format
        System.out.println(zdt.format(
                DateTimeFormatter.ofPattern(&quot;M/d/uu h:mm a VV&quot;, Locale.ENGLISH)
        ));
    }
}
</code></pre>
<p><strong>Output:</strong></p>
<pre class=""lang-none prettyprint-override""><code>2017-03-31T10:38:14.472301700Z
2017-03-31T16:08:14.472301700+05:30[Asia/Kolkata]
3/31/17 4:08 PM Asia/Kolkata

</code></pre>
<p><a href=""https://ideone.com/NcoOyZ"" rel=""nofollow noreferrer"">Online Demo</a></p>
<p>Learn more about the modern Date-Time API from <strong><a href=""https://docs.oracle.com/javase/tutorial/datetime/index.html"" rel=""nofollow noreferrer"">Trail: Date Time</a></strong>.</p>
"
115,7825432,2535,5917104,Riaan Nel,true,6,1494936281,1494936281,44000968,44000755,"<p>Milliseconds (SSS) can only be three digits.  On more than that, the date rolls over - e.g. 10:38:14.1000 becomes 10:38:15.000.  Add a couple of million milliseconds...  and you get the behaviour that you're seeing now.</p>

<p>Try this.</p>

<pre><code>SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd'T'HH:mm:ss.SSS"");
Date c = sdf.parse(""2017-03-31T10:38:14.472Z"");

System.out.println(c);

DateFormat istFormat = new SimpleDateFormat();
DateFormat gmtFormat = new SimpleDateFormat();
TimeZone gmtTime = TimeZone.getTimeZone(""GMT"");
TimeZone istTime = TimeZone.getTimeZone(""IST"");

istFormat.setTimeZone(gmtTime);
gmtFormat.setTimeZone(istTime);
System.out.println(""GMT Time: "" + istFormat.format(c));
System.out.println(""IST Time: "" + gmtFormat.format(c));
</code></pre>
"
116,6269053,132,7321132,Urko Pineda,false,-1,1494935989,1494935989,44000865,44000755,"<p>Have you tried changing the format to <code>""yyyy-MM-dd'T'HH:mm:ss.sssssssZ""</code>?</p>

<p>Also, when you type <code>Z</code> in your Date object, you should write the time zone designator, for example, ""2017-03-31T10:38:14.4723017+01:00"".</p>
"
117,20590253,31,15114110,arilebedey,false,0,1734113292,1731967962,79201584,43131020,"<p>To fix the <code>adb</code> permission issue on Arch Linux:</p>
<ol>
<li><p><strong>Install <code>lsusb</code>:</strong></p>
<pre class=""lang-bash prettyprint-override""><code>sudo pacman -S usbutils
</code></pre>
</li>
<li><p><strong>Find Vendor ID:</strong>
Connect your Android device and run:</p>
<pre class=""lang-bash prettyprint-override""><code>lsusb
</code></pre>
<p>Look for your device in the output (e.g., <code>ID 18d1:4ee7</code> where <code>18d1</code> is the Vendor ID).</p>
</li>
<li><p><strong>Create <code>udev</code> Rules:</strong></p>
<pre class=""lang-bash prettyprint-override""><code>sudo nano /etc/udev/rules.d/51-android.rules
</code></pre>
<p>Add:</p>
<pre class=""lang-none prettyprint-override""><code>SUBSYSTEM==&quot;usb&quot;, ATTR{idVendor}==&quot;18d1&quot;, MODE=&quot;0666&quot;, GROUP=&quot;plugdev&quot;
</code></pre>
<p>Replace <code>18d1</code> with your Vendor ID.</p>
</li>
<li><p><strong>Reload Rules:</strong></p>
<pre class=""lang-bash prettyprint-override""><code>sudo udevadm control --reload-rules
sudo udevadm trigger
</code></pre>
</li>
<li><p><strong>Add User to <code>plugdev</code>:</strong>
If <code>plugdev</code> doesn’t exist:</p>
<pre class=""lang-bash prettyprint-override""><code>sudo groupadd plugdev
</code></pre>
<p>Then add your user:</p>
<pre class=""lang-bash prettyprint-override""><code>sudo usermod -aG plugdev $USER
</code></pre>
</li>
<li><p><strong>Log out/in and Test ADB:</strong>
Reconnect your device and run:</p>
<pre class=""lang-bash prettyprint-override""><code>adb devices
</code></pre>
</li>
</ol>
<p>No more <code>sudo</code> needed! 🎉</p>
"
118,4367132,84,3562513,paralith,false,-1,1725468580,1725468580,78949759,43131020,"<p>I'm not sure why, but adb just seems to struggle running on my Macbook (Sonoma   14.6.1). I've found that going into the Activity Monitor, finding adb, and force quitting it and waiting for it to restart itself solved this issue for me. (In addition to this port error, I've also seen it just hang, and the force quit from Activity Monitor also helps with that.)</p>
"
119,11279088,457,8272212,ali sampson,false,0,1680716950,1680716950,75942595,43131020,"<p>I was able to resolve this issue by following @vbevans94 steps.</p>
<p>Anyone running Android Studio <code>Electric Eel</code> and flutter <code>SDK 3.7.9</code> will definitely be experiencing this.
All I did was to download <code>SDK Platforms tools 33.0.2</code> from <a href=""https://androidsdkmanager.azurewebsites.net/Platformtools"" rel=""nofollow noreferrer"">https://androidsdkmanager.azurewebsites.net/Platformtools</a>, anything upwards didn't work for me.</p>
<p>Extract the file and navigate to this path <code>/android-sdk-path/platform-tools</code> and replace it with the new folder <code>platform-tools</code>. Restart <code>Android Studio</code>, Visual Studio Code or any other editor you're using and boom you're good to go.</p>
"
120,13663910,4551,10199138,MJ Studio,false,2,1665537772,1665537772,74035527,43131020,"<h1>Restart your PC</h1>
<p>This is the only way worked for me.</p>
"
121,5878968,750,4628993,Acau&#227; Pitta,false,33,1575863396,1575863396,59242290,43131020,"<pre><code>adb kill-server
</code></pre>

<p>if happens an error with port:</p>

<p><code>adb reconnect</code> solve it for me</p>
"
122,31180,29580,85421,user85421,false,0,1734113177,1734112796,79279202,14971647,"<p>Working with <code>char</code> will fail with most Unicode characters¹ - we must use code points (<code>int</code>) to avoid that:</p>
<pre class=""lang-java prettyprint-override""><code>if (a.contains(Character.toString(b.codePointAt(0)))) {
    // do something
}
</code></pre>
<ul>
<li><code>codePointAt(0)</code> will return the code point of the first character, an <code>int</code>;</li>
<li><code>Character.toString(int)</code> will return a String with that character;</li>
<li><code>String.contains(CharSequence)</code> will return <code>true</code> if the argument is found in the String (<code>this</code>)</li>
</ul>
<hr />
<p><strong>¹</strong> <sup>a <code>char</code> can only represent characters from <code>'\u0000'</code> to <code>'\uffff'</code> (<a href=""https://docs.oracle.com/javase/specs/jls/se23/html/jls-4.html#jls-4.2.1-100-E"" rel=""nofollow noreferrer"">JLS 4.2.1. Integral Types and Values</a>)</sup></p>
"
123,38432388,1,28771920,Hilda Roseline,false,0,1734112023,1734112023,79279176,14971647,"<p>charAt() is a method in the String to get the particular character in a String, whereas contains() is a method in the java String to check whether the given value is present or not and it prints in Boolean Value ie.(true, false)</p>
"
124,463751,1150,866835,D.S,false,0,1361330268,1361330268,14971694,14971647,"<p>1) <code>.contains()</code> is a String class method, hence cannot be used for primitive data type char<br/>
2) you can compare to chars just like integers b.charAt(i) == c.charAt(j), but cannot compare char to String</p>
"
125,2312566,1617,2030372,Alexandre Wiechers Vaz,true,2,1361330117,1361330117,14971676,14971647,"<p>Try this:</p>

<pre><code>if(a.indexOf(b.charAt(0)) != -1){
   //There's a match
}
</code></pre>
"
126,8291,879257,14860,paxdiablo,false,3,1361330458,1361330083,14971672,14971647,"<p>If you're trying to find out whether the first character of <code>b</code> is one of those in <code>a</code> then you can do it this way:</p>

<pre><code>if (a.indexOf(b.charAt(0)) != -1) ...
</code></pre>

<p>In other words, search the string for the character rather than trying to do it the other way around.</p>
"
149,10142493,1169,7491770,ram,true,3,1491130452,1491129284,43167314,43166319,"<p>This style of accessing data is not what <code>ORM</code> is intended for. If you are using <code>Hibernate</code>, you should (usually) access data through objects. To make this work, instead of embedding SQL like constraints, define relations <code>@OneToMany</code>, <code>@ManyToOne</code>, and/or <code>@ManyToMany</code> between objects where necessary.</p>

<p>In addition, you should consider using <code>HQL</code> (or <code>JPQL</code>) instead of pure <code>SQL</code>, to achieve what you want.</p>

<hr>

<p>It should be something like this:</p>

<pre><code>SELECT e FROM Emp e JOIN e.contUser u WHERE u.user = :userstring
</code></pre>

<p>You can check <a href=""https://en.wikibooks.org/wiki/Java_Persistence/JPQL"" rel=""nofollow noreferrer"">here</a> for further <code>JPQL</code> syntax.</p>
"
127,3211603,297375,2711488,Holger,false,3,1734113175,1734113175,79279219,79278711,"<p>I don’t think that printing a message when the condition changes makes the task easier. There is less work to do when we only check the condition when the preconditions for displaying a tooltip (i.e. when the mouse cursor is hoovering over the component or the user explictly presses <kbd>control</kbd> + <kbd>f1</kbd>) are met.</p>
<p>For example you can simply replace the line</p>
<pre class=""lang-java prettyprint-override""><code>JFormattedTextField textField = new JFormattedTextField();
</code></pre>
<p>with</p>
<pre class=""lang-java prettyprint-override""><code>JFormattedTextField textField = new JFormattedTextField() {
    // needed because we have no static ToolTipText
    {   ToolTipManager.sharedInstance().registerComponent(this);  }

    @Override
    public String getToolTipText() {
        return getPreferredSize().width &gt; getWidth()? getText(): null;
    }
};
</code></pre>
<p>To mimic the behavior of some look &amp; feels which display the tooltip of a cut off text directly over the text, you can add</p>
<pre class=""lang-java prettyprint-override""><code>@Override
public Point getToolTipLocation(MouseEvent event) {
    return new Point(0, 0);
}
</code></pre>
<p>to this component.</p>
"
128,38367444,46,28737927,TobiMoss,false,0,1734111311,1734111311,79279148,79278736,"<p>In Gradle you can put</p>
<pre><code>tasks.named('test') {
    useJUnitPlatform()
    systemProperty(&quot;spring.profiles.active&quot;, &quot;test&quot;)
}
</code></pre>
<p>to set your Spring Profile to <code>test</code> for this task.</p>
"
129,13215057,33,9543896,Rohan Aditeya,false,1,1734111148,1734111148,79279145,79278736,"<p>Here are the changes I had to do for making the application to build properly.</p>
<p>For simple and straight forward configuration of H2 for the purpose of running unit tests we can use the <a href=""https://docs.spring.io/spring-boot/3.4.0/api/java/org/springframework/boot/test/autoconfigure/jdbc/AutoConfigureTestDatabase.html"" rel=""nofollow noreferrer"">@AutoConfigureTestDatabase</a> as explained at the end of the <a href=""https://docs.spring.io/spring-boot/reference/testing/spring-boot-applications.html#testing.spring-boot-applications.autoconfigured-spring-data-jpa"" rel=""nofollow noreferrer"">Auto-configured Data JPA Tests</a> section in the spring boot documentation. This will configure a test datasource based on what we add in the classpath which is H2 in our case.
Here is a sample of how we can add the annotation in the code</p>
<pre><code>@SpringBootTest
@AutoConfigureTestDatabase(connection = EmbeddedDatabaseConnection.H2)
class UserTest{}
</code></pre>
<p>Do note that the above is needed for only replacing the Datasource bean we are creating in the application. However say by moving the datasource properties to a separate config file each for tests and application like having the MySQL datasource configs in a file called application-docker.yaml and not providing any datasource configs in any other yaml file. This way when our datasource is autoconfigured it does not always know the MySQL configs (unless profile docker is active). In this setup spring boot can detect H2 on the classpath and will configure H2 automatically for us. And when deploying we can run the application in docker with the profile docker active to instruct spring boot to connect to MySQL. Similarly when running unit tests we do not activate the profile docker and spring boot will configure H2 then.</p>
<p>Some other corrections I was able to find are.</p>
<ul>
<li>Spring boot 3.4 no longer depends on javax JPA APIs
this dependency must be removed <code>implementation 'javax.persistence:javax.persistence-api:2.2'</code> and the JPA imports must be from jakarta package which is pulled transitively by spring boot starter jpa</li>
<li>Since we are configuring MySQL dialect in application.properties and H2 dialect in application-test.properties for spring boot to use application-test.properties config we need to activate the test profile when running unit tests. One simple way I know is by adding the @ActiveProfiles annotation above the test class like this
<code>@ActiveProfiles(profiles = {&quot;test&quot;})</code></li>
</ul>
<p>Hope this helps.</p>
"
130,38417867,17,28764061,Prasoon Balara,false,2,1734110517,1734110517,79279119,79278928,"<p>I think instead of using &quot;{}&quot; string, you can simply replace it with new Object() or new JSONObject() as follows:</p>
<pre><code>requestBody.put(&quot;variables&quot;, new Object());
</code></pre>
<p>OR</p>
<pre><code>requestBody.put(&quot;variables&quot;, new JSONObject());
</code></pre>
"
131,37824832,536,28447954,Arf_code,false,6,1734107033,1734106512,79278943,79278928,"<p>Rather than string {} , pass it as <code>new JSONObject()</code></p>
<p>Replace your line :</p>
<pre><code>requestBody.put(&quot;variables&quot;, &quot;{}&quot;);
</code></pre>
<p>with this :</p>
<pre><code>requestBody.put(&quot;variables&quot;, new JSONObject());
</code></pre>
"
132,9064131,51,6749628,hafid,true,2,1734106427,1734106427,79278940,79278928,"<p>You should try this</p>
<pre><code>GraphQLQuery queryAndVars = new GraphQLQuery() //POJO class
JSONObject requestBody = new JSONObject();
requestBody.put(&quot;query&quot;,queryAndVars.getQuery());
requestBody.put(&quot;variables&quot;, new JSONObject());
</code></pre>
<p>in Json {} is the representation of an object.</p>
"
133,25522579,21,19312184,InfDreSta,false,-2,1734110347,1734110347,79279112,18093928,"<p>It is also worth noticing that a simple syntax mistake like added an extra space before argument like:</p>
<pre><code>java -Xmx1G  -Xmn128M someClass
</code></pre>
<p>instead of</p>
<pre><code>java -Xmx1G -Xmn128M someClass
</code></pre>
<p>Would also throw message &quot;Could not find or load main class...&quot; without any addition information.
I faced this when playing minecraft and copy paste some random jvm arguments from the internet without pay attention, which I was thought some arguments itself causing trouble. In the end I have to peek through the long madness arguments chain and try every single combination, just to relize an single extra space that causing trouble.</p>
"
134,7161605,11,5472208,Data engineer,false,0,1732313954,1732313954,79216731,18093928,"<p>In Eclipse, under Run Configuration, you can show the command line Eclipse uses to
run your program on the Dependencies tab.</p>
"
135,6683250,165,5155570,Gayathri,false,0,1695211649,1695211649,77142265,18093928,"<p>For Java 17, I had to ensure one of the classes in a module atleast had a main method. Simply adding the main method fixed it for me</p>
"
136,2543653,1930,2208909,Feng Zhang,false,0,1689620404,1689620404,76707386,18093928,"<p>In my case, my class was referring a file which was opened outside Eclipse. So it could not regenerate class on recompiling. Need to make sure all issues in &quot;Problems&quot; tab are cleared out.</p>
"
137,343034,59,674506,Uldis Barbans,false,2,1685820675,1685820675,76397736,18093928,"<p>Among all the answers so far, I lacked someone to call out this gross pitfall with regard to correct specification of application's classpath:</p>
<p><strong>If your application and your dependencies are packaged as jars on the filesystem, and you try to run it using the <code>java [options] &lt;mainclass&gt;</code> variant, then supplying directory name(s) in CLASSPATH is not enough! You have to add the <code>/*</code> wildcard!</strong></p>
<p><a href=""https://docs.oracle.com/en/java/javase/19/docs/specs/man/java.html"" rel=""nofollow noreferrer"">Documentation</a> is kind of elusive on this:</p>
<blockquote>
<p>If the class path option isn't used and [CLASSPATH] isn't set, then the user class path consists of the current directory (.).</p>
<p>...</p>
</blockquote>
<p>This sentence would make you presume that running <code>java com.acme.example.Gerbera</code> with <em>all the needed jars in your current directory</em> would surely work by default. Alas, it doesn't. You need to read a bit further in the documentation. What you need to do is <code>CLASSPATH=./* java com.acme.example.Gerbera</code>, or alternatively enumerate all the .jar filenames literally, with the appropriate separator.</p>
"
138,9064131,51,6749628,hafid,true,0,1734108286,1734108286,79279012,79278774,"<p>Did you try to make your Service methods transactional in order to let the ORM manage the commit ?</p>
<pre><code>@Transactional
public void createWorkflow(String workflowId, String appId) {
    var wf = new RCAWorkflow(
         UUID.randomUUID(), workflowId, &quot;localhost&quot;, &quot;1.0&quot;, appId, &quot;json!&quot;, 
         new Date());
    rcaWorkflowRepository.save(wf);
}
</code></pre>
"
140,23431785,585,17490497,Jean-Samuel Girard,false,-2,1734107612,1734039507,79276676,79276625,"<p><strong>It's a thread contention problem as stated in the Java <a href=""https://docs.oracle.com/javase/8/docs/api/java/util/Random.html"" rel=""nofollow noreferrer"">documentation</a></strong></p>
<p>In other words, Since you are sharing an instance of Random to multiple threads, whenever one of the threads attempts to get the next Random number it has to &quot;lock&quot; the instance to perform the work and get the next number. At the same time another thread tries to generate a number with the same instance, it has to wait for the first thread to complete its work and release the &quot;lock&quot; before it can start for the next number.</p>
<p>Each instance of Random can only generate one number at a time.</p>
<p>With ThreadLocalRandom you eliminate that problem, because each thread uses it's own Random instance.</p>
<hr />
<p><strong>EDIT:</strong> Someone pointed out this doesn't explain why Random works in that way, in short, this is because of the specs. An other answer explained it well, but simply put Random guarantees that given the same seed and the same method calls in the same order will always result in the same output. This could not be achieved if the threads could work on the instance at the same time because you would mess up with the ordering.</p>
<p>As to why they chose to design the specs that way, this is a common approach in multiple languages because generating the same numbers between multiple program runs is a common use case that would otherwise be hard to implement without the use of Random.</p>
<hr />
<p><strong>EDIT:</strong>
It's been a while since I touched any Java and remembered that there was this feature of class instances getting synchronized between threads automatically, but I incorrectly assumed this was the default behavior of any class when multiple threads were running.
To be honest I don't know why they chose to make it synchronized, it's not the only class made like that either. They made a choice and went with it. It probably would've made more sense to just make it non-thread-safe, but that's not how it is.</p>
"
141,6530674,941,5051894,jtobelem,false,0,1709826988,1709826988,78122733,40576728,"<p>you can specify port in jdbc url by :</p>
<pre class=""lang-java prettyprint-override""><code>private String url = &quot;jdbc:sqlserver://server1;DatabaseName=db;failoverPartner=server2;port=2776&quot;;
</code></pre>
"
142,87845,16134,243373,TT.,true,1,1479314546,1479124442,40588156,40576728,"<p>From the documentation <a href=""https://msdn.microsoft.com/en-us/library/ms378988.aspx"" rel=""nofollow noreferrer"">Connecting to SQL Server with the JDBC Driver - Setting the Connection Properties</a> documentation, property <code>failoverPartner</code>:</p>

<blockquote>
  <p><strong>Note:</strong> The driver does not support specifying the server instance port number for the failover partner instance as part of the failoverPartner property in the connection string. However, specifying the serverName, instanceName and portNumber properties of the principal server instance and failoverPartner property of the failover partner instance in the same connection string is supported.</p>
</blockquote>

<p>Worded very confusingly, but it looks like you can't specify a port number for the failover server.</p>

<hr>

<p>From KB-2284190 From Microsoft (<a href=""https://support.microsoft.com/en-us/kb/2284190"" rel=""nofollow noreferrer"">Applications cannot connect to a mirror partner server when using port number in the failoverPartner attribute of the connection string </a>) I'm pretty much reading the same:</p>

<blockquote>
  <p><strong>CAUSE</strong></p>
  
  <p>Both the error messages occur due to the fact that SQL Server JDBC drivers (all versions) do not support parsing of port number for FailoverPartner connection string attribute and rely on DNS and SQL Server Browser service (for named instances only) to resolve the connection information for the partner server.  In environments wherein the conditions discussed in the Symptoms sections are met, the JDBC driver is not able to resolve the partner server information and hence you get the error message discussed above.</p>
  
  <p>This behavior of SQL mirroring infrastructure is by design. For this reason, Microsoft JDBC Driver version 3.0 supports failover partner attribute value only in the format &lt;server_name&gt;[\&lt;SQL_Server_instance_name&gt;]. </p>
  
  <p><strong>RESOLUTION</strong></p>
  
  <p>To work around this problem, use one of the following methods in environments where database mirroring is involved:</p>
  
  <ul>
  <li><p>For default instances of SQL server that are part of mirroring configuration ensure that they are listening on the default port 1433 for TCP connections.</p></li>
  <li><p>For named instances, ensure that SQL browser service is running and port 1434 is not blocked on the network and server B is not configured as a hidden instance.</p></li>
  </ul>
</blockquote>

<hr>

<p>In conclusion, do one of the following:</p>

<ul>
<li>Specify the failover server to listen on port 1433 for TCP. </li>
<li>Make a named instance and specify the <code>failoverPartner</code> as <code>server_name\instance_name</code>. Make sure SQL Server Browser service is running and port 1434 is not blocked .</li>
</ul>
"
143,10770857,29,7924362,J.Blake,false,0,1734106420,1734106420,79278939,451182,"<p>As of modern java versions, there are two new options to those that have already been offered.</p>
<ol>
<li>Records are a new way of defining classes which are immutable and final. They have been available since Java 16, however previews exist in 14 and 15 as well.</li>
<li>Sealed classes allow you to white list certain classes to inherit interfaces and classes. The inheritors themselves can be final, sealed or open to inheritance according to your requirements. These are supported as of Java 17.</li>
</ol>
"
144,12222601,3,8921291,Eldar Bakerman,false,0,1513952452,1513952452,47943024,451182,"<p>Without using a final class, you can basically make all the constructors private:</p>

<pre><code>public class A {
    private A() {} //Overriding default constructor of Java
}
</code></pre>

<p>Which although will also make this class abstract-ish by disallowing creating an object of this class, yet as any inheritance requires <code>super();</code> in the constructor, and because the constructor is private, a compilation error will be the maximum you can get when one tries to inherit that class.
Yet, I would recommend using final instead as it is less code and includes the option of creating objects.</p>
"
145,10730,120285,20394,Mike Samuel,false,4,1232163635,1232163635,452748,451182,"<p>Make your constructors private and provide factory functions to create instances.</p>

<p>This can be especially helpful when you want to choose an appropriate implementation from multiple, but don't want to allow arbitrary subclassing as in</p>

<pre><code>abstract class Matrix {
   public static Matrix fromDoubleArray(double[][] elemens) {
     if (isSparse(elements)) {
      return new SparseMatrix(elements);
    } else {
      return new DenseMatrix(elements);
    }
  }
  private Matrix() { ... }  // Even though it's private, inner sub-classes can still use it
  private static class SparseMatrix extends Matrix { ... }
}
</code></pre>
"
146,1336,78273,1785,Landon Kuhn,false,9,1321285310,1232126538,451272,451182,"<ul>
<li>Use final</li>
<li>Use private constructors</li>
<li><p>Use a comment:</p>

<pre><code>// do not inherit
</code></pre></li>
<li><p>Use a javadoc comment</p></li>
<li>Make every method final, so people can't override them</li>
<li><p>Use a runtime check in the class constructor:</p>

<pre><code>if (this.getClass() != MyClass.class) {
    throw new RuntimeException(""Subclasses not allowed"");
}
</code></pre></li>
</ul>
"
147,970,405242,1288,Bill the Lizard,false,3,1232125986,1232125986,451234,451182,"<p>Using <code>final</code> is the canonical way.</p>

<pre><code>public final class FinalClass {
  // Class definition
}
</code></pre>

<p>If you want to prevent individual methods from being overridden, you can declare them as final instead. (I'm just guessing here, as to why you would <em>want</em> to avoid making the whole class final.)</p>
"
148,16780461,11,12130789,ameleito,false,1,1734105422,1734105422,79278903,79277429,"<p>In this moment we have a issue with the mic cause we are using the AS2SignatureAlgorithm.SHA256WITHRSA and its possible that when you try to send the algorithm directly from the message you start to get issues. if you know that MD5 works why is required to change it?</p>
<p>By the way like i told you we are testing with SHA256WITHRSA and apparently doesnt works. i just make some changes to use SHA2WITHRSA cause in some article i read that the support algorithm for signature are SHA-1 and MD5, did you test any other the error that we are receiving is the next one.</p>
<pre><code>org.apache.http.HttpException: Failed to encode MIC
at org.apache.camel.component.as2.api.util.MicUtils.createReceivedContentMic(MicUtils.java:111)
at org.apache.camel.component.as2.api.entity.AS2MessageDispositionNotificationEntity.&lt;init&gt;(AS2MessageDispositionNotificationEntity.java:95)
at org.apache.camel.component.as2.api.entity.DispositionNotificationMultipartReportEntity.&lt;init&gt;(DispositionNotificationMultipartReportEntity.java:66)
at org.apache.camel.component.as2.api.protocol.ResponseMDN.process(ResponseMDN.java:157)
at org.apache.http.protocol.ImmutableHttpProcessor.process(ImmutableHttpProcessor.java:142)
at org.apache.http.protocol.HttpService.handleRequest(HttpService.java:360)
at org.apache.camel.component.as2.api.AS2ServerConnection$RequestHandlerThread.run(AS2ServerConnection.java:163)
Caused by: java.lang.IllegalArgumentException: Data must be specified
at org.apache.camel.util.ObjectHelper.notNull(ObjectHelper.java:153)
at org.apache.camel.component.as2.api.util.EntityUtils.encode(EntityUtils.java:89)
at org.apache.camel.component.as2.api.util.MicUtils$ReceivedContentMic.&lt;init&gt;(MicUtils.java:48)
at org.apache.camel.component.as2.api.util.MicUtils.createReceivedContentMic(MicUtils.java:109)
... 6 common frames omitted
</code></pre>
<p>Let me know if you test with other algorithms before to try to do the thing that you want to do.</p>
"
150,14313923,11487,10802527,K J,true,4,1734104226,1734093797,79278362,79277212,"<p>An AI file is an Adobe proprietary hybrid. That like XFA forms is a PDF syntax wrapper around many sub parts. Thus in Illustrator the PDF output is not native. Here are some key lines, from a <strong>19 KB</strong> SVG. Note as over 300 KB AI the XMP/XML metadata with thumbnail is roughly 50 KB alone ! Black as RGB in PDF would be [0 0 0] but in AI we see a different grey (35 31 32). The PDF body is compressed as a stream so needs decompression, and parts are PostScript Level3 headers (not used by a PDF reader) 65 KB is compressed specific to an AI stream. eventually about 26 KB uncompressed is the PDF equivalence of a 19 KB 1200x1025.142 SVG!</p>
<pre><code>%PDF-1.6
%âãÏÓ
1 0 obj &lt;&lt;/Metadata 2 0 R
2 0 obj &lt;&lt;/Length 50644/Subtype/XML/Type/Metadata&gt;&gt;stream
&lt;xmp:CreatorTool&gt;Adobe Illustrator 27.5 (Windows)&lt;/xmp:CreatorTool&gt;
&lt;xmpGImg:width&gt;256&lt;/xmpGImg:width&gt;&lt;xmpGImg:height&gt;236&lt;/xmpGImg:height&gt;
&lt;xmpGImg:format&gt;JPEG&lt;/xmpGImg:format&gt;&lt;xmpGImg:image&gt;/9j/4AAQSkZJRgABAgEA...Cont...
&lt;xmpTPg:HasVisibleTransparency&gt;True&lt;/xmpTPg:HasVisibleTransparency&gt;
&lt;xmpTPg:PlateNames&gt;&lt;rdf:Seq&gt;&lt;rdf:li&gt;Cyan&lt;/rdf:li&gt;
&lt;rdf:li&gt;Magenta&lt;/rdf:li&gt;&lt;rdf:li&gt;Yellow&lt;/rdf:li&gt;&lt;rdf:li&gt;Black&lt;/rdf:li&gt;

&lt;xmpG:swatchName&gt;Black&lt;/xmpG:swatchName&gt;
&lt;xmpG:mode&gt;RGB&lt;/xmpG:mode&gt;&lt;xmpG:type&gt;PROCESS&lt;/xmpG:type&gt;
&lt;xmpG:red&gt;35&lt;/xmpG:red&gt;&lt;xmpG:green&gt;31&lt;/xmpG:green&gt;&lt;xmpG:blue&gt;32&lt;/xmpG:blue&gt;

3 0 obj&lt;&lt;/Count 1/Kids[5 0 R]/Type/Pages&gt;&gt;

stream %!PS-Adobe-3.0  %%Creator: Adobe Illustrator(R) 24.0
%%AI8_CreatorVersion: 27.5.0 %%For: (MISON) ()

13 0 obj &lt;&lt;/Length 65536&gt;&gt;stream %AI24_ZStandard_Data(µ/ý XT¿....Cont...

28 0 obj &lt;&lt;/Length 26758&gt;&gt; stream /OC /MC0 BDC /CS0 cs 0.494 0.827 0.969  scn /GS0 gs 0 68.74 1200 1025.142 re f ...........cont......
</code></pre>
<p>To explain how much SVG and PDF differ let us print your decompressed SVG in a Browser and decompress to see the similarities in vectors.
The SVG you can compare by reading in any text reader is on the left and for each stroke I have added a line feed. However the PDF format is optimised into a zip stream so need to be decompressed and then the line feeds and other white spaces are automatically added.</p>
<p>Things you can see instantly are:</p>
<ol>
<li>SVG declares the action like <strong>m</strong>ove or <strong>c</strong>urve at the start of a <strong>l</strong>ine. Whilst PDF is &quot;stack&quot; like and the action declared after the values.</li>
<li>SVG is relative offsets whilst PDF are absolutes.</li>
<li>In this case the starting value differs mathematically by only .00001 but is not always the case depending on rounding</li>
<li>Whilst the rounding off as &quot;floats&quot; in this case is fairly similar (.#####) the PDF needs more decimal places as absolute values.</li>
<li>Overall without compression. SVG is more compact for <strong>H</strong>yper <strong>T</strong>EXT <strong>T</strong>ransmission <strong>P</strong>rotocol<strong>s</strong> and as unpacked potentially faster to render.</li>
</ol>
<p>File size wise:<br />
Uncompressed SVG=18.8 KB<br />
PDF internal stream =6 0 obj &lt;&lt;/Length 22412&gt;&gt; with overheads 24.0 KB (compressed 10.4 KB)</p>
<p><a href=""https://i.sstatic.net/XeAK4Ocg.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/XeAK4Ocg.png"" alt=""enter image description here"" /></a></p>
<p>we are looking at just a very small part of this core section. <a href=""https://i.sstatic.net/KzbRPSGy.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/KzbRPSGy.png"" alt=""enter image description here"" /></a></p>
<p>File handling is thus totally different as the AI file may externally look smaller , yet have lots of additional Overheads like metadata and thumbnails which are not generally used by a PDF reader.</p>
<p>The PDF writer needs to convert all of an SVG area into PDF values. Then compact them to reduce file size. Part of the reason a PDF could not be made any smaller or faster as the whole image needs to be decompressed into much more memory before rendering a given stream.</p>
<p>Each have their own way of working and have very few similarities internally or in handling.</p>
<p>A good WEB based HTML to PDF Printing conversion tool, should use the web colouring system efficiently to produce a &quot;larger&quot; well coloured PDF.</p>
<p><a href=""https://i.sstatic.net/vptzaVo7.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/vptzaVo7.png"" alt=""enter image description here"" /></a></p>
"
151,382847,410,738343,Michael Edgar,true,2,1734101982,1734035073,79276497,79275521,"<p>There isn't really a way to do this using the standard annotations. You have a couple of options involving the static OpenAPI file or implementing an <code>OASFilter</code> to add the summary and/or description.</p>
<h2>Static OpenAPI</h2>
<p>Placing an <code>openapi.yaml</code> or <code>openapi.json</code> in <code>META-INF</code> (within <code>src/main/resources</code> for Maven projects), you can define just the <code>paths</code> and their descriptions that you care about. This file will be merged with the result of the annotation scanning.</p>
<pre class=""lang-yaml prettyprint-override""><code>paths:
  /foo:
    summary: ...,
    description: ...
  /foo/{bar}:
    summary: ...,
    description: ...
</code></pre>
<h2><code>OASFilter</code> Implementation</h2>
<p>Write an implementation of <code>org.eclipse.microprofile.openapi.OASFilter</code> and configure it by setting the fully-qualified class name as the value of property <code>mp.openapi.filter</code>. You can override method <code>filterPathItem</code> with whatever logic you want to set the properties. For example, you could look them up from config properties by first obtaining a <code>Config</code> from the <code>ConfigProvider</code>.</p>
<pre class=""lang-java prettyprint-override""><code>class MyFilter implements OASFilter {
    @Override
    public PathItem filterPathItem(PathItem pathItem) {
        // Logic to set the summary or description on pathItem goes here.
        return pathItem;
    }
}
</code></pre>
"
152,4135436,9,3392204,Jan Kunzmann,false,-1,1734074735,1734022489,79275942,79275521,"<p>You can do something like this with annotations:</p>
<pre><code>@GET
@Path(&quot;options/{foo}&quot;)
public Response getFoo(
   @Schema(description = &quot;some desc.&quot;,required = true)
   @PathParam(&quot;foo&quot;) String foo
) {
....
</code></pre>
<p>or you can merge/extend/enrich the generated openapi spec by putting an openapi.yaml in resources/META-INF.</p>
<p>On path items do this:</p>
<pre><code>@GET
@Path(&quot;search&quot;)
@Operation(operationId = &quot;SearchFoo&quot;, summary = &quot;Search Foos&quot;, description = &quot;Search Foos by status and date&quot;)
   public Foo searchFoo...
</code></pre>
"
153,9941523,1146,7357959,Tsvetoslav Tsvetkov,false,0,1668444318,1668444318,74435054,22609217,"<p>According to the docs, <code>setScale(int, int)</code>, has not been recommended since <a href=""https://docs.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html#setScale(int,%20int)"" rel=""nofollow noreferrer"">Java 1.5</a>, when enums were first introduced:</p>
<blockquote>
<p>The new <code>setScale(int, RoundingMode)</code> method should be used in preference to this legacy method.</p>
</blockquote>
<p>It was finally deprecated in <a href=""https://docs.oracle.com/javase/9/docs/api/java/math/BigDecimal.html#setScale-int-int-"" rel=""nofollow noreferrer"">Java 9</a>.</p>
<p>You should call <a href=""https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html#setScale-int-java.math.RoundingMode-"" rel=""nofollow noreferrer""><code>setScale(2, RoundingMode.HALF_EVEN)</code></a> instead. It makes error checking much simpler, since you can't pass in an undefined <code>enum</code>, but you can certainly pass in an integer mode which is undefined.</p>
"
154,2038814,11864,1820501,Florent Bayle,true,115,1734101420,1395667260,22610642,22609217,"<p>I think that the <code>RoundingMode</code> you are looking for is <code>HALF_EVEN</code>. From <a href=""http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html#ROUND_HALF_EVEN"" rel=""nofollow noreferrer"">the javadoc</a>:</p>
<blockquote>
<p>Rounding mode to round towards the &quot;nearest neighbor&quot; unless both neighbors are equidistant, in which case, round towards the even neighbor. Behaves as for ROUND_HALF_UP if the digit to the left of the discarded fraction is odd; behaves as for ROUND_HALF_DOWN if it's even. Note that this is the rounding mode that minimizes cumulative error when applied repeatedly over a sequence of calculations.</p>
</blockquote>
<p>Here is a quick test case:</p>
<pre><code>BigDecimal a = new BigDecimal(&quot;10.12345&quot;);
BigDecimal b = new BigDecimal(&quot;10.12556&quot;);

a = a.setScale(2, RoundingMode.HALF_EVEN);
b = b.setScale(2, RoundingMode.HALF_EVEN);

System.out.println(a);
System.out.println(b);
</code></pre>
<p>Correctly prints:</p>
<pre><code>10.12
10.13
</code></pre>
<p>UPDATE:</p>
<p><code>setScale(int, int)</code> has not been recommended since Java 1.5, when enums were first introduced, and was finally deprecated in Java 9. You should now use <code>setScale(int, RoundingMode)</code> e.g:</p>
<p><code>setScale(2, RoundingMode.HALF_EVEN)</code></p>
"
155,2078183,3446,1850925,Arjit,false,2,1395665152,1395665152,22609809,22609217,"<p>You can call <code>setScale(newScale, roundingMode)</code> method three times with changing the newScale value from 4 to 3 to 2 like </p>

<p>First case</p>

<pre><code>    BigDecimal a = new BigDecimal(""10.12345"");

    a = a.setScale(4, BigDecimal.ROUND_HALF_UP); 
    System.out.println("""" + a); //10.1235
    a = a.setScale(3, BigDecimal.ROUND_HALF_UP); 
    System.out.println("""" + a); //10.124
    a = a.setScale(2, BigDecimal.ROUND_HALF_UP);
    System.out.println("""" + a); //10.12
</code></pre>

<p>Second case</p>

<pre><code>    BigDecimal a = new BigDecimal(""10.12556"");

    a = a.setScale(4, BigDecimal.ROUND_HALF_UP); 
    System.out.println("""" + a); //10.1256
    a = a.setScale(3, BigDecimal.ROUND_HALF_UP); 
    System.out.println("""" + a); //10.126
    a = a.setScale(2, BigDecimal.ROUND_HALF_UP);
    System.out.println("""" + a); //10.13
</code></pre>
"
156,956558,31229,981744,Erwin Bolwidt,false,17,1395666354,1395664229,22609430,22609217,"<p>Add <code>0.001</code> first to the number and then call <code>setScale(2, RoundingMode.ROUND_HALF_UP)</code></p>

<p>Code example:</p>

<pre><code>public static void main(String[] args) {
    BigDecimal a = new BigDecimal(""10.12445"").add(new BigDecimal(""0.001""));
    BigDecimal b = a.setScale(2, BigDecimal.ROUND_HALF_UP);
    System.out.println(b);
}
</code></pre>
"
157,545654,8058,1360984,Harmlezz,false,2,1395664095,1395664095,22609378,22609217,"<p>You may try this:</p>

<pre><code>public static void main(String[] args) {
    BigDecimal a = new BigDecimal(""10.12345"");
    System.out.println(toPrecision(a, 2));
}

private static BigDecimal toPrecision(BigDecimal dec, int precision) {
    String plain = dec.movePointRight(precision).toPlainString();
    return new BigDecimal(plain.substring(0, plain.indexOf("".""))).movePointLeft(precision);
}
</code></pre>

<p>OUTPUT:</p>

<pre><code>10.12
</code></pre>
"
158,34001973,1,26335185,Rayan Argolo,false,0,1734099933,1734099933,79278640,5368976,"<p>Try this (methods and attributes used in abstract class, also works with open files)</p>
<pre><code>private static final String USER_HOME = System.getProperty(&quot;user.home&quot;);
private static final String DOWNLOAD_FOLDER = &quot;Downloads&quot;;

public abstract String getFileName();

public abstract String getExtension();

public File createFile() {

    int version = 0;
    File file = getFilePath(version);

    for (version = 1; file.exists(); version++) {
        file = getFilePath(version);
    }

    return file;
}

private File getFilePath(final int version) {

    final Path path = (version == 0)
            ? Paths.get(USER_HOME, DOWNLOAD_FOLDER, getFileName() + getExtension())
            : Paths.get(USER_HOME, DOWNLOAD_FOLDER, getFileName() + &quot; (&quot; + version + &quot;)&quot; + getExtension());

    return path.toFile();
}
</code></pre>
"
159,279561,26799,574799,lukastymo,true,2,1300630667,1300630667,5369011,5368976,"<ol>
<li>Read all files in directory. <a href=""http://download.oracle.com/javase/1.5.0/docs/api/java/io/File.html"" rel=""nofollow"">class File</a> </li>
<li>Parse name of files and retrieve number. <a href=""http://download.oracle.com/javase/1.5.0/docs/api/java/lang/String.html"" rel=""nofollow"">class String</a></li>
<li>Choose only the highest number. <a href=""http://download.oracle.com/javase/1.5.0/docs/api/java/lang/Integer.html"" rel=""nofollow"">class Integer</a> and <a href=""http://download.oracle.com/javase/1.5.0/docs/api/java/lang/Math.html"" rel=""nofollow"">class Math</a></li>
<li>If highest number exist create file-[highest number + 1].txt else cluster-1.txt</li>
</ol>
"
160,307607,822,618996,Vance Maverick,false,1,1300630619,1300630619,5369008,5368976,"<p>Simplest is probaby to get all the filenames in your output directory using <a href=""http://download.oracle.com/javase/6/docs/api/java/io/File.html#list%28%29"" rel=""nofollow"">File.list</a>, then look for the ones that match your pattern, either with hand-coded logic or <a href=""http://download.oracle.com/javase/6/docs/api/java/util/regex/package-summary.html"" rel=""nofollow"">Regex</a>. Having scanned the whole list, you'll know what's the largest existing number.</p>
"
161,6651855,266425,5133585,Sweeper,false,1,1734099314,1734099314,79278615,79278480,"<p>It is currently not possible to opt <em>in</em> to features. You can only opt <em>out</em>. There has been GitHub issues that propose such a feature, such as <a href=""https://github.com/projectlombok/lombok/issues/1933"" rel=""nofollow noreferrer"">this</a> and <a href=""https://github.com/projectlombok/lombok/issues/2837"" rel=""nofollow noreferrer"">this</a>. Here is what rzwitserloot said about this in the former,</p>
<blockquote>
<p>Feels a little too exotic. We don't add main features lightly, and you can already blanket-disable experimental (right now, a blanket ERROR/WARNING set on all experimentals can NOT be overridden by explicitly mentioning individual features. There's some merit to this but we'd have to document that the more specific stuff overrides the less specific stuff. Hmm, maybe that is obvious enough).</p>
<p>The main problem is that the way the flagUsage system is implemented, this would be a relatively large amount of work, and we're a bit swamped.</p>
</blockquote>
<p>So for now, you need to disable all the experimental features individually, <em>except</em> the ones you want to enable.</p>
"
162,4895787,11946,3945473,M.P. Korstanje,true,0,1734099236,1734099236,79278610,79277855,"<p>You're using the <code>junit-platform-suite-api</code>. Which is just the API for the test engine that executes the <code>@Suite</code> annotation. You should instead use <code>junit-platform-suite</code> which transitively adds a dependency on both <code>-api</code> and <code>-engine</code>.</p>
<p>Further more to ensure all the right versions are used, you'll want to use dependency management for both JUnit and Cucumber.</p>
<p>So everything together</p>
<pre class=""lang-xml prettyprint-override""><code>  &lt;dependencyManagement&gt;
        &lt;dependencies&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.junit&lt;/groupId&gt;
                &lt;artifactId&gt;junit-bom&lt;/artifactId&gt;
                &lt;version&gt;5.11.3&lt;/version&gt;
                &lt;type&gt;pom&lt;/type&gt;
                &lt;scope&gt;import&lt;/scope&gt;
            &lt;/dependency&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
                &lt;artifactId&gt;cucumber-bom&lt;/artifactId&gt;
                &lt;version&gt;7.20.1&lt;/version&gt;
                &lt;type&gt;pom&lt;/type&gt;
                &lt;scope&gt;import&lt;/scope&gt;
            &lt;/dependency&gt;
        &lt;/dependencies&gt;
    &lt;/dependencyManagement&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
            &lt;artifactId&gt;cucumber-picocontainer&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
            &lt;artifactId&gt;cucumber-java&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
            &lt;artifactId&gt;cucumber-junit-platform-engine&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.junit.platform&lt;/groupId&gt;
            &lt;artifactId&gt;junit-platform-suite&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;
            &lt;artifactId&gt;junit-jupiter-api&lt;/artifactId&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;


... your other non-cucumber and non junit dependencies here 


    &lt;/dependencies&gt;
</code></pre>
"
163,37494532,21,28274645,Ali İhsan TAŞDELEN,false,1,1734098332,1734098332,79278564,79278322,"<p>We should use separate INNER JOINS to solve double JOIN problem. If you want to use Specification we should implement static methods to use:</p>
<pre><code>import org.springframework.data.jpa.domain.Specification;
import javax.persistence.criteria.*;

public class AbstractCompanySpecification {

    public static Specification&lt;AbstractCompany&gt; isCityLondon() {
        return (root, query, criteriaBuilder) -&gt; {
            Join&lt;AbstractCompany, Company&gt; companyJoin = root.join(&quot;company&quot;, JoinType.INNER);
            return criteriaBuilder.equal(companyJoin.get(&quot;city&quot;), &quot;London&quot;);
        };
    }

    public static Specification&lt;AbstractCompany&gt; isInvitationNotExpired() {
        return (root, query, criteriaBuilder) -&gt; {
            Join&lt;AbstractCompany, Invitation&gt; invitationJoin = root.join(&quot;invitation&quot;, JoinType.INNER);
            return criteriaBuilder.isFalse(invitationJoin.get(&quot;expired&quot;));
        };
    }
}

public static Specification&lt;AbstractCompany&gt; isCityLondonAndInvitationNotExpired() {
    return Specification.where(isCityLondon())
                        .and(isInvitationNotExpired());
}

public static Specification&lt;AbstractCompany&gt; orderByName() {
    return (root, query, criteriaBuilder) -&gt; {
        query.orderBy(criteriaBuilder.asc(root.get(&quot;name&quot;)));
        return null; // return null, beacuse we only order it
    };
}
</code></pre>
<p>And in Repository interface:</p>
<pre><code>public interface AbstractCompanyRepository extends JpaRepository&lt;AbstractCompany, Long&gt;, JpaSpecificationExecutor&lt;AbstractCompany&gt; {
}
</code></pre>
<p>Last of all, we can use the Specification on field.</p>
<pre><code>Specification&lt;AbstractCompany&gt; specification = Specification
        .where(isCityLondonAndInvitationNotExpired())
        .and(orderByName());

List&lt;AbstractCompany&gt; result = abstractCompanyRepository.findAll(specification);
</code></pre>
<p>I hope it can help you. Good luck :)</p>
"
164,37494532,21,28274645,Ali İhsan TAŞDELEN,false,0,1734094314,1734094314,79278389,79278322,"<p>I see you are using <strong>@Inheritance(JOINED)</strong> annotation so the subclasses got foreign key column(s) which primary key of superclass.</p>
<p>I am going to recommend you solution on Spring Data JPA. On implementation, I didn't see any problem so I can help you for <strong>implement @Repository interface.</strong></p>
<pre><code>@Repository
public interface AbstractCompanyRepository extends JpaRepository&lt;AbstractCompany, Long&gt; {
    @Query(&quot;SELECT DISTINCT a FROM AbstractCompany a &quot; +
           &quot;JOIN Company c ON c.id = a.id &quot; +
           &quot;JOIN Invitation i ON i.id = a.id &quot; +
           &quot;WHERE c.city = 'London' &quot; +
           &quot;AND NOT i.expired&quot;)
    List&lt;AbstractCompany&gt; getLondonAndNotExpired();
}
</code></pre>
"
165,27000534,606,20561885,Mellik,true,1,1733995673,1733995673,79274501,79274476,"<p>You can use the UnboundID LDAP SDK.</p>
<p>UnboundID: &quot;<a href=""https://ldap.com/unboundid-ldap-sdk-for-java/"" rel=""nofollow noreferrer"">UnboundID Website</a>&quot;</p>
<p>This would then allow you to authenticate the Credentials against the Domain Controller.</p>
<pre><code>private static final String DC_ADDRESS = &quot;xx.xxx.xxx.xxx&quot;;

public static Boolean authenticate(String bindDN, String password) {
    String searchFilter = &quot;(sAMAccountName=&quot; + username +&quot;)&quot;;

    final SSLUtil sslUtil = new SSLUtil(new TrustAllTrustManager());

    try {
        SSLSocketFactory sslSocketFactory = sslUtil.createSSLSocketFactory();
        JavaToLDAPSocketFactory ldapSocketFactory =
                new JavaToLDAPSocketFactory(sslSocketFactory);
        LDAPConnection c = new LDAPConnection(ldapSocketFactory, DC_ADDRESS, 636);

        BindResult bindResult = c.bind(bindDM, password);

        if (c.isConnected()) {
            c.close();
        }

        if(bindResult.getResultCode() != ResultCode.SUCCESS) {
            Log.w(TAG, &quot;Authentication failed&quot;);
            return false;
        }

        return true;
    } catch(LDAPException e) {
        LogUtil.w(TAG, &quot;Authentication failed: &quot; + e.getMessage());
        LogUtil.e(TAG, &quot;StackTrace: &quot; + Arrays.toString(e.getStackTrace()));
        return e.toLDAPResult().getResultCode();
    } catch(Exception e) {
        LogUtil.e(TAG, &quot;Exception caught while authenticating: &quot; + e.getMessage());
        LogUtil.e(TAG, &quot;StackTrace: &quot; + Arrays.toString(e.getStackTrace()));
    }
    return false;
}
</code></pre>
"
166,4013540,375,3306321,ROT13,false,1,1392308844,1392308844,21759858,21759534,"<p>This strongly depends on the encryption-algorithm. If your message was encrypted with and key of the same length by xoring each letter, you have no chance to decrypt the message. The One-Time-Pad is a perfect secure encryption method (at least if it's used only for one encryption).</p>

<p>In case the message was encrypted with a non-perfect-secure method you should iterate over the key-space (the space all possible keys for encryption live in). Afterwards you have to check whether the resulting decrypted message is plausible to be the original message. For that you could check whether a dictonary contains substring of your candidate.</p>

<p>Again, it's pretty hard to describe a way to decrypt your message without any knowledge of the algorithm which was used for encryption.</p>
"
167,446125,8785,838976,Martin Dinov,false,0,1392308182,1392308182,21759618,21759534,"<p>If you want to fully automate the brute forcing, you need to know when the brute forcing/decryption has been successful - that is, you need to keep checking the decryption output and match it against a long dictionary of English words. If there is a strong match for the plaintext with known English words, then you've probably successfully decrypted it and can stop.</p>

<p>Note that even with a 16 bit key, depending on how the encryption was done, this is not entirely trivial to do, as you still need to know something about the encryption method.</p>
"
168,29120889,1,22308347,omar Elsayd,false,0,1734092136,1734092136,79278296,64939029,"<p>Go to google-services.json and modify the  file, you need to update all occurrences of package_name to your desired package name (com.example.labbookingsystem)</p>
"
169,20023491,43,14677877,eM Jay,true,1,1605977892,1605977892,64945682,64939029,"<p>The problem was in the Firebase side, if you changed the name in the android studio nothing will happen, because I did.
But what worked for me is to create a new app in Firebase console with the same name from the error message that kept appearing every time I tried to run my app:
&quot;No matching client found for package name &quot;com.example.labbookingsystem&quot;,
which in my case will be &quot;com.example.labbookingsystem&quot;.</p>
<p>Credit for the solution:
<a href=""https://www.youtube.com/watch?v=0D0RGXSAhL0"" rel=""nofollow noreferrer"">https://www.youtube.com/watch?v=0D0RGXSAhL0</a></p>
<p>Note: it is in 480p but it is worth it.</p>
"
170,31666968,5,24485186,Coder,false,0,1734092128,1734092128,79278295,44949254,"<p>I have created this custom method (C#) that worked for me. You will have to call the method in the log for the property it's showing CWE 117.</p>
<p>eg.
Logger.LogInformation($&quot;RequestId {Sanitize(RequestId)}&quot;);</p>
<p>HtmlEncoder.Default.Encode is present in namespace using System.Text.Encodings.Web;</p>
<pre><code>public static string Sanitize (string input)
    {
    if ( string.IsNullOrEmpty(input) )
        {
        return string.Empty;
        }
    input = Regex.Replace(value, @&quot;[\a\b\f\n\r\t\v]&quot;, &quot;_&quot;);
    input = new HtmlSanitizer().Sanitize(input);
    return HtmlEncoder.Default.Encode(input);
    }
 
</code></pre>
"
171,23503803,1,17553332,artmuz42,false,0,1731054904,1731054904,79169311,44949254,"<p>It's helped me:</p>
<pre><code>StringUtils.normalizeSpace(message)
</code></pre>
"
172,11794139,692,8629258,Sabesan,false,0,1679328751,1679327832,75792559,44949254,"<p>To use the Apache Commons Lang 3.12.0 library in your project, add the following dependency to your Gradle build file:</p>
<pre class=""lang-py prettyprint-override""><code>implementation 'org.apache.commons:commons-lang3:3.12.0'
</code></pre>
<p>If you are using Maven, add the following dependency to your <code>pom.xml</code> file:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;dependency&gt;
    &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;
    &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;
    &lt;version&gt;3.12.0&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<p>After adding the dependency, you can use the <code>StringEscapeUtils.escapeJava()</code> method to escape special characters in a Java string. To use this method, import the following package:</p>
<pre><code>import static org.apache.commons.lang3.StringEscapeUtils.escapeJava;;
</code></pre>
<p>Then, call the <code>escapeJava()</code> method with the string you want to escape:</p>
<pre><code>String escapedString = escapeJava(myString);
</code></pre>
<p>This method replaces any special characters in the input string with their corresponding escape sequences, making the string safe for use in Java code or data formats such as JSON or XML. By using this method from the Apache Commons Lang library, you can save time and ensure correctness in your string manipulation code.</p>
"
173,13418212,153,9681942,Margi212,false,2,1646373174,1645096715,71157157,44949254,"<p>I have tried with <strong>HtmlEscape</strong> of <strong>org.springframework.web.util.HtmlUtils</strong>, but it did <strong>not resolve</strong> by veracode's vulnerability. Give a try to below solution.</p>
<p>For Java use:</p>
<pre><code>StringEscapeUtils.escapeJava(str)
</code></pre>
<p>For Html/JSP use:</p>
<pre><code>StringEscapeUtils.escapeHtml(str)
</code></pre>
<p>Please use below package:</p>
<pre><code>import org.appache.commons.lang.StringEscapeUtils;
</code></pre>
"
174,18638595,21,13584910,div11,false,2,1590007121,1590007121,61922460,44949254,"<p>In order to avoid Veracode CWE 117 vulnerability I have used a custom logger class which uses HtmlUtils.htmlEscape() function to mitigate the vulnerablity.
Recommended solution to this problem by Veracode is to use ESAPI loggers but if you dont want to add an extra dependency to your project this should work fine. 
<a href=""https://github.com/divyashree11/VeracodeFixesJava/blob/master/spring-annotation-logs-demo/src/main/java/com/spring/demo/util/CustomLogger.java"" rel=""nofollow noreferrer"">https://github.com/divyashree11/VeracodeFixesJava/blob/master/spring-annotation-logs-demo/src/main/java/com/spring/demo/util/CustomLogger.java</a></p>
"
175,425954,825,806883,Victor Nazarov,false,0,1734091114,1734091114,79278233,60626607,"<p>I'm a maintainer of the <a href=""https://github.com/sviperll/result4j"" rel=""nofollow noreferrer"">https://github.com/sviperll/result4j</a> project that was created specifically to provide a Result-type for Java-programmers.</p>
"
176,22744518,51,16905468,SakurajimaMaii,false,1,1698884671,1698884671,77406312,60626607,"<p>Although you cannot get kotlin.Result directly in java, you can use the following method to get it:</p>
<pre class=""lang-kotlin prettyprint-override""><code>/**
 * ResultCompat.
 *
 * It is intended to solve the problem of being unable to obtain [kotlin.Result] in java.
 */
class ResultCompat&lt;T&gt;(val result: Result&lt;T&gt;) {

    companion object {
        /**
         * Returns an instance that encapsulates the given [value] as successful value.
         */
        fun &lt;T&gt; success(value: T): ResultCompat&lt;T&gt; = ResultCompat(Result.success(value))

        /**
         * Returns an instance that encapsulates the given [Throwable] as failure.
         */
        fun &lt;T&gt; failure(throwable: Throwable): ResultCompat&lt;T&gt; =
            ResultCompat(Result.failure(throwable))
    }

    /**
     * Returns `true` if [result] instance represents a successful outcome.
     * In this case [ResultCompat.isFailure] return `false` .
     */
    val isSuccess: Boolean
        get() = result.isSuccess

    /**
     * Returns `true` if [result] instance represents a failed outcome.
     * In this case [ResultCompat.isSuccess] returns `false`.
     */
    val isFailure: Boolean
        get() = result.isFailure

    /**
     * @see Result.getOrNull
     */
    fun getOrNull(): T? = result.getOrNull()

    /**
     * @see Result.exceptionOrNull
     */
    fun exceptionOrNull(): Throwable? = result.exceptionOrNull()

    override fun toString(): String =
        if (isSuccess) &quot;ResultCompat(value = ${getOrNull()})&quot;
        else &quot;ResultCompat(error = ${exceptionOrNull()?.message})&quot;
}
</code></pre>
<p>In *<strong>.kt</strong> file</p>
<pre class=""lang-kotlin prettyprint-override""><code>fun myFunction(completion: (ResultCompat&lt;String&gt;) -&gt; Unit){
    val result = ResultCompat.success(&quot;This is a test.&quot;)
    completion(result)
}
</code></pre>
<p>Using <code>myFunction</code> in *<strong>.java</strong>.</p>
<pre class=""lang-java prettyprint-override""><code>void myFunction(){
    myFunction(result -&gt; {
        // You should not get result in java.
        result.getResult();
        // correctly
        result.exceptionOrNull();
        result.getOrNull();
        result.isSuccess();
        result.isFailure();
        return null;
    });
}
</code></pre>
"
177,3283735,5090,2763683,Andrea Bergonzo,false,3,1594180878,1594180878,62787351,60626607,"<p>There is no standard support for <code>Result</code> like types in Java but you can always use third-party libraries like <a href=""https://github.com/HubSpot/algebra"" rel=""nofollow noreferrer""><code>HubSpot/algebra</code></a>.</p>
"
201,2670445,147,2307979,coltonfranco,false,2,1535066867,1535066867,51995561,42725199,"<p>All credit for this answer goes to @pramodh (Hidden in OP's comments)</p>

<p>I had the exact same problem and installing his reccomended dependencies fixed everything.</p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;net.minidev&lt;/groupId&gt;
    &lt;artifactId&gt;json-smart&lt;/artifactId&gt;
    &lt;version&gt;2.3&lt;/version&gt;
    &lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt; 
&lt;dependency&gt; 
    &lt;groupId&gt;net.minidev&lt;/groupId&gt;
    &lt;artifactId&gt;asm&lt;/artifactId&gt;
    &lt;version&gt;1.0.2&lt;/version&gt;
    &lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>
"
178,18280013,10465,13308991,Arpit Shukla,false,8,1734090858,1638160466,70149782,70149719,"<p>You can use the <code>chunked</code> function to split a given collection into a list of lists where the size of inner list can be any chosen number.</p>
<pre class=""lang-kotlin prettyprint-override""><code>val array = arrayListOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
println(array.chunked(6)) // [[1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12]]
</code></pre>
<p>If the size of array is not divisible by 6, the last inner list will have the remaining (size % 6) elements.</p>
<p>This will give you a <code>List&lt;List&lt;Int&gt;&gt;</code>. If you really want it to be <code>ArrayList&lt;ArrayList&lt;Int&gt;&gt;</code> you can convert it like this:</p>
<pre class=""lang-kotlin prettyprint-override""><code>array.chunked(6).map { it.toCollection(ArrayList()) }.toCollection(ArrayList())
</code></pre>
"
179,2486375,12699,2164728,Benjamin,true,1,1655703138,1655702418,72682499,72682139,"<p>Area nodes have code boxes you can use if you apply &quot;access restriction&quot;. Just set it to <code>infinity</code> as below (EDIT: You need to set it to <code>Integer.MAX_VALUE</code> instead!). Now you can count whenever a ped enters/exits, and do your studies:
<a href=""https://i.sstatic.net/LOGZP.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/LOGZP.png"" alt=""enter image description here"" /></a></p>
<p>For average speeds, etc., you can use a cyclic event that regularly does calcs for all peds in your node. Simply add/remove peds (using the enter/exit code fields below) into a local collection and loop across all peds in that collection to do calcs across them.</p>
"
180,5610216,635,4443260,Kris Rice,false,2,1734089798,1734086575,79278011,79273206,"<p>I think I have found the issue. The problem was with my configuration and the Hibernate starter guide. This might save some other people some time.</p>
<p>The starter guide has references to <code>URL</code>, <code>USER</code> variables when setting the config, which from the imports, suggests these are available from:</p>
<p><code>org.hibernate.cfg.AvailableSettings.*</code></p>
<p>Which might be true for Java. However, they are actually located in an inherited class:</p>
<p><code>org.hibernate.cfg.JdbcSettings</code></p>
<p>So in Scala:</p>
<p><code>import org.hibernate.cfg.JdbcSettings._</code></p>
<p>This then allowed me to set my config like this:</p>
<pre><code>val config = new Configuration()
  .addAnnotatedClass(classOf[Registration])
  .setProperty(JAKARTA_JDBC_URL, getConnectionString)
  .setProperty(JAKARTA_JDBC_USER, user)
  .setProperty(JAKARTA_JDBC_PASSWORD, pw)
  // use Agroal connection pool
  .setProperty(&quot;hibernate.agroal.maxSize&quot;, &quot;20&quot;)
  // display SQL in console
  .setProperty(SHOW_SQL, &quot;true&quot;)
  .setProperty(FORMAT_SQL, &quot;true&quot;)
  .setProperty(HIGHLIGHT_SQL, &quot;true&quot;)
</code></pre>
<p>Another note, the documentation is actually out of date. <code>URL</code>, <code>USER</code> and <code>PASS</code> are deprecated, you must use <code>JAKARTA_JDBC_*</code> (see above config) to set the values.</p>
<p>This fixed the above issue, so I'm marking this as resolved. I am now getting issues connecting to the database, which is outside the scope of the original question. I hope (given I found several people online having the same problems), this saves someone some time.</p>
"
181,11918038,1,8721465,Antonio Sampere,false,0,1679412171,1679412171,75803128,63876345,"<p>Thank you for your code. I've tried it, just a thing on the Santhosh answer, I've a ClassCastException:</p>
<pre><code>class com.google.gson.JsonPrimitive cannot be cast to class
com.google.gson.JsonObject (com.google.gson.JsonPrimitive and
com.google.gson.JsonObject are in unnamed module of loader 'app')
</code></pre>
<p>These calls:</p>
<pre><code>getAsJsonObject().getAsJsonObject(&quot;access_token&quot;)
getAsJsonObject().getAsJsonObject(&quot;expires_in&quot;)
</code></pre>
<p>work this way:</p>
<pre><code>getAsJsonObject().getAsJsonPrimitive(&quot;access_token&quot;)
getAsJsonObject().getAsJsonPrimitive(&quot;expires_in&quot;)
</code></pre>
"
182,14364740,91,10376131,Santhosh,false,0,1635918852,1635918499,69820176,63876345,"<p>For anyone whos looking for the same, Here's a better one</p>
<pre><code>import com.google.gson.JsonParser;
import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.StandardCharsets;

public class SpotifyToken {
    public String accessToken = &quot;&quot;;
    public String expiresIn = &quot;&quot;;


    public void get() throws IOException {

        URL url = new URL(Endpoints.TOKEN);
        HttpURLConnection http = (HttpURLConnection) url.openConnection();
        http.setRequestMethod(&quot;POST&quot;);
        http.setDoOutput(true);
        http.setRequestProperty(&quot;content-type&quot;, &quot;application/x-www-form-urlencoded&quot;);

        String data = &quot;grant_type=client_credentials&amp;client_id=&quot; + Endpoints.CLIENT_ID + &quot;&amp;client_secret=&quot; + Endpoints.CLIENT_SECRET + &quot;&quot;;

        byte[] out = data.getBytes(StandardCharsets.UTF_8);

        OutputStream stream = http.getOutputStream();
        stream.write(out);

        BufferedReader Lines = new BufferedReader(new InputStreamReader(http.getInputStream()));
        String currentLine = Lines.readLine();
        StringBuilder response = new StringBuilder();
        while (currentLine != null) {
            response.append(currentLine).append(&quot;\n&quot;);
            currentLine = Lines.readLine();
        }

        this.accessToken = String.valueOf(JsonParser.parseString(String.valueOf(response)).getAsJsonObject().getAsJsonObject(&quot;access_token&quot;));
        this.expiresIn = String.valueOf(JsonParser.parseString(String.valueOf(response)).getAsJsonObject().getAsJsonObject(&quot;expires_in&quot;));

        http.disconnect();
    }
}
</code></pre>
<p>The class Endpoints.java will be</p>
<pre><code>public class Endpoints {
    public static final String CLIENT_ID = &quot;YOUR_CLIENT_ID&quot;;
    public static final String CLIENT_SECRET = &quot;YOUR_CLIENT_SECRET&quot;;
    public static final String TOKEN = &quot;https://accounts.spotify.com/api/token&quot;;
}

</code></pre>
<p>If it interests you, here is the cURL command for the same:</p>
<pre><code>curl --request POST \
  --url 'https://accounts.spotify.com/api/token' \
  --header 'content-type: application/x-www-form-urlencoded' \
  --data grant_type=client_credentials \
  --data client_id=YOUR_CLIENT_ID \
  --data client_secret=YOUR_CLIENT_SECRET \
</code></pre>
<p>I used <a href=""https://reqbin.com/req/java/c-w7oitglz/convert-curl-to-http-request"" rel=""nofollow noreferrer"">this</a> tool to convert cURL to java code.</p>
"
183,18210139,21,13252819,TootLoops,true,2,1600223914,1600223914,63912346,63876345,"<p>Thanks to Rup I was able to identify the issue. I was not properly sending anything with the POST. I added .getOutputStream() so send the request and .getInputStream() to receive the response.</p>
<pre><code>    //create url access point
    URL url = new URL(tokenURL);
    
    //open http connection to url
    conn = (HttpURLConnection) url.openConnection();
    conn.setDoOutput(true); 
    conn.setDoInput(true);
    
    //setup post function and request headers
    conn.setRequestMethod(&quot;POST&quot;);
    conn.setRequestProperty(&quot;Authorization&quot;,String.format(&quot;Basic %s&quot;, clientCredEncode));
    conn.setRequestProperty(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded&quot;);

    //set body for posting
    String body = &quot;grant_type=client_credentials&quot;;
    
    //calculate and set content length
    byte[] out = body.getBytes(StandardCharsets.UTF_8);
    int length = out.length; 
    conn.setFixedLengthStreamingMode(length);
    
    //connect to http
    conn.connect();
    //}
    
    //send bytes to spotify
    try(OutputStream os = conn.getOutputStream()) {
        os.write(out);
    }
    
    //receive access token
    InputStream result = conn.getInputStream();
    s = new String(result.readAllBytes());
    //System.out.println(s);
</code></pre>
"
210,198143,346,442639,Dave LeBlanc,false,0,1360274591,1303146892,5706428,2777005,"<p>I realize my answer is about a year old, but as this is one of the top links for ""java http pipelining"", I thought it was relevant.</p>

<p>Hotpotato does indeed now support pipelining, and in my limited experience it's been working great so far. Also has a nice API to boot.</p>

<p><a href=""http://hotpotato.biasedbit.com/"" rel=""nofollow"">http://hotpotato.biasedbit.com/</a></p>

<p>EDIT: Looks like this project is now unmaintained and the author recommends the Async HTTP client: <a href=""https://github.com/ning/async-http-client/"" rel=""nofollow"">https://github.com/ning/async-http-client/</a></p>
"
184,260936,371,6035432,moogpwns,false,0,1734089723,1734089723,79278167,77081390,"<p>The <a href=""https://java.testcontainers.org/supported_docker_environment/logging_config/"" rel=""nofollow noreferrer"">recommended logback configuration</a> in the TestContainers docs provides an example logback config xml that will suppress these debug logs from HttpClient.</p>
<p>Add the following in <code>src/test/resources/logback-test.xml</code>:</p>
<pre><code>&lt;configuration&gt;
    &lt;appender name=&quot;STDOUT&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;
        &lt;encoder&gt;
            &lt;pattern&gt;%d{HH:mm:ss.SSS} [%thread] %-5level %logger - %msg%n&lt;/pattern&gt;
        &lt;/encoder&gt;
    &lt;/appender&gt;

    &lt;root level=&quot;info&quot;&gt;
        &lt;appender-ref ref=&quot;STDOUT&quot;/&gt;
    &lt;/root&gt;

    &lt;logger name=&quot;org.testcontainers&quot; level=&quot;INFO&quot;/&gt;
    &lt;!-- The following logger can be used for containers logs since 1.18.0 --&gt;
    &lt;logger name=&quot;tc&quot; level=&quot;INFO&quot;/&gt;
    &lt;logger name=&quot;com.github.dockerjava&quot; level=&quot;WARN&quot;/&gt;
    &lt;logger name=&quot;com.github.dockerjava.zerodep.shaded.org.apache.hc.client5.http.wire&quot; level=&quot;OFF&quot;/&gt;
&lt;/configuration&gt;
</code></pre>
"
185,1423499,1124,1347608,F. P. Freely,false,1,1727378825,1727378825,79028853,77081390,"<pre><code>    &lt;!-- see https://java.testcontainers.org/supported_docker_environment/logging_config/ --&gt;
    &lt;logger name=&quot;com.github.dockerjava&quot; level=&quot;WARN&quot;/&gt;
    &lt;logger name=&quot;com.github.dockerjava.zerodep.shaded.org.apache.hc.client5.http.wire&quot; level=&quot;OFF&quot;/&gt;
</code></pre>
"
186,21331390,51,15703151,kirill,false,0,1694523510,1694523510,77089350,77081390,"<p>The lines come from <code>HttpClient</code>. Here is the discussion on how to turn it off:
<a href=""https://stackoverflow.com/questions/4915414/disable-httpclient-logging"">Disable HttpClient logging</a></p>
<p>In my case helped adding logback.xml file with the following content:</p>
<pre><code>&lt;configuration debug=&quot;false&quot;&gt;
    &lt;!-- definition of appender STDOUT --&gt;
    &lt;appender name=&quot;STDOUT&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;
        &lt;encoder&gt;
            &lt;pattern&gt;%-4relative [%thread] %-5level %logger{35} - %msg %n&lt;/pattern&gt;
        &lt;/encoder&gt;
    &lt;/appender&gt;

    &lt;root level=&quot;INFO&quot;&gt;
        &lt;!-- appender referenced after it is defined --&gt;
        &lt;appender-ref ref=&quot;STDOUT&quot;/&gt;
    &lt;/root&gt;
&lt;/configuration&gt;
</code></pre>
"
187,21331390,51,15703151,kirill,false,0,1694435858,1694435858,77081692,77081390,"<p>Found it. It is org.rnotrth.ducttape library. To exclude its debug messages from logs just use:</p>
<pre><code>logging:
  level:
    org.rnorth: WARN
</code></pre>
"
188,38422367,1,28766698,jvfresco,false,0,1734089515,1734089344,79278147,32357075,"<p>The suggested solutions write the data into files and then the implementation retrieves the destination from files. Not recommended</p>
<p>Without files can be done using interface DestinationDataProvider and abstract class Environment from sapjco:</p>
<p>Create a custom class that implements interface DestinationDataProvider, e.g:</p>
<pre><code>public class CustomDestinationDataProvider implements DestinationDataProvider {
private final Map&lt;String, Properties&gt; destinations = new HashMap&lt;&gt;();

public void addDestination(String destinationName, Properties properties) {
    destinations.put(destinationName, properties);
}

@Override
public Properties getDestinationProperties(String destinationName) {
    if (destinations.containsKey(destinationName)) {
        return destinations.get(destinationName);
    }
    throw new RuntimeException(&quot;Destination &quot; + destinationName + &quot; not found!&quot;);
}
</code></pre>
<p>Create the properties as in the example, use them in your custom class, and register the provider in the Environment:</p>
<pre><code>Properties connectProperties = getConnectionProperties();
CustomDestinationDataProvider destinationDataProvider = new CustomDestinationDataProvider();
destinationDataProvider.addDestination(DESTINATION_NAME, connectProperties);
Environment.registerDestinationDataProvider(destinationDataProvider);
</code></pre>
<p>And get the destination for usage:</p>
<pre><code>JCoDestination destination = JCoDestinationManager.getDestination(DESTINATION_NAME)
</code></pre>
"
189,10872990,1785,7994269,Jorge Santos Neill,false,0,1585079794,1585079794,60838383,32357075,"<p>The code that worked for me to stablish connection is the following:</p>

<pre><code>package com.example.springsocial.sap;

import java.io.File;
import java.io.FileOutputStream;
import java.util.Properties;

import com.sap.conn.jco.JCoDestination;
import com.sap.conn.jco.JCoDestinationManager;
import com.sap.conn.jco.JCoException;
import com.sap.conn.jco.ext.DestinationDataProvider;

public class SapTest {
    static String   IP=""192.168.1.1"", //IP or HOST
                    USER=""userName"", // user name of SAP
                    PASSWORD=""mypassword"", // password of SAP
                    CLIENT=""100"", //mandant in sap
                    SYSNR=""00"", // instance number
                    LANG=""es""; // language (es or en)

    public static void main(String[] args) {
        System.out.println(""SAP Test is running"");
        try {
            // This will create a file called mySAPSystem.jcoDestination
            String DESTINATION_NAME1 = ""mySAPSystem"";
            Properties connectProperties = new Properties();
            connectProperties.setProperty(DestinationDataProvider.JCO_ASHOST,   IP);
            connectProperties.setProperty(DestinationDataProvider.JCO_SYSNR,    SYSNR);
            connectProperties.setProperty(DestinationDataProvider.JCO_CLIENT,   CLIENT);
            connectProperties.setProperty(DestinationDataProvider.JCO_USER,     USER);
            connectProperties.setProperty(DestinationDataProvider.JCO_PASSWD,   PASSWORD);
            connectProperties.setProperty(DestinationDataProvider.JCO_LANG,     LANG);
            createDestinationDataFile(DESTINATION_NAME1,connectProperties);

        // This will use that destination file to connect to SAP

            JCoDestination destination = JCoDestinationManager.getDestination(""mySAPSystem"");
            System.out.println(""Attributes:"");
            System.out.println(destination.getAttributes());
            System.out.println();
            destination.ping();
        } catch (JCoException ex) {
            System.out.println(""exception ""+ex.toString());
        } catch(Exception ex) {
            System.out.println(""exception ""+ex.toString());
        }
    }

    private static void createDestinationDataFile(String destinationName, Properties connectProperties)
    {
        File destCfg = new File(destinationName+"".jcoDestination"");
        try
        {
            FileOutputStream fos = new FileOutputStream(destCfg, false);
            connectProperties.store(fos, ""for tests only !"");
            fos.close();
        }
        catch (Exception e)
        {
            throw new RuntimeException(""Unable to create the destination files"", e);
        }
    }
}
</code></pre>
"
190,10552741,1,8250790,Niels,false,0,1536367485,1536367485,52231075,32357075,"<p>In Docker for your app</p>

<pre><code>FROM niels58/java8:latest
ARG JAR_FILE
ARG SPRING_PROFILES_ACTIVE
ARG LD_LIBRARY_PATH 
ARG CLASSPATH
ENV SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE} \
        LD_LIBRARY_PATH=${LD_LIBRARY_PATH} \
        CLASSPATH=${CLASSPATH} 
RUN export PATH=$PATH:${LD_LIBRARY_PATH} &amp;&amp; \
        export PATH=$PATH:${CLASSPATH} &amp;&amp; \   
        env
RUN mkdir -p /opt/sap/
COPY  src/main/resources/lib/* /opt/sap/
COPY ${JAR_FILE} app.jar
RUN [""java"",""-jar"", ""/opt/sap/sapjco3.jar""]
ENTRYPOINT [ ""java"",""-Xmx1024m"",""-Djava.security.egd=file:/dev/./urandom"",""-jar"",""/app.jar"" ]
</code></pre>
"
191,5587190,1581,4427477,Sameer Kumar Choudhary,false,4,1563435175,1490898947,43125837,32357075,"<p>Setting Up Of SAP Connection using SAP JCO3 in Eclipse IDE One Can Setup SAP Application connection with Java Application using below steps:</p>

<p>Steps to Produce:</p>

<ol>
<li>Download SAP Java connectors SAPJCO3 (32bit or 64bit based on your System architecture) from SAP Marketplace.</li>
<li>Create a separate folder and keep the downloaded sapjco3 zip file and unzip it.</li>
<li>Copy the location of <code>sapjco3.jar</code> file in the newly created folder.</li>
<li>Now go to Environment Variables and create system variables CLASSPATH if not  exist and add location of <code>sapjco3.jar</code> followed by ; <code>ex: D:\sapjco3-NTAMD64-3.0.16\sapjco3.jar;</code></li>
<li>Edit System Variable PATH and add newly created folder location followed by ; ex: <code>D:\sapjco3-NTAMD64-3.0.16;</code></li>
<li>Now Go to Eclipse and Create a new project.</li>
<li>Create a new Class with any name for connecting to SAP application.</li>
<li>Right Click on Newly created project and go to build path and click Configure Build Path.</li>
<li>Click on Libraries and Add External Jars.</li>
<li>Now select <code>sapjco3.jar</code> file just downloaded.</li>
<li>Make your class name as same as you created in step 7.</li>
<li>Write the Java code </li>
</ol>
"
192,104447,14155,279255,Marc,false,0,1479136781,1479136781,40592115,32357075,"<pre><code>import com.sap.conn.jco.ext.DestinationDataProvider;
import com.sap.conn.jco.JCoDestination;
import com.sap.conn.jco.JCoException;
import com.sap.conn.jco.JCoDestinationManager;

import java.util.Properties;

public class TestMySAP {

    public static void main(String[] args) {

        // This will create a file called mySAPSystem.jcoDestination
        String DESTINATION_NAME1 = ""mySAPSystem"";
        Properties connectProperties = new Properties();
        connectProperties.setProperty(DestinationDataProvider.JCO_ASHOST, ""yoursaphost.yourdomain.com"");
        connectProperties.setProperty(DestinationDataProvider.JCO_SYSNR,  ""00"");
        connectProperties.setProperty(DestinationDataProvider.JCO_CLIENT, ""100"");
        connectProperties.setProperty(DestinationDataProvider.JCO_USER,   ""youruser"");
        connectProperties.setProperty(DestinationDataProvider.JCO_PASSWD, ""******"");
        connectProperties.setProperty(DestinationDataProvider.JCO_LANG,   ""en"");
        sap2.createDestinationDataFile(DESTINATION_NAME1, connectProperties);

        // This will use that destination file to connect to SAP
        try {
            JCoDestination destination = JCoDestinationManager.getDestination(""mySAPSystem"");
            System.out.println(""Attributes:"");
            System.out.println(destination.getAttributes());
            System.out.println();
            destination.ping();
        } catch (JCoException e) {
            e.printStackTrace();
        }

    }
}
</code></pre>
"
193,2252692,341,1984604,Divyarajsinh Jadeja,false,0,1701765121,1701765121,77604763,75578686,"<p>For me first option from above answer worked. I was using VS Code Remote Development with Java project. After doing following steps, PKIX errors with pom.xml went away,</p>
<pre><code># Set JAVA_HOME to path of your VSCode JRE
export JAVA_HOME=~/.vscode-server/extensions/redhat.java-1.25.0/jre/17.0.9-linux-x86_64/
# Import certs
$JAVA_HOME/bin/keytool -import -trustcacerts -storepass changeit -noprompt -alias mycert -file ~/certs/certificate.crt -cacerts
</code></pre>
<p><a href=""https://github.com/redhat-developer/vscode-java/wiki/Use-proper-cacerts-to-import-Java-projects"" rel=""nofollow noreferrer"">https://github.com/redhat-developer/vscode-java/wiki/Use-proper-cacerts-to-import-Java-projects</a> also helps.</p>
"
194,3300251,155,2776597,Christian,false,-2,1690880038,1690880038,76810007,75578686,"<p>Starting with Maven 3.9 they changed the default Transport implementation to <strong>native</strong>.</p>
<p>Try with this option to disable SSL verifications:</p>
<pre><code>mvn compile -Daether.connector.https.securityMode=insecure
</code></pre>
<p>Background:
<a href=""https://maven.apache.org/resolver/configuration.html"" rel=""nofollow noreferrer"">https://maven.apache.org/resolver/configuration.html</a></p>
"
195,2072184,96,1846392,csnje,false,8,1734088870,1678238882,75668679,75578686,"<p>Trying to resolve this problem for my environment, I found your comment</p>
<blockquote>
<p>It seems that the &quot;Language Support for Java&quot; (VSCode plugin) is using a different JDK ...</p>
</blockquote>
<p>was the key to discovering a fix in my case.
<a href=""https://github.com/redhat-developer/vscode-java/issues/2259"" rel=""nofollow noreferrer"">This link</a> explains that the extension does use an embedded JRE and also provides a resolution to the problem.</p>
<p>The embedded JRE is located at (depending on the extension version and operating system):</p>
<pre class=""lang-none prettyprint-override""><code>$HOME/.vscode/extensions/redhat.java-1.15.0-linux-x64/jre
</code></pre>
<p>which is usually located directly under <code>$HOME</code> on Linux/macOS or <code>%USERPROFILE%</code> on Windows. The embedded JRE has a <code>cacerts</code> file, for example:</p>
<pre><code>.vscode/extensions/redhat.java-1.15.0-linux-x64/jre/17.0.6-linux-x86_64/lib/security/cacerts
</code></pre>
<p>To resolve the problem you can either:</p>
<ol>
<li>add the required certificates to the embedded JRE <code>cacerts</code> file, <em>however, you will need to repeat this every time the extension is updated</em>, or</li>
<li>configure the embedded JRE to use another certificate store file that contains the required certificates by modifying the VSCode user settings (<code>settings.xml</code> file) <code>&quot;java.jdt.ls.vmargs&quot;</code> entry to <em>append</em> the properties:
<pre><code>&quot;-Djavax.net.ssl.trustStore=path/to/other/cacerts -Djavax.net.ssl.trustStorePassword=changeit&quot;
</code></pre>
substituting the correct certificate store path and password.</li>
</ol>
<p>In the case of option 2, you can simply use the path to the Open JDK 11 <code>cacerts</code> file that you have already modified.</p>
"
196,4518934,3716,7764014,Yassine CHABLI,false,0,1690692060,1690692060,76796367,37432290,"<p>If you are using <strong>Maven</strong> within the context, this may help you.</p>
<p>Quick solution is to add this parameter  <code>-Dsonar.scm.disabled=True</code> while <code>sonar:sonar</code> command.</p>
<p>I was facing the same issue while trying to send a report to sonarqube server.
the warning indicates that there are some files that are not committed  which is helpful for sonarqube's diff algorithm to determining new code period issues.</p>
"
197,1555104,3699,1446479,peedee,false,4,1668493173,1668493173,74441313,37432290,"<p>For people coming from Google: it is also possible to see <code>Missing blame information for the following files</code> in IntelliJ when using the SonarLint plugin while it is connected to the Sonar server.</p>
<p>If you run <code>mvn sonar:sonar</code> while you have untracked files or uncommitted changes, those files will be listed as missing blame information.</p>
<p>Now my project is showing a failed quality gate in the SonarQube web interface, but that should go away when the analysis runs in the CI pipeline next time.</p>
"
198,12159985,61,10956022,Jorge Trindade,false,-3,1633440357,1633440192,69451307,37432290,"<p>There is another solution for this case that solved my problem.
If you are in a company or corporate location you must log into the artifact repository for the docker to start
Example</p>
<pre><code>$ docker login artifactory.companyname.corp
</code></pre>
<p>After that the docker will ask for your corporate user and password
and the issue is resolved</p>
"
199,1171058,2391,1148240,neoscribe,false,9,1516935762,1516935762,48455221,37432290,"<p>I ran into this issue with a build that stopped working after a Sonar upgrade.</p>

<p>The problem for me was that the <strong>Jenkins job was configured to do a Shallow Clone when pulling from git</strong>. This does not pull in enough history so Sonar 5.6.6 could not do an analysis because blame information was not included in the shallow copy. I used the <em>-X</em> option when running Sonar to view the actual commit number that it was choking on.</p>

<p><strong>I'm my case I simply unchecked the shallow copy check box</strong> and BAM, it worked again (though more slowly)!
<a href=""https://i.sstatic.net/GokIo.png"" rel=""noreferrer""><img src=""https://i.sstatic.net/GokIo.png"" alt=""enter image description here""></a></p>
"
200,1451504,2356,1368293,John Meyer,false,8,1508427761,1508427761,46833810,37432290,"<p>I had a similar issue: a file in my project was created during the build process and was not stored in source control. In my case it was <code>api.json</code>. </p>

<p>Within the SonarQube runner build step in Team City I added this file to the exclusions within the additional parameters </p>

<pre><code>-Dsonar.exclusions=**/spec/api.json
</code></pre>

<p>and the error disappeared. </p>
"
202,1838002,10868,1667977,MartinTeeVarga,false,22,1489453992,1489453992,42776180,42725199,"<p>Your code works for me just fine. I am using Jackson to parse the cases and that's probably the only difference. Check my code:</p>

<p>Result class:</p>

<pre><code>public class Res {
    String version;

    public String getVersion() {
        return version;
    }

    public void setVersion(String version) {
        this.version = version;
    }
}
</code></pre>

<p>Controller:</p>

<pre><code>@RequestMapping(value = ""/blah"",
        method = GET,
        produces = APPLICATION_JSON_VALUE)
public HttpEntity&lt;Res&gt; doIt() {
    Res res = new Res();
    res.setVersion(""0.1"");
    return new HttpEntity&lt;&gt;(res);
}
</code></pre>

<p>Test:</p>

<pre><code>@Test
public void blahTest() throws Exception {
    this.mockMvc.perform(
            MockMvcRequestBuilders.get(""/blah""))
            .andExpect(MockMvcResultMatchers.status().isOk())
            .andExpect(MockMvcResultMatchers.content().contentType(""application/json;charset=UTF-8""))
            .andExpect(jsonPath(""$.version"").value(""0.1""))
            .andDo(MockMvcResultHandlers.print());
}
</code></pre>

<p>Response:</p>

<pre><code>MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Type=[application/json;charset=UTF-8]}
     Content type = application/json;charset=UTF-8
             Body = {""version"":""0.1""}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
</code></pre>

<p>I can only recommend trying to change the Json parser library you are using. Otherwise, try to update your code with all the parts that are needed to create a simple, minimal and reproducible example of your problem.</p>
"
203,1611562,11942,1490322,Jose Martinez,false,36,1734086265,1489245569,42736879,42725199,"<p>I think you need to pass the Matcher to the <code>jsonPath</code> method.  For example.</p>
<pre><code>.andExpect(jsonPath(&quot;$.version&quot;, Matchers.is(&quot;0.1&quot;)))
</code></pre>
<p>References:<br />
<a href=""http://docs.spring.io/spring/docs/3.2.x/javadoc-api/org/springframework/test/web/servlet/result/MockMvcResultMatchers.html#jsonPath(java.lang.String,%20org.hamcrest.Matcher)"" rel=""nofollow noreferrer"">http://docs.spring.io/spring/docs/3.2.x/javadoc-api/org/springframework/test/web/servlet/result/MockMvcResultMatchers.html#jsonPath(java.lang.String,%20org.hamcrest.Matcher)</a></p>
<p><a href=""https://www.petrikainulainen.net/programming/spring-framework/integration-testing-of-spring-mvc-applications-write-clean-assertions-with-jsonpath/"" rel=""nofollow noreferrer"">https://www.petrikainulainen.net/programming/spring-framework/integration-testing-of-spring-mvc-applications-write-clean-assertions-with-jsonpath/</a></p>
<p><a href=""https://stackoverflow.com/questions/15371022/springmvc-mockmvc-jsonpath-compare-list-of-strings"">SpringMVC/ mockMVC/ jsonpath compare list of strings</a></p>
"
204,23738309,361,17756708,alboforlizo,false,0,1734085185,1734081938,79277783,19314404,"<p>A more elaborated version which can be generalized for any timezone:</p>
<pre><code>Instant instant = Instant.now();
ZoneId zoneId = ZoneId.of ( &quot;UTC&quot; );
ZonedDateTime zdt = ZonedDateTime.ofInstant ( instant, zoneId );
ZonedDateTime zdtMonthEarlier = zdt.minus ( 1 , ChronoUnit.MONTHS );
long t = zdtMonthEarlier.toEpochSecond();
System.out.println( &quot;Time in Seconds At One Month Ago: &quot; + Long.valueOf(t) );
</code></pre>
<p>Or more concise:</p>
<pre><code>OffsetDateTime modifiedAfter = OffsetDateTime.now( ZoneId.of( &quot;UTC&quot; ) ).minus ( 1 , ChronoUnit.MONTHS );
long t = modifiedAfter.toEpochSecond();
System.out.println( &quot;Time in Seconds At One Month Ago: &quot; + Long.valueOf(t) );
</code></pre>
"
205,12613723,1028,9171899,yuen26,false,39,1583320420,1583320420,60524784,19314404,"<p>With Java 8+, you can use:</p>

<pre class=""lang-java prettyprint-override""><code>Instant.now().getEpochSecond()
</code></pre>
"
206,3423920,824,2870399,Dat Nguyen,false,53,1381483501,1381483501,19314676,19314404,"<p>get current seconds system
<code>long timestamp = System.currentTimeMillis() / 1000;
</code></p>
"
207,4962253,18782,3992939,c0der,true,1,1439093160,1439093160,31900799,31899301,"<p>See comments in the code:</p>

<pre><code>    import java.util.Scanner;

    public class ParkingCharges {

        static Scanner input = new Scanner(System.in);
        static double minimum_fee = 2.0;
        static double maximum_fee = 10.0;
        static double extra_per_HourCharge = 0.50;
        int daily_hours;

        public static void main(String[] args) {
            Display();
            //as Alexandro Sifuentes Díaz suggested
            double hoursParked = hoursEntered();

            //change if (that runs once) to  a loop
            while ((hoursParked &lt;= 0.0) || (hoursParked &gt;24)) {
                System.out.println(""Invalid hours entered. Valid hours are 1 through 24"");
                Display();
                hoursParked = hoursEntered();
            }

            if (hoursParked &lt;= 3.0) {
                System.out.println(""Minimum number of hours parked, fee is: "" + minimum_fee);
            } else {
                //obtain and output the parking charge  
                System.out.println(""Parking fee is "" +extraCharge(hoursParked));

            }
        }

        static void Display() {
            System.out.println("" Enter the number of hours parked: \n"");
        }

        public static double hoursEntered() {
            double numberOfHours = input.nextDouble();
            System.out.println(numberOfHours);
            return numberOfHours;
        }

        //use hoursParked obtained earlier
        public static double extraCharge(double hoursParked) {
            double extraChargeAmount = 0.0;
            extraChargeAmount = minimum_fee + ((hoursParked - 3)*extra_per_HourCharge);
            if (extraChargeAmount &gt;= 10.0) {
                extraChargeAmount = 10;
                //removed un needed return and else else
            }
             return extraChargeAmount;

        }
    }
</code></pre>
"
208,4970489,2657,3998458,Alex S. Diaz,false,1,1439075790,1439075233,31899447,31899301,"<p>You call many times <code>hoursEntered()</code>, just call it once:</p>

<pre><code>double hour = hoursEntered();
if (hour &lt;= 0.0 || hour &gt; 24) {
    ...
    hoursEntered(); // &lt;--- why?
} else if (hour &lt;= 3.0) {
   ...
else {
    extraCharge(hour);
}
</code></pre>

<p>And in the extraCharge() method, just send this value:</p>

<pre><code>public static double extraCharge(double hour) {
    ...
    extraChargeAmount = minimum_fee + (hour - 3)*extra_per_HourCharge;
    ...
}
</code></pre>

<p>And I guess you should recode your function to allow recursion (because I think you will ask the user to input a valid hour an undefined amount of times).</p>
"
209,3283904,543,2763824,nehaev,false,1,1734082711,1614333333,66383590,2777005,"<p><a href=""http://hc.apache.org/httpcomponents-core-5.0.x/index.html"" rel=""nofollow noreferrer"">Apache HttpComponents Core 5</a> supports HTTP/1.1 pipelining. The example could be found <a href=""https://github.com/apache/httpcomponents-core/tree/master/httpcore5/src/test/java/org/apache/hc/core5/http/examples/AsyncPipelinedRequestExecutionExample.java"" rel=""nofollow noreferrer"">here</a>.</p>
"
242,1092153,2554,1086560,bamnet,false,0,1734066882,1734066882,79277281,79069781,"<p>I ran into this issue, but didn't have the old java 17 version around (fresh install of an OS, restoring my Flutter app from a backup).</p>
<p>To fix, I had to download and use Android Studio Koala, which still includes Java 17, and use that to run AGP Upgrade Assistant. That let me slowly walk my old Gradle version from 7.1.2 -&gt; 7.4.2, and then again from 7.4.2 -&gt; 8.6.1.</p>
"
211,151926,2870,366091,biasedbit,false,0,1282604979,1282604979,3552389,2777005,"<p><a href=""http://hotpotato.factor45.org/"" rel=""nofollow noreferrer"">hotpotato</a> will support pipelining <strong>really</strong> soon. Performance-wise, it's way superior to Apache's HTTP Client, especially in high concurrency environments (multiple threads using the same instance of the client).</p>

<p>I still need to publish the results but on a LAN test, I'm getting ~7000req/s (hotpotato) vs ~100req/s (apache's). Of course, a great deal of the merit must go to Netty, the amazing framework hotpotato is built upon ;)</p>

<p>If you don't need a fancy full-fledged client, take a look <a href=""http://bruno.factor45.org/blag/2010/08/23/pipelining-support-in-hotpotato/"" rel=""nofollow noreferrer"">here</a> for a simpler version.</p>
"
212,30387,63582,82865,Jonathan Holloway,true,1,1273101073,1273101073,2777391,2777005,"<p>HTTPClient apparently supports pipelining here:</p>

<p><a href=""http://www.innovation.ch/java/HTTPClient/"" rel=""nofollow noreferrer"">http://www.innovation.ch/java/HTTPClient/</a></p>

<p>but I haven't tried it personally and can't verify this.</p>
"
213,50238,75386,149808,ZZ Coder,false,1,1331817323,1273100325,2777347,2777005,"<p>I don't think you will find any common ones supporting pipe-lining. Jetty HttpClient seems to support it from document but I couldn't make it to do it.</p>

<p>Please note that Pipeline is different from keep-alive. Keep-alive just means reuse the connection but it may still send only one request at a time over the connection. With pipe-lining, you can send several requests at the same time over the same connection and wait for their respective responses.</p>
"
214,37311070,1,28180789,Norbert Lamprecht,false,0,1734081745,1734081745,79277764,41029647,"<p>stop eclise - start eclise
than to installte jre and add
is a permanet problem by me</p>
"
215,11327681,1,8306031,nams,false,0,1649382562,1649382562,71790796,41029647,"<p>I was facing the same problem for the latest JDK.&quot;jdk-18_windows-x64_bin.exe&quot;
However it is resolved by installing
this eclipse
<a href=""https://www.eclipse.org/downloads/download.php?file=/oomph/epp/oxygen/R/eclipse-inst-win64.exe"" rel=""nofollow noreferrer"">https://www.eclipse.org/downloads/download.php?file=/oomph/epp/oxygen/R/eclipse-inst-win64.exe</a>.</p>
<p>Give it a try, I hope this will work for you too!
Cheers!</p>
"
216,3130319,812,2648257,Bharathiraja,false,8,1592551984,1592550937,62465153,41029647,"<p>I'm also faced this issue <code>&quot;Target is not a JDK root. System Library was not found&quot;</code> for <code>Java 11</code> and I have done some workaround and got to know, this is related to the version we are using either <code>eclipse</code> or <code>sprint tool suite</code>. So i figured out the correct version and posted below.</p>
<p><strong><code>Java 9</code> Supports:</strong></p>
<ul>
<li>Spring Tool Suite:3.9.0</li>
<li>Eclipse:Oxygen (4.7)</li>
</ul>
<p><strong><code>Java 10</code> Supports:</strong></p>
<ul>
<li><p>Spring Tool Suite:3.9.4</p>
</li>
<li><p>Eclipse: Oxygen (4.7.3) and Above</p>
</li>
</ul>
<p><strong><code>Java 11</code> Supports:</strong></p>
<ul>
<li>Spring Tool Suite: 3.9.7</li>
<li>Eclipse: Photon 4.8, 4.10 (officially supports)</li>
</ul>
<p>Below are references i used:</p>
<ol>
<li><a href=""https://docs.spring.io/sts/nan/v397/NewAndNoteworthy.html"" rel=""noreferrer"">STS</a></li>
<li><a href=""https://en.wikipedia.org/wiki/Eclipse_(software)"" rel=""noreferrer"">Eclipse</a></li>
</ol>
<p>Click Up Vote if this is useful for you.</p>
"
217,15414093,71,11120076,Beqir Ku&#231;i,false,7,1567687349,1567687349,57805763,41029647,"<p>You should use Standard VM <strong>not</strong> standard 1.1x VM
best regards!
<a href=""https://i.sstatic.net/e2aQN.png"" rel=""noreferrer"">se pic</a></p>
"
218,13480786,101,9726158,rabi,false,5,1525187499,1525187499,50118973,41029647,"<p>set the path to::  /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home</p>
"
219,1119690,20482,1108305,M. Justin,false,0,1733984388,1733984388,79274023,68651921,"<pre class=""lang-java prettyprint-override""><code>record Person(
        int id, String name, String mother, LocalDate birth, int center) { }

List&lt;Person&gt; records = List.of(
        new Person(1,  &quot;Antonio Carlos da Silva&quot;,  &quot;Ana da Silva&quot;,              LocalDate.of(2008, 3, 31),  1),
        new Person(2,  &quot;Carlos Roberto de Souza&quot;,  &quot;Amália Maria de Souza&quot;,     LocalDate.of(2004, 12, 10), 1),
        new Person(3,  &quot;Pedro de Albuquerque&quot;,     &quot;Maria de Albuquerque&quot;,      LocalDate.of(2006, 4, 3),   2),
        new Person(4,  &quot;Danilo da Silva Cardoso&quot;,  &quot;Sônia de Paula Cardoso&quot;,    LocalDate.of(2002, 8, 10),  3),
        new Person(5,  &quot;Ralfo dos Santos Filho&quot;,   &quot;Helena dos Santos&quot;,         LocalDate.of(2012, 2, 21),  4),
        new Person(6,  &quot;Pedro de Albuquerque&quot;,     &quot;Maria de Albuquerque&quot;,      LocalDate.of(2006, 4, 3),   2),
        new Person(7,  &quot;Antonio Carlos da Silva&quot;,  &quot;Ana da Silva&quot;,              LocalDate.of(2008, 3, 31),  1),
        new Person(8,  &quot;Paula Cristina de Abreu&quot;,  &quot;Cristina Pereira de Abreu&quot;, LocalDate.of(2014, 10, 25), 2),
        new Person(9,  &quot;Rosana Pereira de Campos&quot;, &quot;Ivana Maria de Campos&quot;,     LocalDate.of(2002, 7, 16),  3),
        new Person(10, &quot;Pedro de Albuquerque&quot;,     &quot;Maria de Albuquerque&quot;,      LocalDate.of(2006, 4, 3),   2)
);

record PersonKey(String name, String mother, LocalDate birth, int center) {
    PersonKey(Person p) {
        this(p.name(), p.mother(), p.birth(), p.center());
    }
}

List&lt;Person&gt; result = records.stream()
        .collect(Collectors.groupingBy(PersonKey::new))
        .values()
        .stream()
        .filter(l -&gt; l.size() &gt; 1)
        .flatMap(Collection::stream)
        .sorted(Comparator.comparing(Person::center).thenComparing(Person::id))
        .toList();
</code></pre>
<p>This approach collects the list to a <code>Map&lt;PersonKey, List&lt;Person&gt;&gt;</code>, where <code>PersonKey</code> are all the fields that are involved in the duplicate record check.  Next, only the <code>List&lt;Person&gt;</code> values of this map are kept and are converted to a <code>Stream&lt;List&lt;Person&gt;&gt;</code>.  Every element in this stream with at least two elements are kept (i.e. the ones that are duplicates).  This is flattened into a <code>Stream&lt;Person&gt;</code>, and then sorted by <code>center</code> with <code>id</code> as the tie-breaker.  Finally, the stream is collected into a <code>List&lt;Person&gt;</code>.</p>
"
220,93689,424150,256196,Bohemian,false,1,1734079798,1628085687,68652653,68651921,"<p>You can do it in one pass as a stream with O(n) efficiency:</p>
<pre><code>class PersonKey {
    // have a field for every column that is used to detect duplicates
    String center, name, mother, birthdate;
    public PersonKey(String line) {
        // implement String constructor
    }
    // implement equals and hashCode using all fields
}

List&lt;String&gt; lines; // the input 
Set&lt;PersonKey&gt; seen = ConcurrentHashMap.newKeySet(); // threadsafe
List&lt;String&gt; unique = lines.stream()
  .filter(p -&gt; !seen.add(new PersonKey(p))
  .distinct()
  .collect(toList());
</code></pre>
<p>The trick here is that a HashSet has constant time operations and its add() method returns false if the value being added is already in the set, true otherwise.</p>
"
221,22122534,2917,16375479,devReddit,true,0,1628084779,1628084678,68652385,68651921,"<p>What I understood from your examples is you consider an entry as duplicate if all the attributes have same value except the <code>ID</code>. You can use <code>anymatch</code> for this:</p>
<pre><code>list.stream().filter(x -&gt;
                list.stream().anyMatch(y -&gt; isDuplicate(x, y))).collect(Collectors.toList())
</code></pre>
<p><strong>So what does the isDuplicate(x,y) do?</strong></p>
<p>This returns a <code>boolean</code>. You can check whether all the entries have same value except the id in this method:</p>
<pre><code>private boolean isDuplicate(CsvEntry x, CsvEntry y) {
    return !x.getId().equals(y.getId())
            &amp;&amp; x.getName().equals(y.getName())
            &amp;&amp; x.getMother().equals(y.getMother())
            &amp;&amp; x.getBirth().equals(y.getBirth());
}
</code></pre>
<p>I've assumed you've taken all the entries as <code>String</code>. Change the checks according to the type. This will give you the duplicate entries with their corresponding <code>ID</code></p>
"
278,10148297,29,7495764,droste,false,0,1734043392,1734043392,79276793,46292095,"<p>The problem in my case was that I had a lot of virtual servers (~15). In the Server configuration there's an option for Virtual Servers and if not specified all are deployed to. Everything worked normally after I removed all but the default virtual server from my config.</p>
"
222,1274782,12381,1230257,Danyal Sandeelo,true,0,1473353506,1473257609,39372278,39371994,"<p>Pass a parameter as boolean to make the connection dynamically based on your requirements. You will need encoding at database end as well, I hope that is already there.</p>

<p>Based on the condition change the connectivity string.</p>

<p>change </p>

<pre><code>  ""jdbc:mysql://localhost"",
</code></pre>

<p>to </p>

<pre><code>  ""jdbc:mysql://localhost?useUnicode=true&amp;characterSetResults=utf8&amp;characterEncodi‌​ng=UTF-8"",
</code></pre>

<p>Optionally, a collation can be specified, such as: <code>&amp;connectionCollation=utf8_general_ci</code></p>
"
223,329612,71941,653230,WhiteFang34,false,5,1302041609,1302041609,5559203,5558499,"<p>Since it appears you're dealing with standard format email addresses (<a href=""http://www.ietf.org/rfc/rfc0822.txt"" rel=""noreferrer"">RFC 822</a>) you might want to consider using the <a href=""http://www.oracle.com/technetwork/java/javamail/index.html"" rel=""noreferrer"">JavaMail API</a>. It's designed to work with everything within the spec, whereas with regex you might miss some cases. The code for what you want is simple too:</p>

<pre><code>String input = ""My team &lt;xxx-yyyy@uuuu.com&gt;"";
String email = new InternetAddress(input).getAddress();
</code></pre>
"
224,100219,1652,270277,Lucas de Oliveira,false,4,1302039390,1302039390,5558845,5558499,"<p>Actually you need to call the find() method on a Matcher object in order to walk through your string. And as Petri Pellinen stated you should check for the right grouping.</p>

<p>Try the following code:</p>

<pre><code>String str = ""My team &lt;xxx-yyyy@uuuu.com&gt;  My team &lt;xxx-yyyy@uuuu.com&gt; \n "" +
    ""My team &lt;xxx-yyyy@uucom&gt; My team &lt;xxx-yyyy@uuuu.com&gt; "" +
    ""My team &lt;xxx-yyyy@uuuu.com&gt; My team &lt;xxx-yyyy@uuuu.com&gt;"";

Pattern p = Pattern.compile(""\\&lt;(.*?)\\&gt;"");
Matcher m = p.matcher(str);

while(m.find()){
   System.out.println(m.group(1));  
}
</code></pre>

<p>and check the groups fetched.</p>

<p>Results are:</p>

<pre><code>xxx-yyyy@uuuu.com
xxx-yyyy@uuuu.com
xxx-yyyy@uucom
xxx-yyyy@uuuu.com
xxx-yyyy@uuuu.com
xxx-yyyy@uuuu.com
</code></pre>

<p>cheers!</p>
"
225,93948,536,256788,Petri Pellinen,true,4,1734078580,1302038129,5558626,5558499,"<p>Something like this, maybe?</p>
<pre><code>    final Pattern p = Pattern.compile(&quot;(.+?)&lt;(.*?)&gt;&quot;);
    final Matcher matcher = p.matcher(&quot;Foo bar &lt;xxx-yyy@aaa.bbb&gt;&quot;);
    if (matcher.matches()) {
         System.out.println(matcher.group(2));
    }
</code></pre>
<p>Edit: please also see @WhiteFang34's answer below which is a much better approach if you are dealing with email addresses.</p>
"
226,18649510,23,13593323,王天明,false,1,1734075692,1734075692,79277524,79274169,"<p>The point is <code>createXYZ(pdf.getPage(1), 0, 0, 0)</code>.
It should be <code>createXYZ(firstPage, 0, firstPage.getPageSize().getHeight(), 1)</code>.</p>
"
227,2544073,409,2209264,Antonio E.,true,0,1734076511,1682237507,76083763,76076383,"<p>I had a poor specification of the problem. My inputs happened to be hex encoded (each 2 characters from the string should be treated as an hex number representation, each pair had to be converted to the byte representation of the number).</p>
<p>This kind of encoding is also the usual way to represent the CMAC output so as a result I define 2 functions:</p>
<pre class=""lang-java prettyprint-override""><code>
public static byte[] stringToByteHexpairs(String input){
    
    byte[] output= new byte[input.length()/2];
    int k = 0;
    for (int i = 0; i &lt;= input.length() - 2 ; i += 2) {
         String par = input.substring(i, i+2);
         output[k] = (byte) Integer.parseInt(par,16);
         k++;
    }
    return output;
}

public static String bytesToHexString(byte[] array) {

    StringBuilder sb = new StringBuilder();
    for (int i = 0; i &lt; array.length; i++) {
        sb.append(String.format(&quot;%02X&quot;,array[i]));
    }
    return sb.toString();
}

</code></pre>
<p>And I use it before in place of the wrong byte transformation on the code I provided. BONUS I also add the output transformation that is expected:</p>
<pre class=""lang-java prettyprint-override""><code>KeyParameter parameter = new KeyParameter(stringToByteHexpairs(KEY));
byte[] messageBytes = stringToByteHexpairs(message);

...

mac.update(messageBytes, 0, messageBytes.length);

...

mac.doFinal(out, 0);
return bytesToHexString(out);

</code></pre>
"
228,9429101,1524,7013205,S A,false,1,1734076319,1734076319,79277546,79275043,"<p>The selector for the element is not right.</p>
<p>The element you are trying to interact with has a dynamic ID, which will change on every page load.
If you load the page again and check the ID, it is not <code>u_0_0_Qk</code> or <code>u_0_0_aG</code>, as in your comment.</p>
<p>So, you can see that the id has changed from your screenshot and the comment.</p>
<p>Instead of selecting the element by id, check the <code>data-testid</code> attribute.
The value of it remains constant.</p>
<p>So you can use the CSS selector :</p>
<pre class=""lang-css prettyprint-override""><code>a[data-testid='open-registration-form-button']
</code></pre>
<p>or XPath:</p>
<pre class=""lang-xml prettyprint-override""><code>//a[@data-testid='open-registration-form-button']
</code></pre>
"
229,16359626,2720,13329963,Prateek Gupta,false,4,1635672558,1635667801,69784985,22047860,"<p><strong>Using <em>Tomcat 9</em> in IntelliJ IDEA Community Edition without installing any plugin</strong></p>
<p><em>Note: Make sure environment variables <strong>JAVA_HOME</strong> and <strong>CATALINA_HOME</strong> is set. And in case value for <strong>JAVA_HOME</strong> or <strong>CATALINA_HOME</strong> is reset recently then restart IntelliJ IDEA before proceeding further.</em></p>
<ol>
<li>First open the project in IntelliJ IDEA and then click on <code>File</code> &gt; <code>Settings...</code> &gt; <code>Tools</code> &gt; <code>External Tools</code>, then click on the <strong>+</strong> button.</li>
<li>Then we have to specify the <strong>Name</strong> for the <em>Tomcat</em>, then in the <strong>Program</strong> we
have to specify the path for the <strong>catalina.bat</strong> file in the <strong>bin</strong> folder in
the folder where <em>Tomcat</em> is installed, then in <strong>Arguments</strong> we have to write <code>jpda run</code> and then click on <strong>Ok</strong> and then on <strong>Apply</strong>.</li>
<li>After that we can we run the <em>Tomcat</em> by clicking on <code>Tools</code> &gt; <code>External Tools</code> &gt; <code>name_you_provided_for_tomcat</code>.</li>
</ol>
<p>Then we have to put the necessary files of the application we want to host on the <em>Tomcat</em> in the <strong>webapps</strong> folder in the folder where <em>Tomcat</em> is installed.</p>
"
230,8964761,2445,6685903,Ritu Gupta,false,0,1601210954,1601210954,64088649,22047860,"<p>I think maven is not installed properly. check with<code> mvn --v</code></p>
<p>or</p>
<p>Please check maven home path in env variables
or you have created this project before the installation of maven</p>
"
243,4588862,46,3722765,VitSoonYoung,false,2,1731332922,1731332922,79177910,79069781,"<p>For me, instead of trying to install or look for older gradle which doesn't exist on my machine. I look for the gradle definition on my newly created Flutter project and copy back to my older project.</p>
<p>Create a new flutter project and look for distributionUrl in <code>/android/gradle/wrapper/gradle-wrapper.properties</code></p>
<pre><code>distributionUrl=https\://services.gradle.org/distributions/gradle-8.10.2-all.zip
</code></pre>
<p>Copy and paste back to your older project's</p>
"
231,2819789,453,2423793,Divas,false,1,1593820264,1593820264,62723913,22047860,"<p>Well the question is already answered, however what I am writing here is just my observation so other fellows in the community can save some of their time.
I tried running a spring-mvc project using the embedded tom-cat in Intellij communit edition.</p>
<p>First try I did was using the Gradle tom-cat plugin, however the problem that I faced there is the tomcat server just starts once, after that from the second start the build complains saying that a container is already running.
There are so many open thread on the web about this, for some it works and for most of the people (almost 90% of the web threads that I broke my head with, faced the same problem of container not getting started the second time. The resolution is not there.</p>
<p>After wasting a lot lot of my time, I finally decided to switch to maven tom-cat plugin and do the same spring-mvc setup with maven that I did with gradle and VOILA! it worked in the first short.</p>
<p>So long story short, if you are setting up spring-mvc project in intellij community edition, please consider maven tomcat plugin.</p>
<p>Hope this helps somebody's hours of exploration across various web forums.</p>
"
232,17390552,1,12601156,Adrninistrator,false,0,1577364560,1577364560,59488729,22047860,"<p>If you use Gradle, you can try my script: <a href=""https://github.com/Adrninistrator/IDEA-IC-Tomcat"" rel=""nofollow noreferrer"">https://github.com/Adrninistrator/IDEA-IC-Tomcat</a> .This script will build files for web application, create a Tomcat instance, start Tomcat and load the web application.</p>
"
233,5318326,1,4242447,SANTosh Z,false,-2,1556006882,1556001690,55805653,22047860,"<pre><code>VM :-Djava.endorsed.dirs=""C:/Program Files/Apache Software Foundation/Tomcat 8.0/common/endorsed"" 
    -Dcatalina.base=""C:/Program Files/Apache Software Foundation/Tomcat 8.0""  
    -Dcatalina.home=""C:/Program Files/Apache Software Foundation/Tomcat 8.0"" 
    -Djava.io.tmpdir=""C:/Program Files/Apache Software Foundation/Tomcat 8.0/temp"" 
    -Xmx1024M
</code></pre>
"
234,33016264,1,25615362,user25615362,false,0,1734070238,1733897601,79270629,8341680,"<p>I use the follwing wrapper for the InputStream to prevent the parser from closing the original stream:</p>
<pre><code>    private static class InputStreamWrapper extends InputStream {
    private InputStream input;

    public InputStreamWrapper(InputStream input) {
        this.input = input;
    }

    @Override
    public int read() throws IOException {
        return input.read();
    }

    // Must be overriden for better performance
    @Override
    public int read(byte[] b, int off, int len) throws IOException {
        return input.read(b, off, len);
    }

    @Override
    public void close() {
    }
}
</code></pre>
<p>The wrapper is used like <code>saxParser.parse(new InputStreamWrapper(input), handler)</code>.</p>
<p>Putting the InputStream in an InputSource does not help. This is done internally by the SAX parser.</p>
"
235,38907,53627,111988,Sunil Kumar Sahoo,false,-1,1322744967,1322744967,8341934,8341680,"<p>You can pass <strong>InputSource object rather than InputStream</strong> object to SAXParser</p>

<p><strong>sample code</strong></p>

<pre><code>SAXParser parser = // saxpaser object
        InputSource isource = new InputSource();
        InputStream istream = //your inputstream
        isource.setByteStream(istream);
        parser.parse(isource, handler);
</code></pre>
"
236,775068,65673,823393,OldCurmudgeon,true,8,1322744701,1322744701,8341871,8341680,"<p>How about something like:</p>

<pre><code>class WontCloseBufferedInputStream extends BufferedInputStream {
  public void close () {
    // Do nothing.
  }

  public void reallyClose() {
    super.close ();
  }
}
</code></pre>
"
237,36934717,1,27994093,Jesse,false,0,1734068724,1734066943,79277282,65136363,"<p>A little improvement to <a href=""https://stackoverflow.com/a/65136484/27994093"">the first answer</a>.</p>
<pre class=""lang-java prettyprint-override""><code>Map&lt;String, String&gt; map = new HashMap&lt;&gt;() {
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        map.forEach((key, value) -&gt; {
                    sb.append(key).append(&quot;: &quot;);
                    sb.append(value).append(System.lineSeparator());
                }
        );
        return sb.toString();
    }
};
</code></pre>
"
238,5534380,268,4472711,MNEMO,false,0,1607046325,1607046325,65136764,65136363,"<p>To override the toString() method, extend TreeMap class and replace your TreeMap instance with new class.</p>
<pre class=""lang-java prettyprint-override""><code>import java.util.Map;
import java.util.TreeMap;

public class MyTreeMap extends TreeMap&lt;String,Double&gt; {
    @Override
    public String toString() {
        StringBuilder result = new StringBuilder();
        this.entrySet().forEach(me -&gt; {
            System.out.printf(&quot;%s %s%n&quot;, me.getKey(), me.getValue());
        });
        return result.toString();
    }
}
</code></pre>
"
239,11002035,3456,8997916,DownloadPizza,false,2,1609774911,1607043865,65136484,65136363,"<p>Your prof is telling you to override the toString method of the Map class.
I think the best idea is an anonymous override.</p>
<pre class=""lang-java prettyprint-override""><code>Map&lt;String, String&gt; test = new HashMap&lt;&gt;() {
    @Override
    public String toString() {
        StringBuilder stb = new StringBuilder();
        for (Map.Entry&lt;String, String&gt; entry : this.entrySet()) {
            stb.append(entry.getKey()).append(&quot; &quot;)
                    .append(entry.getValue()).append(&quot;\n&quot;);
        }
        return stb.toString();
    }
};
</code></pre>
<p>Note that I don't have any way to chexk this code for errors right now, so you may have to fix some names.</p>
"
240,401843,101552,768644,rzwitserloot,false,1,1607043531,1607043531,65136447,65136363,"<blockquote>
<p>So, my processor's hint is map toSting() override, but i don't understand</p>
</blockquote>
<p>I don't know who your 'processor' is (professor?), but that's a dumb hint.</p>
<p>overriding things makes sense when you're subclassing something. Don't subclass map, that's... not what you want.</p>
<p>instead of passing 'map' to <code>System.out.println</code>, which will result in println invoking <code>.toString()</code> on that object and printing the resulting string, make your own string:</p>
<pre><code>String print = map.entrySet().stream()
    // convert each element in the map to the string &quot;KEY VALUE&quot;
    .map(x -&gt; x.getKey() + &quot; &quot; + x.getValue())
    // collect em by joining em, separating each &quot;KEY VALUE&quot; string with a newline
    .collect(Collectors.joining(&quot;\n&quot;));
System.out.println(print);
</code></pre>
"
241,4563475,27906,3705127,sprinter,false,0,1607043464,1607043464,65136439,65136363,"<p>I'm not sure what you mean by &quot;processor's hint&quot; but you don't really need to override <code>toString</code>. Simpler is to just convert the map to the string you want:</p>
<pre><code>map.entrySet().stream()
    .map(e -&gt; e.getKey() + &quot; &quot; + e.getValue())
    .collect(Collectors.joining(&quot;\n&quot;));
</code></pre>
<p>Or if you just want to print the map directly:</p>
<pre><code>map.forEach((k, v) -&gt; System.out.println(k + &quot; &quot; + v));
</code></pre>
"
279,5568098,21,4414527,charanpreet flora,false,2,1699659742,1699659742,77463355,46292095,"<p>I encountered a similar issue and the issue was having a breakpoint in one of the method signatures in the repository methods. After removing that, the issue was gone.</p>
"
244,18998698,199,13866511,Convert.ToInt32,true,11,1731335151,1728895852,79085420,79069781,"<p>I found the solution to the problem, I followed <a href=""https://stackoverflow.com/questions/79069781/gradle-build-fails-with-unsupported-class-file-major-version-65-after-updating#comment139420622_79069781"">@Robert advice</a>. All I needed to do was to configure flutter to use my old java 17 directory</p>
<pre class=""lang-bash prettyprint-override""><code>flutter config --jdk-dir &lt;path-to-java-sdk-17-home-directory&gt;
</code></pre>
<p>after I did that command everything worked.</p>
"
245,26086507,356,19783963,Zander,false,1,1728475489,1728475489,79070135,79069781,"<pre class=""lang-java prettyprint-override""><code>    // TODO: Remove this when flutter Updates
    // ndkVersion: flutter.ndkVersion
    ndkVersion &quot;25.1.8937393&quot;
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '19'
    }
</code></pre>
"
246,5843921,216914,4604579,Val,false,2,1734066712,1695354535,77154758,77153825,"<p>On the OpenSearch documentation website, there is a <a href=""https://opensearch.org/docs/2.9/install-and-configure/upgrade-opensearch/index/#index-compatibility-reference"" rel=""nofollow noreferrer"">compatibility Matrix</a> between Elasticsearch, OpenSearch and Lucene up to OS 2.5 and ES 8.6. Elasticsearch also publishes all its dependencies <a href=""https://artifacts.elastic.co/reports/dependencies/dependencies-8.10.0.html"" rel=""nofollow noreferrer"">here</a> (change the version number in the URL to find out).</p>
<p>I'm completing the table found in OS docs below up to the most recent versions.</p>
<div class=""s-table-container""><table class=""s-table"">
<thead>
<tr>
<th>Lucene Version</th>
<th>OpenSearch Version</th>
<th>Elasticsearch Version</th>
</tr>
</thead>
<tbody>
<tr>
<td>9.x</td>
<td>2.19 (not released yet)</td>
<td>8.18 (not released yet)</td>
</tr>
<tr>
<td>9.12</td>
<td>2.18</td>
<td>8.16 / 8.17</td>
</tr>
<tr>
<td>9.11.1</td>
<td>2.16 / 2.17</td>
<td>8.15</td>
</tr>
<tr>
<td>9.10.0</td>
<td>2.13 / 2.14 / 2.15</td>
<td>8.13 / 8.14</td>
</tr>
<tr>
<td>9.9.2</td>
<td>2.12</td>
<td></td>
</tr>
<tr>
<td>9.9.1</td>
<td></td>
<td>8.12</td>
</tr>
<tr>
<td>9.8.0</td>
<td></td>
<td>8.11</td>
</tr>
<tr>
<td>9.7.0</td>
<td>2.10 / 2.11</td>
<td>8.10</td>
</tr>
<tr>
<td>9.7.0</td>
<td>2.9.x</td>
<td>8.9</td>
</tr>
<tr>
<td>9.6.0</td>
<td>2.8.x</td>
<td>8.8</td>
</tr>
<tr>
<td>9.5.0</td>
<td>2.6.x / 2.7.x</td>
<td>8.7</td>
</tr>
<tr>
<td>9.4.2</td>
<td>2.5.0 / 2.4.1</td>
<td>8.6</td>
</tr>
<tr>
<td>9.4.1</td>
<td>2.4.0</td>
<td>-</td>
</tr>
<tr>
<td>9.4.0</td>
<td>-</td>
<td>8.5</td>
</tr>
<tr>
<td>9.3.0</td>
<td>2.3.0 / 2.2.x</td>
<td>8.4</td>
</tr>
<tr>
<td>9.2.0</td>
<td>2.1.0</td>
<td>8.3</td>
</tr>
<tr>
<td>9.1.0</td>
<td>2.0.x</td>
<td>8.2</td>
</tr>
<tr>
<td>9.0.0</td>
<td>-</td>
<td>8.1 / 8.0</td>
</tr>
<tr>
<td>8.11.1</td>
<td>-</td>
<td>7.17</td>
</tr>
<tr>
<td>8.10.1</td>
<td>1.3.x / 1.2.x</td>
<td>7.16</td>
</tr>
<tr>
<td>8.9.0</td>
<td>1.1.0</td>
<td>7.15 / 7.14</td>
</tr>
<tr>
<td>8.8.2</td>
<td>1.0.0</td>
<td>7.13</td>
</tr>
<tr>
<td>8.8.0</td>
<td>-</td>
<td>7.12</td>
</tr>
<tr>
<td>8.7.0</td>
<td>-</td>
<td>7.11 / 7.10</td>
</tr>
<tr>
<td>8.6.2</td>
<td>-</td>
<td>7.9</td>
</tr>
<tr>
<td>8.5.1</td>
<td>-</td>
<td>7.8 / 7.7</td>
</tr>
<tr>
<td>8.4.0</td>
<td>-</td>
<td>7.6</td>
</tr>
<tr>
<td>8.3.0</td>
<td>-</td>
<td>7.5</td>
</tr>
<tr>
<td>8.2.0</td>
<td>-</td>
<td>7.4</td>
</tr>
<tr>
<td>8.1.0</td>
<td>-</td>
<td>7.3</td>
</tr>
<tr>
<td>8.0.0</td>
<td>-</td>
<td>7.2 / 7.1</td>
</tr>
<tr>
<td>7.7.3</td>
<td>-</td>
<td>6.8</td>
</tr>
</tbody>
</table></div>
"
247,8525007,20,6390716,Silpa,true,1,1734051789,1734051789,79276999,79276941,"<p>Try using @Schema(hidden = true) in the class and check</p>
"
248,15182283,1,10955283,Dung Bien,false,0,1734062000,1734061959,79277186,56192105,"<p>you add in header request:</p>
<pre><code>httpGet.setHeader(&quot;Content-type&quot;, &quot;application/json; charset=utf-8&quot;);
httpGet.setHeader(&quot;Accept&quot;, &quot;application/json; charset=utf-8&quot;);
httpGet.setHeader(&quot;Content-Encoding&quot;, &quot;UTF-8&quot;);
</code></pre>
"
249,100270,131088,270371,davidxxx,true,1,1558120446,1558120142,56192251,56192105,"<p>You have to set the charset in the response part, not in the request part such as</p>

<pre><code>Content-Type: text/html; charset=utf-8
</code></pre>

<p>This part have to be correct as you said that it is ok when you test from the browser.   </p>

<p>Now from the client part, that is in your java program you also have to set the header <code>Accept-Charset</code> that indicates to the server the charset that you can accept. For example for utf-8 then iso-8859-1 you can add this header : </p>

<pre><code>Accept-Charset: utf-8, iso-8859-1;q=0.5
</code></pre>

<p>If it doesn't work, you could also try to read the bytes from the connection by specifying the charset such as :</p>

<pre><code>DataOutputStream ds = new DataOutputStream(con.getOutputStream());
BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(ds, ""UTF-8""));
</code></pre>

<p>Maybe that the problem is there but you don't show this part in the posted code.  </p>
"
250,3763662,7971,3127812,Sambit,false,0,1558119646,1558119646,56192160,56192105,"<p>can you try below like this ? Here you to set the content type and character set encoding for utf-8.</p>

<pre><code> URL obj = new URL( urlAsString );
 HttpURLConnection con = (HttpURLConnection) obj.openConnection();
 con.setRequestProperty(""Content-Type"", ""text/plain; charset=utf-8"");
 on.setRequestMethod( ""GET"" );
</code></pre>

<p>I will suggest to use Apache Http Client for better usage and flexibility.</p>
"
251,1956083,5082,1759063,Eljah,false,0,1675929149,1675929149,75395635,67899129,"<p>For Java</p>
<pre><code>openjdk version &quot;11.0.13&quot; 2021-10-19
OpenJDK Runtime Environment (build 11.0.13+8-Ubuntu-0ubuntu1.20.04)
OpenJDK 64-Bit Server VM (build 11.0.13+8-Ubuntu-0ubuntu1.20.04, mixed mode, sharing)
</code></pre>
<p>I had the same problem. The smpt server used Tls1.2, which was proved by <code>openssl</code> test like that:</p>
<pre><code> openssl s_client  smtp -connect ourhost:587
</code></pre>
<p>and this output clearly shown me that SMTP server uses Tls1.2:</p>
<pre><code>---
No client certificate CA names sent
Peer signing digest: SHA256
Peer signature type: RSA
Server Temp Key: ECDH, P-256, 256 bits
---
SSL handshake has read 2412 bytes and written 442 bytes
Verification: OK
---
New, TLSv1.2, Cipher is ECDHE-RSA-AES128-GCM-SHA256
Server public key is 2048 bit
Secure Renegotiation IS supported
Compression: NONE
Expansion: NONE
No ALPN negotiated
</code></pre>
<p>But with all settings like</p>
<pre><code>mail.properties.mail.smtp.auth=true
mail.properties.mail.smtp.starttls.enable=true
mail.properties.mail.smtp.ssl.protocols=TLSv1.2
jdk.tls.client.protocols=TLSv1.2
mail.properties.mail.smtp.ssl.trust=*
</code></pre>
<p>it still was the error</p>
<pre><code>Mail server connection failed; nested exception is javax.mail.MessagingException: Could not convert socket to TLS; nested exception is: javax.net.ssl.SSLHandshakeException: No appropriate protocol (protocol is disabled or cipher suites are inappropriate). Failed messages: javax.mail.MessagingException: Could not convert socket to TLS; nested exception is: javax.net.ssl.SSLHandshakeException: No appropriate protocol (protocol is disabled or cipher suites are inappropriate)
</code></pre>
<p>And the only stuff that helped was removing Tls parts from <code>java.security</code> file as was said above:</p>
<pre><code>jdk.tls.disabledAlgorithms=SSLv3, TLSv1, TLSv1.1, RC4, DES, MD5withRSA, \
</code></pre>
<p>to</p>
<pre><code>jdk.tls.disabledAlgorithms=SSLv3, RC4, DES, MD5withRSA, DH keySize &lt; 1024, \
    DH keySize &lt; 1024, EC keySize &lt; 224, 3DES_EDE_CBC, anon, NULL, \
    EC keySize &lt; 224, 3DES_EDE_CBC, anon, NULL, \
    include jdk.disabled.namedCurves
</code></pre>
"
252,2720893,1970,2347210,Vladi,false,11,1660940495,1658738106,73106223,67899129,"<p>If you using Java 1.8, go to directory</p>
<pre class=""lang-none prettyprint-override""><code>..\Java\jre1.8.0_261\lib\security
</code></pre>
<p>If you using Java 11 or 17,</p>
<pre class=""lang-none prettyprint-override""><code>..\Java\jdk-11.0.15\conf\security\
</code></pre>
<p>Find the file <em>java.security</em>.</p>
<p>Find the lines</p>
<pre class=""lang-none prettyprint-override""><code>jdk.tls.disabledAlgorithms=SSLv3, TLSv1, TLSv1.1, RC4, DES, MD5withRSA, \
    DH keySize &lt; 1024, EC keySize &lt; 224, 3DES_EDE_CBC, anon, NULL
</code></pre>
<p>And put <strong>#</strong> before each line, and save it.</p>
"
253,17246855,509,12667201,Usama,false,10,1660939975,1632431337,69306914,67899129,"<p>I got rid of the above exception by adding this to my connection string.</p>
<pre class=""lang-none prettyprint-override""><code>jdbc:mysql://localhost:3306/Peoples?autoReconnect=true&amp;useSSL=false
</code></pre>
"
265,3576183,8563,2985377,Jason D,false,0,1675802495,1675802495,75378780,17729384,"<p>Similar to the accepted answers here, I found there was a bug in Lombok that only appeared in IntelliJ where it didn't generate the getters and setters for annotated fields; even when Lombok Annotations in IntelliJ were enabled.</p>
<p>What worked for me was</p>
<ol>
<li><p>Update to Lombok 1.18 or higher</p>
</li>
<li><p>Make a new file in project root with the value <code>lombok.addLombokGeneratedAnnotations=true</code></p>
</li>
<li><p>Invalidate caches and restart, re-enable Lombok Annotations on the project if it's turned off on restart.</p>
</li>
</ol>
<p>After that, the project rebuilt and ran in the IDE successfully.</p>
"
266,2640300,1389,2284107,kAmol,false,0,1659415265,1659415265,73202060,17729384,"<p>In my case, plugin was installed and also the compiler preferences were set accordingly. I had to go to <code>Refactor (in toolbar, in line to file, edit etc) -&gt; Lombok menu -&gt; Default @Data</code> then <code>Build</code> or internally `mvn clean install'.</p>
"
254,1139113,19904,1123501,Georgios Syngouroglou,false,20,1660939538,1628361187,68695153,67899129,"<p>In my case, Postfix supports TLS 1.0, TLS 1.1, TLS 1.2 and TLS 1.3.
I prepared some tests, using different OpenJDKs.</p>
<ul>
<li><p>Using OpenJDK 11.0.9 (2020-10-20)</p>
<p>I was able to send email without any exceptions</p>
</li>
<li><p>Using OpenJDK 11.0.10 (2021-01-19)</p>
<p>I was able to send email without any exceptions</p>
</li>
<li><p>Using OpenJDK 11.0.11 (2021-04-20)</p>
<p>I was getting the exception,</p>
<blockquote>
<p>SSLHandshakeException: No appropriate protocol (protocol is disabled or cipher suites are inappropriate)</p>
</blockquote>
</li>
<li><p>Using OpenJDK 11.0.12 (2021-07-20)</p>
<p>I was getting the same exception,</p>
<blockquote>
<p>SSLHandshakeException: No appropriate protocol (protocol is disabled or cipher suites are inappropriate)</p>
</blockquote>
</li>
</ul>
<p><em><strong>As far as I am concerned, the cause of the issue is that OpenJDK requires TLSv1.2 or TLSv1.3, starting from version 11.0.11.</strong></em> The change will apply to at least OpenJDK 8u292 onward, OpenJDK 11.0.11 onward, and all versions of OpenJDK 16, following the JRE and JDK Crypto Roadmap published by <a href=""https://aws.amazon.com/blogs/opensource/tls-1-0-1-1-changes-in-openjdk-and-amazon-corretto/"" rel=""noreferrer"">an Oracle reference</a>.</p>
<p>How to fix the problem,</p>
<ol>
<li>Go back to OpenJDK 11.0.10, you can find binaries <a href=""https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/tag/jdk-11.0.10%2B9"" rel=""noreferrer"">here</a>. More OpenJDK versions <a href=""https://wiki.openjdk.java.net/display/JDKUpdates/Archived+Releases"" rel=""noreferrer"">here</a>.</li>
<li><em>(Preferred)</em> Set the TLS version to TLS 1.2 for sending emails. You can do it by setting a system property like below, before you configure the Java <a href=""https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol"" rel=""noreferrer"">SMTP</a> client.</li>
</ol>
<blockquote>
<p><code>System.setProperty(&quot;mail.smtp.ssl.protocols&quot;, &quot;TLSv1.2&quot;);</code></p>
</blockquote>
<p>I use <a href=""https://en.wikipedia.org/wiki/Apache_Commons"" rel=""noreferrer"">Apache Commons</a> email and setting the aforementioned property before initializing my <code>HtmlEmail</code> object, I was able to send using the current OpenJDK version 11.0.12.</p>
<p>In any case you use a <a href=""https://en.wikipedia.org/wiki/Post_Office_Protocol"" rel=""noreferrer"">POP3</a> Java client, the same there,</p>
<blockquote>
<p><code>System.setProperty(&quot;mail.pop3s.ssl.protocols&quot;, &quot;TLSv1.2&quot;);</code></p>
</blockquote>
"
255,5598647,481,4435517,Zeenat Hussain,false,47,1660939564,1627276596,68524796,67899129,"<p>I was facing the same issue using JDK 11. But I resolved it by commenting this line in the <em>java.security</em> file:</p>
<pre class=""lang-none prettyprint-override""><code>jdk.tls.disabledAlgorithms=SSLv3, TLSv1, TLSv1.1, RC4, DES, MD5withRSA,
    DH keySize &lt; 1024, EC keySize &lt; 224, 3DES_EDE_CBC, anon, NULL,
    include jdk.disabled.namedCurves
</code></pre>
"
256,189816,33527,429377,Mahmoud Saleh,true,1,1728386459,1728386459,79065717,79060815,"<p>I was able to fix it as follows:</p>
<pre><code>for (float x = xAxis; x &lt; pageSize.getWidth(); x += height + 100) {
                    for (float y = yAxis; y &lt; pageSize.getHeight(); y += height + 100) {

                        if (isRTL) {
                            ColumnText.showTextAligned(bodyPainter, Element.ALIGN_CENTER, rtlPhrase, x, y, 45f,
                                    PdfWriter.RUN_DIRECTION_RTL, ColumnText.DIGITS_AN2EN);
                        } else {
                            bodyPainter.beginText();
                            bodyPainter.setTextRenderingMode(PdfPatternPainter.TEXT_RENDER_MODE_FILL);
                            bodyPainter.setFontAndSize(baseFont, 13);
                            bodyPainter.showTextAlignedKerned(Element.ALIGN_RIGHT, watermarkText, x, y, 45f);
                            bodyPainter.endText();
                        }

                    }
                }
</code></pre>
"
257,8053223,68,6071138,Athwale,true,0,1734049566,1734038386,79276633,79245854,"<p>The <code>FirmwareVersionPreferenceController.java</code> class is inside the <code>vdex</code> file, which can be downloaded from <code>system/app</code> or <code>priv-app</code> and decompiled with tools available online into DEX and further into java classes with JADX.</p>
<p>The password is in there; it’s in plain text.</p>
"
258,11393035,1,8352343,vplust,false,0,1734049495,1734038528,79276640,59276049,"<p>This looks simpler to me.</p>
<pre><code>Map&lt;String, Long&gt; charCount = words.stream().map(s -&gt; s.split(&quot;&quot;)).flatMap(Arrays::stream)
                .collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));

{a=2, c=1, d=1, e=3, h=1, j=1, l=2, m=1, o=3, r=1, t=2, v=1, w=1, W=1}
</code></pre>
"
259,11702868,251,8567318,Ankur Yadav,false,0,1677511370,1677511370,75582354,59276049,"<p><em><strong>In Kotlin:</strong></em></p>
<pre><code>val str = &quot;Occurrences&quot;
val results: Map&lt;String, Long&gt; =
        stream(str.split(&quot;&quot;).toTypedArray()).map{n-&gt; n.lowercase()}
            .collect(
                Collectors.groupingBy({ it  },
                    { LinkedHashMap() },
                    Collectors.counting()
                )
            )

Log.w(&quot;occurrencesResult&quot;,results.toString())
</code></pre>
"
260,13944235,21,10765057,Denys Shelupets,false,2,1632136912,1632133175,69252785,59276049,"<p>More readable using <code>flatMapToInt</code> than <code>flatMap(a -&gt; a.chars().mapToObj(c -&gt; (char) c)) </code></p>
<pre><code>words.stream()
            .flatMapToInt(String::chars) //IntStream
            .mapToObj(c -&gt; (char) c)     //Stream&lt;Character&gt;
            .collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));
</code></pre>
"
261,1939636,31550,1746118,Naman,true,10,1576029476,1576029476,59277879,59276049,"<p>It could be done as Willis pointed out using the <code>flatMap</code> and <code>groupingBy</code> collector. But, the expected output type should be <code>Map&lt;Character, Long&gt;</code> fo that as in:</p>

<pre><code>Map&lt;Character, Long&gt; charFrequency = words.stream() //Stream&lt;String&gt;
        .flatMap(a -&gt; a.chars().mapToObj(c -&gt; (char) c)) // Stream&lt;Character&gt;
        .collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));
</code></pre>
"
262,89056,8184,2684196,Willis Blackburn,false,2,1576016208,1576015813,59276100,59276049,"<p>The thing you need to know is that <code>flatMap</code> is the function that you can use to convert the strings into individual characters. While regular <code>map</code> function just converts each stream element into a different element, <code>flatMap</code> converts each element into a <em>stream</em> of elements, then concatenates those streams together.</p>

<p>The function that converts a <code>String</code> into a stream of characters is <code>String.chars</code>.</p>

<p>When you want to build a new collection from a stream, you usually use a collector. Using the function <code>Collectors.groupingBy</code> you can produce a collector that will create a <code>Map</code>, given two functions, one to produce the key for each stream value, and the other to produce the value. There's a variant of this that will let you pass another collector in as the second parameter instead of a function; try <code>Collectors.counting</code>.</p>
"
263,29183221,1,22356936,Sabarish Karrothu,false,0,1734049427,1734032890,79276407,17729384,"<p>I faced this issue with IntelliJ IDEA 2024 Community Edition using JDK21. Check following steps</p>
<ol>
<li>Go Plugins. Search for <em>Lombok</em> and install the plugin.</li>
<li>Go to File &gt; Settings &gt; Build, Execution, Deployment &gt; Compiler &gt; Annotation Processors. Check <strong>Enable annotation processing</strong>.</li>
<li>If <strong>Step 2</strong> didn't work, select your project under the <strong>Annotation profile</strong> instead of <strong>Default</strong>.</li>
<li>Select the <strong>Processor Path</strong>. Map it to lombok.jar in your local m2 repo.</li>
</ol>
<p><img src=""https://i.sstatic.net/gwNQJbjI.png"" alt=""Image for your reference"" /></p>
"
264,2659163,151,2299235,Gustavo Amaro,false,1,1732914387,1732914387,79238371,17729384,"<p>My fix:</p>
<ol>
<li><p><code>Settings</code> &gt; <code>Build, Execution, Deployment</code> &gt; <code>Compiler</code> &gt; <code>Annotation Processors</code></p>
</li>
<li><p>Check &quot;<code>Enable annotation processing</code>&quot;</p>
</li>
<li><p>Choose the option &quot;<code>Obtain processors from project classpath</code>&quot;</p>
</li>
</ol>
"
267,4431178,121,3608314,user3608314,false,4,1645114442,1645113998,71161541,17729384,"<p>I'm using IntelliJ with Spring boot 2.5.9. Here are the following things I did:</p>
<ol>
<li>Added the Lombok Plugin</li>
<li>Enabled annotation processing</li>
<li>Add lombok dependency and annotationProcessor tag in build.gradle file or maven file. (<em>It worked for me after this step</em>)</li>
</ol>
<p>Here is my build.gradle file:</p>
<pre><code>plugins {
    id 'org.springframework.boot' version '2.5.9'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
</code></pre>
"
268,38391955,1,28750901,Rakesh Gudekar,false,0,1734049355,1734005160,79275038,70986751,"<p>This is the perfect solution—with older version support you will get Java Projects Option.</p>
<p><strong>100% working</strong></p>
<ol>
<li><p>Click on Extension tab from where you install extensions.</p>
</li>
<li><p>Install &quot;<strong>Extension Pack for Java</strong>&quot;. If already installed, go to the next step.</p>
</li>
<li><p>Inside the &quot;<strong>Extension Pack for Java</strong>&quot;, there is another extension that comes with it, which is &quot;<strong>Project Manager for Java</strong>&quot;. This is automatically installed. Just click on the Settings icon beside it, and then click on &quot;<strong>Install specific version</strong>&quot;</p>
</li>
<li><p>Choose the second or third version which is stable. Install it. After that, restart; the extension kind of option will be available. Click on that.</p>
</li>
<li><p>Reload the project or restart Visual Studio Code.</p>
</li>
</ol>
<p><img src=""https://i.sstatic.net/QSi1gwln.png"" alt=""enter image description here"" /></p>
"
269,30327448,1,23241576,AnotherColdev,false,0,1705190636,1705190636,77813533,70986751,"<p>The only solution that work for me was create a new visual studio code profile and try to install the extension again.</p>
<p>[create a new profile steps][1]
[1]: https://i.sstatic.net/dphv6.png</p>
<p>I'm not sure that the order of extensions installation affect.</p>
"
270,29568360,1,22661160,Arya,false,0,1713927127,1696065195,77206377,70986751,"<p>It has been a while, have you tried opening the Explorer box and checking the Java Project tag, I have the same problem and it takes a few hours to realize.</p>
<p><img src=""https://i.sstatic.net/yjhvN.png"" alt=""Java project check box"" /></p>
"
271,15594545,180,11250492,Prem G,false,0,1687438720,1687438720,76532184,70986751,"<p>Open Command Palette and type 'Explorer: Focus on Java Projects View' (can refer screenshot below)</p>
<p>hope it helps! :)</p>
<p><a href=""https://i.sstatic.net/4883p.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/4883p.png"" alt=""enter image description here"" /></a></p>
"
272,2909719,20718,2494262,MrE,false,1,1669954144,1669954144,74650813,70986751,"<p>I have struggled quite a bit with this and none of the 'obvious' solutions worked.</p>
<p>The way I ended up solving the issue is by creating a new Java Project and looking at the difference in the config of the files.</p>
<p>Especially in the <code>.project</code> file, there were missing entries. Some also in the <code>.settings/*.prefs</code> files
After updating those in my own project, it got detected properly.</p>
"
273,38383214,1,28745718,Joseph Blair,false,0,1734049100,1733984228,79274012,2715118,"<p>The method I made fixes all of the problems with most popular solution on this thread (I think). If you have other HTML commands that you use—I only use center—you can remove them from the String before splitting it as well. If you want this to work for JButtons, just change the parameter to JButton and it will work. You can put this method in a repeater to continuously update font and it works.</p>
<pre><code>    public void maxFont(JLabel label){
    String sin = label.getText();
    String[] ss = sin.replace(&quot;&lt;html&gt;&quot;,&quot;&quot;).replace(&quot;&lt;center&gt;&quot;, &quot;&quot;).split(&quot;&lt;br&gt;&quot;);
    int lines = ss.length;
    String s=&quot;&quot;;
    FontMetrics fm = getFontMetrics(new JLabel().getFont());
    int maxWidth=0;
    if(!sin.equals(ss[0])){
        for (String sss : ss) {
            int p = fm.stringWidth(sss);
            if(p&gt;maxWidth){
                maxWidth=p;
                s=sss;
            }
        }
    }else {
        s=sin;
        maxWidth=fm.stringWidth(s);
    }
    int newWidth = (label.getWidth()/maxWidth)*10;
    int maxHeight = label.getHeight()*7/8/lines;
    int fontSize = Math.min(newWidth,maxHeight);
    label.setFont(new Font(label.getFont().getName(), Font.PLAIN, fontSize));
}
</code></pre>
"
274,23402166,135,17465178,Ravindu Sathsara,false,0,1642579540,1642270872,70724181,2715118,"<p>I tried this its worked for me:</p>
<pre><code>Label welcomeMsg = new JLabel(&quot;Contact us&quot;);

welcomeMsg.setBounds(200,10,100,25);

welcomeMsg.setFont( new Font(&quot;Serif&quot;,Font.PLAIN,22));
</code></pre>
"
275,16526299,71,11940960,ataullahtoffar,false,7,1580122909,1580117495,59928277,2715118,"<pre><code>JLabel label = new JLabel(""Hello World"");
label.setFont(new Font(""Calibri"", Font.BOLD, 20));
</code></pre>
"
276,5706118,217,4509583,Warren K,false,2,1499536057,1433833041,30724991,2715118,"<p>Just wanted to point out that the accepted answer has a couple of limitations (which I discovered when I tried to use it)</p>

<ol>
<li>As written, it actually keeps recalculating the font size based on a ratio of the <strong><em>previous</em></strong> font size... thus after just a couple of calls it has  rendered the font size as much too large.  (eg Start with 12 point as your DESIGNED Font, expand the label by just 1 pixel, and the published code will calculate the Font size as 12 * (say) 1.2 (ratio of field space to text) = 14.4 or 14 point font.  1 more Pixel and call and you are at 16 point !).</li>
</ol>

<p>It is thus not suitable (without adaptation) for use in a repeated-call setting (eg a <code>ComponentResizedListener</code>, or a custom/modified <code>LayoutManager</code>).</p>

<p>The listed code effectively assumes a starting size of 10 pt but refers to the current font size and is thus suitable for calling once (to set the size of the font when the label is created).  It would work better in a multi-call environment if it did <code>int newFontSize = (int) (widthRatio * 10);</code> rather than <code>int newFontSize = (int)(labelFont.getSize() * widthRatio);</code></p>

<ol start=""2"">
<li><p>Because it uses <code>new Font(labelFont.getName(), Font.PLAIN, fontSizeToUse))</code> to generate the new font, there is no support for Bolding, Italic or Color etc from the original font in the updated font.  It would be more flexible if it made use of <code>labelFont.deriveFont</code> instead. </p></li>
<li><p>The solution does not provide support for HTML label Text.  (I know that was probably not ever an intended outcome of the answer code offered, but as I had an HTML-text <code>JLabel</code> on my <code>JPanel</code> I formally discovered the limitation. The <code>FontMetrics.stringWidth()</code> calculates the text length as <strong>inclusive</strong> of the width of the html tags - ie as simply more text)</p></li>
</ol>

<p>I recommend looking at the answer to <a href=""https://stackoverflow.com/questions/9814616/how-to-auto-adjust-font-size-of-multiple-jlabel-based-on-container-size-in-a-smo/9815307#9815307"">this SO question</a> where trashgod's answer points to a number of different answers (including this one) to an almost identical question.  On that page I will provide an additional answer that speeds up one of the other answers by a factor of 30-100.</p>
"
277,5966939,41,4690486,Bekim Fetaji,false,4,1426779706,1426778571,29148550,2715118,"<p>Source Code for Label - How to change Color and Font (in Netbeans)</p>

<pre><code>jLabel1.setFont(new Font(""Serif"", Font.BOLD, 12));


jLabel1.setForeground(Color.GREEN);
</code></pre>
"
280,24095576,115,18068156,Seeker,false,0,1672148595,1672148595,74930030,46292095,"<p>I cam across this post looking for a solution for my CLion (Rust). I removed all breakpoints, and it was enough to make the starting time on the debug mode too quick again.</p>
<p>Thanks to everyone who suggested that. This suggestion does not work only for Java, it also works for Rust/Clion</p>
"
281,3154976,71,2667570,Martin Devlin,false,0,1641835390,1641835390,70656481,46292095,"<p>In my case the problem was caused by the &quot;Threads&quot; view. When I remove this view it becomes fast again.</p>
<p>When I add the Threads view, I continuously see &quot;Collecting data...&quot; in the threads view, it flickers every 5s where the threads list shows for a moment then it goes back to &quot;Collecting data...&quot;. When its like this, stepping through the code is painfully slow - takes about 10s for each step.</p>
"
282,2395641,379,2094491,alexcorghencea,false,4,1635803335,1635803335,69803135,46292095,"<p>Removing all Interface method breakpoints will fix the long spring boot startup Idea debug run.</p>
"
283,3472413,109,2906425,Matthew Gerring,false,0,1734043292,1734043292,79276790,74319252,"<p>You can use jansi</p>
<pre><code>&lt;dependency&gt;
  &lt;groupId&gt;org.fusesource.jansi&lt;/groupId&gt;
  &lt;artifactId&gt;jansi&lt;/artifactId&gt;
  &lt;version&gt;2.4.0&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<p>then:</p>
<pre><code>AnsiConsole.systemInstall();
Ansi.ansi().fg(Ansi.Color.YELLOW).a(&quot;Hello World&quot;).reset().toString());
AnsiConsole.systemUninstall();
</code></pre>
<p>This will only work if the console/terminal/cmd has ansi support of course so old Windows 10 will not.</p>
"
284,3211603,297375,2711488,Holger,false,5,1667587208,1667587208,74321619,74319252,"<p>ANSI support for the Windows CMD terminal is only available with Windows 10 version 1511 or newer. But even then, it’s not enable by default, for compatibility reasons. Native executables must have been marked as using ANSI or explicitly invoke a dedicated Windows function to enable ANSI support.</p>
<p>Neither applies to <code>java.exe</code>. Therefore, you don’t get ANSI support.</p>
<p>You could work-around this by delegating the printing to another software which has ANSI support enable, like the <code>echo</code> command.</p>
<pre class=""lang-java prettyprint-override""><code>import java.io.IOException;

public class ConsoleOutput {
    public static final String ANSI_RESET_ALL = &quot;\33[0m&quot;;
    public static final String ANSI_YELLOW_FG = &quot;\33[33m&quot;;
    public static final String ANSI_RESET_FG = &quot;\33[39m&quot;;

    // Main driver method
    public static void main(String[] args) {
        // Printing the text on console prior adding
        // the desired color
        println(ANSI_YELLOW_FG + &quot;This text is yellow&quot; + ANSI_RESET_FG);
        println(&quot;This is normal color&quot;);
    }

    static void println(String s) {
        try {
            new ProcessBuilder(&quot;cmd&quot;, &quot;/c&quot;, &quot;echo &quot; + s).inheritIO().start().waitFor();
        } catch (InterruptedException|IOException e) {
            throw new RuntimeException(e);
        }
    }
}
</code></pre>
<p>For large text fragments, you could dump them into a temporary file and use the <code>type</code> command to transfer them to the terminal.</p>
<hr />
<p>Future Java versions will come with support to invoke native functions without the need for native helper code, like a JNI stub. With JDK 19’s preview version, the code to enable ANSI from within Java would look like</p>
<pre class=""lang-java prettyprint-override""><code>import java.lang.foreign.*;
import java.lang.invoke.*;

public class ConsoleOutput {
    public static final String ANSI_RESET_ALL = &quot;\33[0m&quot;;
    public static final String ANSI_YELLOW_FG = &quot;\33[33m&quot;;
    public static final String ANSI_RESET_FG = &quot;\33[39m&quot;;

    public static void main(String[] args) {
        if(initANSI()) System.out.println(&quot;ANSI should now work&quot;);
        System.out.println(ANSI_YELLOW_FG + &quot;This text is yellow&quot; + ANSI_RESET_FG);
        System.out.println(&quot;This is normal color&quot;);
    }
    static boolean initANSI() {
        try {
            SymbolLookup sl = SymbolLookup.libraryLookup(&quot;kernel32.dll&quot;, MemorySession.global());
            Linker linker = Linker.nativeLinker();
            MethodHandle GetStdHandle = linker.downcallHandle(sl.lookup(&quot;GetStdHandle&quot;).get(),
                FunctionDescriptor.of(ValueLayout.ADDRESS, ValueLayout.JAVA_INT)
            );
            MethodHandle SetConsoleMode = linker.downcallHandle(sl.lookup(&quot;SetConsoleMode&quot;).get(),
                FunctionDescriptor.of(ValueLayout.JAVA_BOOLEAN, ValueLayout.ADDRESS, ValueLayout.JAVA_INT)
            );
            Addressable a = (MemoryAddress) GetStdHandle.invokeExact(STD_OUTPUT_HANDLE);
            return (boolean)SetConsoleMode.invokeExact(a,
                ENABLE_PROCESSED_OUTPUT|ENABLE_VIRTUAL_TERMINAL_PROCESSING);
        } catch (RuntimeException | Error unchecked) {
            throw unchecked;
        } catch(Throwable e) {
            throw new AssertionError(e);
        }
    }
    static final int STD_OUTPUT_HANDLE = -11,
        ENABLE_PROCESSED_OUTPUT = 0x0001, ENABLE_VIRTUAL_TERMINAL_PROCESSING = 0x0004;
}
</code></pre>
"
285,1119690,20482,1108305,M. Justin,false,0,1734039327,1734039327,79276672,68642780,"<p>As <code>posts</code> is a <code>List</code> and this is a straightforward iteration, I would suggest a for-each loop over an iterator-based while loop:</p>
<pre class=""lang-java prettyprint-override""><code>for (Post post : posts) {
    if (Objects.equals(post.getUserId(), checkUserId)
            &amp;&amp; Objects.equals(post.getId(), checkId)) {
        System.out.println(post.getTitle());
    }
}
</code></pre>
<p>(For completeness: as mentioned in <a href=""https://stackoverflow.com/a/68642823/1108305"">the other answer</a>, the problem with your iterator-based approach was calling <code>iter.next()</code> multiple times per loop iteration, rather than just once per iteration).</p>
"
286,13170666,88576,9513184,Unmitigated,true,1,1628025053,1628025053,68642823,68642780,"<p>Your first attempt does not work because you are advancing the iterator twice on each iteration by calling <code>next</code>. Instead, store the result of <code>Iterator#next</code> and use it.</p>
<pre><code>Iterator&lt;Post&gt; iter = posts.iterator();
 while(iter.hasNext()){
        Post post = iter.next();
        if(Objects.equals(post.getUserId(), checkUserId)) {
            System.out.println(&quot;found UserId&quot;);
            System.out.println(post.getTitle());
        }
    }
</code></pre>
<p>With streams:</p>
<pre><code>List&lt;String&gt; titles = posts.stream().filter(post-&gt; checkId.equals(post.getId()))
                        .map(Post::getTitle).collect(Collectors.toList());
titles.forEach(System.out::println);
</code></pre>
"
287,6482932,31425,5019386,Mahmoud Ben Hassine,true,3,1734039346,1652951624,72301790,72299724,"<p>You have two options:</p>
<h4>1. Handle the retry operation manually in your item processor</h4>
<p>There are basically two ways to do that, either programmatically or in a declarative way.</p>
<h5>1.1 Programmatic approach</h5>
<p>You first define your retry template with a backoff policy as needed:</p>
<pre><code>@Bean
public RetryTemplate retryTemplate() {
    // configure backoff policy
    ExponentialBackOffPolicy exponentialBackOffPolicy = new ExponentialBackOffPolicy();
    exponentialBackOffPolicy.setInitialInterval(1000);
    exponentialBackOffPolicy.setMultiplier(2.0);
    exponentialBackOffPolicy.setMaxInterval(10000);

    // configure retry policy
    SimpleRetryPolicy simpleRetryPolicy = new SimpleRetryPolicy();
    simpleRetryPolicy.setMaxAttempts(5);

    // configure retry template
    RetryTemplate retryTemplate = new RetryTemplate();
    retryTemplate.setBackOffPolicy(exponentialBackOffPolicy);
    retryTemplate.setRetryPolicy(simpleRetryPolicy);

    return retryTemplate;
}
</code></pre>
<p>Then use that retry template in your item processor:</p>
<pre><code>import org.springframework.batch.item.ItemProcessor;
import org.springframework.retry.RetryCallback;
import org.springframework.retry.RetryContext;
import org.springframework.retry.support.RetryTemplate;

public class MyRetryableItemProcessor implements ItemProcessor {

    RetryTemplate retryTemplate;

    public MyRetryableItemProcessor(RetryTemplate retryTemplate) {
        this.retryTemplate = retryTemplate;
    }

    @Override
    public Object process(Object item) throws Exception {
        return retryTemplate.execute(new RetryCallback&lt;Object, Exception&gt;() {
            @Override
            public Object doWithRetry(RetryContext retryContext) throws Exception {
                // API call
                return item;
            }
        });
    }
}
</code></pre>
<h5>1.2 Declarative approach using annotations</h5>
<p>Here is an example:</p>
<pre><code>import org.springframework.batch.item.ItemProcessor;
import org.springframework.retry.RetryCallback;
import org.springframework.retry.RetryContext;
import org.springframework.retry.annotation.Backoff;
import org.springframework.retry.annotation.Retryable;
import org.springframework.retry.support.RetryTemplate;
import org.springframework.stereotype.Component;

@Component
public class MyAnnotationBasedRetryableItemProcessor implements ItemProcessor {

    @Override
    @Retryable(backoff = @Backoff(delay = 1000L, maxDelay = 10000, multiplier = 2.0))
    public Object process(Object item) throws Exception {
        // Do API call
        return item;
    }

}
</code></pre>
<h4>2. Let Spring Batch handle the retry for you by using a fault-tolerant step</h4>
<p>In this case, you can set a custom <code>RetryPolicy</code> in your fault-tolerant step:</p>
<pre><code>@Bean
public Step step(StepBuilderFactory stepBuilderFactory) {
    // configure backoff policy
    ExponentialBackOffPolicy exponentialBackOffPolicy = new ExponentialBackOffPolicy();
    exponentialBackOffPolicy.setInitialInterval(1000);
    exponentialBackOffPolicy.setMultiplier(2.0);
    exponentialBackOffPolicy.setMaxInterval(10000);

    // configure retry policy
    SimpleRetryPolicy simpleRetryPolicy = new SimpleRetryPolicy();
    simpleRetryPolicy.setMaxAttempts(5);
    
    return stepBuilderFactory.get(&quot;myStep&quot;)
            .&lt;Integer, Integer&gt;chunk(5)
            .reader(itemReader())
            .processor(itemProcessor())
            .writer(itemWriter())
            .faultTolerant()
            .retryPolicy(simpleRetryPolicy)
            .backOffPolicy(exponentialBackOffPolicy)
            .build();
}
</code></pre>
<p>Note that in this case, whenever your processor throws an exception for an item, the entire chunk is retried item by item (and each item will be re-processed in its own transaction).</p>
<hr />
<p>The examples above use spring-retry since you mentioned you have a preference for that. But the same ideas can be applied with any other fault-tolerance library.</p>
"
305,422939,4381,802012,Mark Butler,false,13,1583384268,1362980628,15331935,5193786,"<p>Here is code based on bestsss' answer:</p>

<pre><code>    Enumeration&lt;URL&gt; en = getClass().getClassLoader().getResources(
            ""META-INF"");
    List&lt;String&gt; profiles = new ArrayList&lt;&gt;();
    while (en.hasMoreElements()) {
        URL url = en.nextElement();
        JarURLConnection urlcon = (JarURLConnection) (url.openConnection());
        try (JarFile jar = urlcon.getJarFile();) {
            Enumeration&lt;JarEntry&gt; entries = jar.entries();
            while (entries.hasMoreElements()) {
                String entry = entries.nextElement().getName();
                System.out.println(entry);
            }
        }
    }
</code></pre>
"
288,6363541,631,4938251,Yurii Rabeshko,false,4,1536155020,1536155020,52186665,8587096,"<h2>Debugging an annotation processor with IntelliJ IDEA and Gradle</h2>

<ol>
<li>Set a custom VM option <code>-Dcompiler.process.debug.port=5005</code>: press <strong>Ctrl + Shift + A</strong> and select <strong>Edit Custom VM Options...</strong> in the list of actions to add a custom VM option then restart the IDE.</li>
<li>Create a remote debug configuration with default parameters: <strong>Run -> Edit Configurations... -> Add New Configuration (Alt + Insert) -> Remote</strong>.
<a href=""https://i.sstatic.net/hG3VJ.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/hG3VJ.jpg"" alt=""enter image description here""></a></li>
<li>Set breakpoints.</li>
<li>Build with Gradle from the terminal: <code>$ ./gradlew --no-daemon -Dorg.gradle.debug=true clean build</code> (it's okay if the execution of the command is frozen, don't terminate a process).</li>
<li>Debug the remote debug configuration within the IDE (see step 3): select a suitable remote debug configuration and press <strong>Shift + F9</strong>.
<a href=""https://i.sstatic.net/a0pck.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/a0pck.png"" alt=""enter image description here""></a></li>
</ol>

<p>Hope it helps somebody :)</p>
"
289,362929,11712,706387,kosiara - Bartosz Kosarzycki,false,19,1488269151,1488206808,42488641,8587096,"<p>This tutorial is written for an <strong>Android project</strong>. Main module name is <strong>""app""</strong> as usual. The project contains a submodule called <strong>""annotation""</strong> which is subdependency of ""app"". ""app"" module runs annotation processing with gradle declaration 
<code>apt project(':annotation')</code> .</p>

<p><strong>SIMPLE VERSION</strong> 
(run compilation from terminal and attach from IDE)</p>

<ol>
<li>[REQUIRED] Add a new project configuration <strong>""+"" -> ""Remote""</strong>. Check <strong>""Single instance only""</strong>. All other settings are generated automatically. Leave <code>&lt;whole project&gt;</code> as the classpath. Port should be left as the default <strong>5005</strong>.</li>
</ol>

<p><a href=""https://i.sstatic.net/ze7KN.png"" rel=""noreferrer""><img src=""https://i.sstatic.net/ze7KN.png"" alt=""enter image description here""></a></p>

<ol start=""2"">
<li>[REQUIRED] Make sure you stop all gradle instances by calling:  <code>./gradlew --stop</code></li>
<li>[REQUIRED] Run the command : <code>./gradlew --no-daemon -Dorg.gradle.debug=true :app:clean :app:compileDebugJavaWithJavac</code></li>
</ol>

<p><a href=""https://i.sstatic.net/oPo5t.png"" rel=""noreferrer""><img src=""https://i.sstatic.net/oPo5t.png"" alt=""enter image description here""></a></p>

<ol start=""4"">
<li>Run the APT project configuration in debug mode as fast as possible :)</li>
</ol>

<p><a href=""https://i.sstatic.net/uYW1o.png"" rel=""noreferrer""><img src=""https://i.sstatic.net/uYW1o.png"" alt=""enter image description here""></a></p>

<hr>

<ol start=""4"">
<li>[HINT] We start with an EMPTY <strong>gradle.properties</strong> file</li>
<li>[HINT] DO NOT USE gradle <strong>daemon</strong> ( --no-daemon / org.gradle.daemon=false option  )</li>
<li>[HINT] Run gradle in <strong>debug</strong> mode ( org.gradle.debug=true  option )</li>
<li>[HINT] Run <strong>app's module compilation</strong> not the processor's module compilation (app's compilation runs annotation processing!)</li>
<li>We DO NOT normally add any Java compiler settings in Android Studio (i.e. File -> other settings -> Default settings)</li>
</ol>

<hr>

<p><strong>EXTENDED VERSION</strong> (use <em>gradle.properties</em>) </p>

<ol>
<li>Add the following to your <strong>gradle.properties</strong> file:</li>
</ol>

<pre>

    org.gradle.daemon=false
    org.gradle.debug=true

</pre>

<ol start=""2"">
<li>Run the compilation from terminal:</li>
</ol>

<p><code>./gradlew :app:clean :app:compileDebugJavaWithJavac</code></p>

<p><a href=""https://i.sstatic.net/uYW1o.png"" rel=""noreferrer""><img src=""https://i.sstatic.net/1tVC7.png"" alt=""enter image description here""></a></p>

<hr>

<p><strong>ADVANCED VERSION</strong> (just press debug in IDE)</p>

<ol>
<li>Add a bash script to your project main dir (e.g. <strong>compile.sh</strong>)</li>
</ol>

<pre>
#!/bin/bash
./gradlew :app:clean :app:compileDebugJavaWithJavac &
</pre>

<p>Remember about the '&amp;' sign for background processing.</p>

<ol start=""2"">
<li>Go to APT configuration settings we created in step 1 and add a <strong>Before launch configuration</strong>. Select <strong>Run external tool</strong>.</li>
</ol>

<p><a href=""https://i.sstatic.net/qRAp3.png"" rel=""noreferrer""><img src=""https://i.sstatic.net/qRAp3.png"" alt=""enter image description here""></a></p>

<ol start=""3"">
<li>Add the path to the <strong>compile.sh</strong> script we created earlier.</li>
</ol>

<p><a href=""https://i.sstatic.net/GcPlE.png"" rel=""noreferrer""><img src=""https://i.sstatic.net/GcPlE.png"" alt=""enter image description here""></a></p>

<hr>

<p><strong>Warning</strong></p>

<p>Messing up gradle compilation, <em>NullPointer exceptions</em> during compilation etc. sometimes result in AndroidStudio being stuck (frozen on gradle refresh stage). If you cannot <strong>stop gradle</strong> from the IDE then use this command in the terminal:</p>

<pre><code>ps -A | grep gradle | awk '{ print $1; }' | xargs kill -9
</code></pre>

<p>Turning off <strong>debug option</strong> during project refresh sometimes helps Android Studio to come back to the right track.</p>
"
290,473776,4590,883073,bisgardo,false,5,1477373136,1477373136,40231961,8587096,"<p>For a Maven project, <a href=""http://blog.jensdriller.com/how-to-debug-a-java-annotation-processor-using-intellij/"" rel=""noreferrer"">this post</a>, which explains the following steps in a little more detail, worked for me:</p>

<ol>
<li><p>Add ""Remote"" run configuration and set ""port"" to 8000.</p></li>
<li><p>Issue the command <code>mvnDebug clean install</code> from the project's directory (on the command line).</p></li>
<li><p>Run the run configuration. In order to start a new session after the processes quit, repeat from (2).</p></li>
</ol>

<p>Remember to run <code>mvn install</code> on the project's dependencies when they change (e.g. if the annotation processor is in a different artifact than the project you are debugging it from).</p>
"
291,1636164,17433,1509583,Gagandeep Singh,false,16,1484563354,1461230011,36765029,8587096,"<p>Follow these steps, These worked for me on android studio for gradle project:-</p>

<p>1).In gradle.properties add following lines</p>

<pre><code>org.gradle.daemon=true
org.gradle.jvmargs=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005
</code></pre>

<p>2).Edit Build COnfiguration and add Remote Configration
<a href=""https://i.sstatic.net/XgEd7.png"" rel=""noreferrer""><img src=""https://i.sstatic.net/XgEd7.png"" alt=""enter image description here""></a></p>

<p>3).Run recently created run configuration APT.</p>

<p>4).Add break point in annotation processing code and build overall project</p>
"
292,1192761,6290,1165181,bryant1410,false,3,1459265579,1459260183,36286651,8587096,"<p>Annotation processing occurs during compilation, so normal debugging won't work. If you want to debug it in the context of you project, you can use IntelliJ remote debugging, while having Gradle or Maven in debug mode. Then you can put breakpoints in the Annotation Processor's files.</p>

<p>See <a href=""https://blog.xmartlabs.com/2016/03/28/Debugging-an-Annotator-Processor-in-your-project/"" rel=""nofollow"">Debugging an Annotation Processor in any project</a>.</p>

<p>Disclaimer: I wrote the post.</p>
"
293,1534652,8989,1431016,Sormuras,false,-1,1734036679,1734036679,79276563,77511739,"<p>For documenting such simple getter-style methods you may write:</p>
<pre class=""lang-java prettyprint-override""><code>/** {@return foo} */
public Foo getFoo() {
  return foo;
}
</code></pre>
<p>Note the curly braces in <code>{@return ...}</code> compared to your example.</p>
<p>See also <a href=""https://stackoverflow.com/a/66220601/1431016"">https://stackoverflow.com/a/66220601/1431016</a> and  <a href=""https://bugs.openjdk.java.net/browse/JDK-8075778"" rel=""nofollow noreferrer"">https://bugs.openjdk.java.net/browse/JDK-8075778</a></p>
"
294,1600162,1980,1481345,Ale Zalazar,false,1,1703783182,1703783182,77728214,77511739,"<p>Seems unlikely to have such granularity.</p>
<p>As you perfectly stated the message and check was included in 21
<a href=""https://github.com/openjdk/jdk/blob/jdk-21%2B35/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclint/resources/doclint.properties#L43"" rel=""nofollow noreferrer"">https://github.com/openjdk/jdk/blob/jdk-21%2B35/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclint/resources/doclint.properties#L43</a></p>
<p><a href=""https://i.sstatic.net/AmSc5.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/AmSc5.png"" alt=""no main description"" /></a></p>
<p>And having reviewed the change that implemented the new check there's no clue that such granularity for disabling the check can be achieved (needed to clone due to github being incapable of showing such a large diff).</p>
<pre><code>@localhost:~/dev$ git clone git@github.com:openjdk/jdk.git
@localhost:~/dev/jdk$ git diff jdk-17+35 jdk-21+35 -- src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclint/Checker.java &gt; ~/jdk.diff
</code></pre>
<p><a href=""https://i.sstatic.net/x3z0V.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/x3z0V.png"" alt=""diff"" /></a></p>
<p>You'd probably be able to contact the team and/or submit your proposal/PR or feedback on this kind of changes, there's a community list <em>discuss@openjdk.org</em> as described in <a href=""https://mail.openjdk.org/mailman/listinfo/discuss"" rel=""nofollow noreferrer"">https://mail.openjdk.org/mailman/listinfo/discuss</a> but it's highly unlikely you see a change on this regard anytime soon.</p>
"
295,11585374,199,8487732,Ajay,false,0,1657621357,1657620862,72950642,604424,"<pre><code>public enum DivisionType {
DEFAULT(0){
    @Override
    public void sort(List&lt;SigInUserDto&gt; SigInUserDtos) {
        SigInUserDtos.sort(new SigInUserCoinsQueueComparator());
    }
},
ASSIGNPOINTS(1) {
    @Override
    public void sort(List&lt;SigInUserDto&gt; SigInUserDtos) {
        SigInUserDtos.sort(new SigInUserPointsComparator());
    }
},
ASSIGNEVENORDER(2) {
    @Override
    public void sort(List&lt;SigInUserDto&gt; SigInUserDtos) {
        SigInUserDtos.sort(new SigInUserOrderCountComparator());
    }
};

public final Integer label;

DivisionType(Integer label) {
    this.label = label;
}

public static DivisionType getTypeById(Integer id) {
    for (DivisionType value : DivisionType.values()) {
        if (value.label == id) {
            return value;
        }
    }
    return DEFAULT;
}

public abstract void sort(List&lt;SigInUserDto&gt; SigInUserDtos);
}
</code></pre>
<p>Using enum:
DivisionType.getTypeById(object.getBalancingTypesId().intValue()).sort(sigInUserDtoList);</p>
<p>Here, sort() function is implemented(over-loaded) under each enum match.
So, based on object &quot;object.getBalancingTypesId().intValue()&quot; match value, particular enum match is invoked and sorted.</p>
"
296,1920449,1524,1732133,And-y,false,1,1643749353,1643733777,70944285,604424,"<p>A combination of answers and comments for Java 8 using Streams.
It creates a static Map for lookup with the opportunity of a default value, to prevent null checks.</p>
<pre><code>public enum Blah {
    A, B, C, D, INVALID

    private static final Map&lt;String, Blah&gt; ENUM_MAP = Stream.of(Blah.values())
            .collect(Collectors.toMap(Enum::name, Function.identity()));

    public static Blah of(final String name) {
        return ENUM_MAP.getOrDefault(name, INVALID);
    }
}

// e.g.
Blah.of(&quot;A&quot;);
A

Blah.of(&quot;X&quot;)
INVALID
</code></pre>
"
297,2606443,464,2257531,Swapnil Gangrade,false,2,1629374430,1629374430,68847493,604424,"<pre><code>public enum ToggleStatusUpdate {
    OFF(&quot;off&quot;, 1),
    ON(&quot;on&quot;, 2);
    
    private final String name;
    private final int position;
    
    private ToggleStatusUpdate(String name, int position) {
        this.name = name;
        this.position = position;
    }

    public String getName() {
        return name;
    }

    public int getPosition() {
        return position;
    }
    
    public static int getPositionForName(String name) {
        for(ToggleStatusUpdate toggleStatusUpdate : ToggleStatusUpdate.values()) {
            if (toggleStatusUpdate.getName().equals(name)) {
                return toggleStatusUpdate.getPosition();
            }
        }
        return -1;
    }

    public static void main(String[] args) {
        System.out.println(ToggleStatusUpdate.getPositionForName(&quot;off&quot;));
    }
}
</code></pre>
"
298,5464574,350,4345743,Nitya Nand Pandey,false,6,1628619053,1614926768,66487979,604424,"<p>Enum valueOf()</p>
<p>An enum class automatically gets a static valueOf() method in the class when compiled. The valueOf() method can be used to obtain an instance of the enum class for a given String value.</p>
<p>For example:</p>
<pre><code>public class Main {
    public static void main(String[] args) throws Exception {
        System.out.println(Strings.TWO.name());
    }
    enum Strings {
        ONE, TWO, THREE
    }
}
</code></pre>
"
299,8704380,193,6513014,orly.sharon,false,3,1734036612,1609240709,65491287,604424,"<p>I was looking for an answer to find the &quot;blah&quot; name and not its value (not the text). Based on <a href=""https://stackoverflow.com/questions/604424/how-to-get-an-enum-value-from-a-string-value-in-java/45082346#45082346"">Manu's answer</a>, I find this code useful:</p>
<pre><code>public enum Blah {
    A(&quot;text1&quot;),
    B(&quot;text2&quot;),
    C(&quot;text3&quot;),
    D(&quot;text4&quot;);

    private String text;

    Blah(String text) {
        this.text = text;
    }

    public String getText() {
        return this.text;
    }

    public static Blah valueOfCode(String blahCode) throws IllegalArgumentException {
        Blah blah = Arrays.stream(Blah.values())
            .filter(val -&gt; val.name().equals(blahCode))
            .findFirst()
            .orElseThrow(() -&gt; new IllegalArgumentException(&quot;Unable to resolve blah: &quot; + blahCode));

        return blah;
    }
}
</code></pre>
"
300,238684,22917,507738,MC Emperor,true,11,1734035902,1498556202,44776930,44772011,"<blockquote>
<p><em>...since <code>current_image_index % image.length</code> will always give a result of 0.</em></p>
</blockquote>
<p><strong>Not quite correct.</strong></p>
<p>The modulus operator (<code>%</code>) calculates the <a href=""https://en.wikipedia.org/wiki/Remainder"" rel=""nofollow noreferrer"">remainder</a> of two operands. It is a sort of repeated subtraction. In fact, with <code>a % b</code> you'll ask yourself:</p>
<blockquote>
<p><em>What number remains if I repeat subtracting <code>b</code> from <code>a</code> until that operation is no longer possible?</em></p>
</blockquote>
<p>Let us test it with <code>8 % 3</code> (so <code>a = 8</code> and <code>b = 3</code>).</p>
<ul>
<li>Can I subtract 3 from 8? Yes, result is 5.</li>
<li>Can I subtract 3 from 5? Yes, result is 2.</li>
<li>Can I subtract 3 from 2? <strong>No, so our final result is 2</strong>.</li>
</ul>
<p>Logically, the operation <code>a % b</code> with result <code>r</code> always results in  <code>0 &lt;= r &lt; b</code>.</p>
<blockquote>
<p><strong>Examples:</strong><br />
5 % 2 = 1 (because 4 ÷ 2 = 2 and the remainder is 1)<br />
17 % 6 = 5 (because 12 ÷ 6 = 2 and the remainder is 5)<br />
20 % 4 = 0 (because 20 ÷ 4 = 5 and nothing remains)</p>
</blockquote>
<p>So in your case, the array index is always at least <code>0</code> and at most <code>images.length - 1</code>. And that's exactly the valid range of your array.</p>
<p>Suppose you have <strong>3</strong> images, thus <code>images.length</code> is <strong>3</strong>. Also <code>current_image_index</code> is initialized to <strong>0</strong>. So you'll see <code>image[0]</code> at the beginning.</p>
<ol>
<li>You click once, so <code>current_image_index</code> is incremented to <code>1</code>. Then, the modulus operation is applied: <code>1 % 3 = 1</code>.</li>
<li>You click again, so <code>current_image_index</code> is incremented to <code>2</code>. Then, the modulus operation is applied: <code>2 % 3 = 2</code>.</li>
<li>You click again, so <code>current_image_index</code> is incremented to <code>3</code>. Then, the modulus operation is applied: <code>3 % 3 = 0</code>. That means the index reached <strong>3</strong>, but then was immediately reset to <strong>0</strong> by the modulus operator.</li>
</ol>
<p>So after <code>image[2]</code>, <code>image[0]</code> is shown. You see that indices starting at 0 instead of 1 is working in our benefit now.</p>
"
301,5961695,1137,4686676,Ichor de Dionysos,false,0,1498537567,1498537567,44772259,44772011,"<p><code>current_image_index % images.length</code> works as a module. </p>

<p><a href=""https://en.m.wikipedia.org/wiki/Modulo_operation"" rel=""nofollow noreferrer"">https://en.m.wikipedia.org/wiki/Modulo_operation</a></p>

<p>So I think we both a agree  <code>1/2 = 0 R 1</code>. </p>

<p>And modulo in every programming language means simply take the remainder of the division and return it as the result of the operation. </p>

<p>So <code>1 ‰ 2 = 1</code> and not zero. </p>
"
302,9983336,4913,7769052,banan3&#39;14,true,1,1734032914,1734032914,79276409,79275085,"<p>The error results from not using the field <code>fullName</code> in your native query. It's the same situation as in <a href=""https://stackoverflow.com/questions/76692158/unable-to-find-column-position-by-name-column1-the-column-name-column1-was-not"">Unable to find column position by name: column1 [The column name column1 was not found in this ResultSet</a>. Remove the column from the class or add it to the native query.</p>
"
303,9059972,3226,6746785,gthanop,true,2,1734032489,1734032154,79276374,79275902,"<p>You can use a <code>JLayer</code> for this type of overlay painting, where the events will pass through the label.</p>
<p>The <code>JLayer</code> has two components:</p>
<ol>
<li>The view. This is the component which is wrapped by the <code>JLayer</code>. The <code>JLayer</code> will forward its events to the view. For example in this case we would like the events to pass to the button.</li>
<li>The glass pane. This can be used as a painting area. It is a <code>JPanel</code> and you can use it like any other. Events will pass through it and its descendants. For example in this case we could add the label to the glass pane (<code>JLabel</code>s can accept an <code>Icon</code> along with text, or an <code>Icon</code> by itself).</li>
</ol>
<p>This way you don't have to do the following:</p>
<ol>
<li>Track mouse events. This is already implemented in the button, so you can directly listen for such events (via the <code>ButtonModel</code>).</li>
<li>Paint the <code>Icon</code>. The label will do that for you.</li>
<li>Override preferred size. The <code>JLayer</code> will handle this.</li>
</ol>
<pre><code>import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import javax.swing.BorderFactory;
import javax.swing.ButtonModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JLayer;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

public class MainWithJLayer {
    
    /**
     * Changes the alpha component of the given {@code Color}.
     * @param c
     * @param alpha
     * @return
     */
    public static Color withAlpha(final Color c,
                                  final int alpha) {
        return new Color(c.getRed(), c.getGreen(), c.getBlue(), alpha);
    }
    
    /** A {@code JPanel} which always draws its background color (dishonoring opaque property). */
    private static class AlwaysDrawBackgroundPanel extends JPanel {
        @Override
        protected void paintComponent(final Graphics g) {
            final Color originalColor = g.getColor();
            try {
                final Rectangle clipBounds = g.getClipBounds();
                g.setColor(getBackground());
                g.fillRect(clipBounds.x, clipBounds.y, clipBounds.width, clipBounds.height);
            }
            finally {
                g.setColor(originalColor);
                super.paintComponent(g);
            }
        }
    }
    
    public static void main(final String[] args) {
        SwingUtilities.invokeLater(() -&gt; {
            
//            try {
//                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
//            }
//            catch (final ClassNotFoundException | IllegalAccessException | InstantiationException | UnsupportedLookAndFeelException exception) {
//                System.err.println(&quot;Failed to set system L&amp;F.&quot;);
//            }
            
            final JButton button = new JButton(&quot;always clickable...                                                        ...always clickable&quot;);
            button.addActionListener(e -&gt; System.out.println(&quot;Clicked!&quot;));
            
            final JLabel label = new JLabel(&quot;Label overlay!&quot;, JLabel.CENTER);
            label.setForeground(Color.RED);
            
            final JPanel glassPane = new AlwaysDrawBackgroundPanel();
            glassPane.setLayout(new BorderLayout());
            glassPane.setBackground(withAlpha(Color.BLACK, 0x88)); //new Color(0x88000000,true)
            glassPane.add(label, BorderLayout.CENTER);
            
            final JLayer&lt;JButton&gt; layer = new JLayer&lt;&gt;(button);
            layer.setGlassPane(glassPane);
            glassPane.setOpaque(false); //This is mandatory in order to show the button under the label.
            
            final JPanel contents = new JPanel(new BorderLayout());
            contents.setBorder(BorderFactory.createEmptyBorder(100, 100, 100, 100));
            contents.add(layer, BorderLayout.CENTER);
            
            //Change glass pane visibility when hovering the button:
            final ButtonModel buttonModel = button.getModel();
            buttonModel.addChangeListener(e -&gt; glassPane.setVisible(buttonModel.isRollover()));
            
            final JFrame frame = new JFrame(&quot;Button overlay label&quot;);
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.add(contents);
            frame.pack();
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
        });
    }
}
</code></pre>
<p>Notice that the glass pane (which has the label) is only visible when we hover the button and that the button receives events normally (with or without the label being visible).</p>
<p>There are also several properties of the button and the label (such as margin, border, alignment, text position, icon-text-gap) to help solve icon (and/or text) placement issues between the two components.</p>
<p>Note, the main possible contribution here (assuming it fits your needs) is the suggestion to use a <code>JLayer</code>, since using the <code>ButtonModel</code>'s rollover property was already <a href=""https://stackoverflow.com/questions/79275902/jcomponent-child-doesnt-draw-after-overriding-parent-paintcomponent-function#comment139794402_79275902"">suggested by @Holger</a>.</p>
"
304,2930965,10885,2511197,rec,false,45,1372102877,1372102877,17283721,5193786,"<p>The Spring Framework has a class which allows to recursively search through the classpath:</p>

<pre><code>PathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();
resolver.getResources(""classpath*:some/package/name/**/*.xml"");
</code></pre>
"
458,44736,99757,131433,bmargulies,false,1,1312379181,1312379181,6927463,6927424,"<p>No java does not. It's not a meaningful concept on Java.</p>

<p>As for the discussion of hashCode versus equals, some IDE and style checkers will warn you about mistakes like this, but I don't see that it has anything to do with 'inline'.</p>
"
306,74042,13468,212952,Tomas Narros,false,23,1299244579,1299243834,5194049,5193786,"<p>This is the simplest wat to get the File object to which a certain URL object is pointing at:</p>

<pre><code>File file=new File(url.toURI());
</code></pre>

<p>Now, for your concrete questions:</p>

<blockquote>
  <ul>
  <li>finding all resources in the META-INF ""directory"":</li>
  </ul>
</blockquote>

<p>You can indeed get the File object pointing to this URL</p>

<pre><code>Enumeration&lt;URL&gt; en=getClass().getClassLoader().getResources(""META-INF"");
if (en.hasMoreElements()) {
    URL metaInf=en.nextElement();
    File fileMetaInf=new File(metaInf.toURI());

    File[] files=fileMetaInf.listFiles();
    //or 
    String[] filenames=fileMetaInf.list();
}
</code></pre>

<blockquote>
  <ul>
  <li>all resources named bla.xml
  (recursivly)</li>
  </ul>
</blockquote>

<p>In this case, you'll have to do some custom code. Here is a dummy example:</p>

<pre><code>final List&lt;File&gt; foundFiles=new ArrayList&lt;File&gt;();

FileFilter customFilter=new FileFilter() {
    @Override
    public boolean accept(File pathname) {

        if(pathname.isDirectory()) {
            pathname.listFiles(this);
        }
        if(pathname.getName().endsWith(""bla.xml"")) {
            foundFiles.add(pathname);
            return true;
        }
        return false;
    }

};      
//rootFolder here represents a File Object pointing the root forlder of your search 
rootFolder.listFiles(customFilter);
</code></pre>

<p>When the code is run, you'll get all the found ocurrences at the <code>foundFiles</code> List.</p>
"
307,266709,12046,554431,bestsss,false,5,1299243453,1299243453,5194002,5193786,"<p>MRalwasser, I'd give you a hint, cast the <code>URL.getConnection()</code> to <code>JarURLConnection</code>.
Then use JarURLConnection.getJarFile() and voila! You have the JarFile and you are free to access the resources inside.</p>

<p>The rest I leave to you. </p>

<p>Hope this helps!</p>
"
308,144642,29619,353852,krock,true,25,1299243498,1299242734,5193884,5193786,"<p>There is no way to recursively search through the classpath.  You need to know the Full pathname of a resource to be able to retrieve it in this way.  The resource may be in a directory in the file system or in a jar file so it is not as simple as performing a directory listing of ""the classpath"".  You will need to provide the full path of the resource e.g. '/com/mypath/bla.xml'.</p>

<p>For your second question, getResource will return the first resource that matches the given resource name.  The order that the class path is searched is given in <a href=""http://download.oracle.com/javase/1.5.0/docs/api/java/lang/ClassLoader.html#getResource(java.lang.String)"" rel=""noreferrer"">the javadoc for getResource.</a></p>
"
309,1119690,20482,1108305,M. Justin,true,6,1734030886,1662349531,73604362,73603358,"<p>A &quot;gap&quot; is the period of local (wall clock) time that is skipped over when advancing the clock at the start of daylight saving time.  An &quot;overlap&quot; is the period of local time that is repeated when turning the clocks back at the end of daylight saving time.</p>
<p>The &quot;gap&quot; and &quot;overlap&quot; terms are defined in the class-level Javadoc of the <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/ZonedDateTime.html"" rel=""nofollow noreferrer""><code>ZonedDateTime</code></a> class:</p>
<blockquote>
<p>This class handles conversion from the local time-line of <code>LocalDateTime</code> to the instant time-line of <code>Instant</code>. The difference between the two time-lines is the offset from <code>UTC/Greenwich</code>, represented by a <code>ZoneOffset</code>.</p>
<p>Converting between the two time-lines involves calculating the offset using the rules accessed from the ZoneId. Obtaining the offset for an instant is simple, as there is exactly one valid offset for each instant. By contrast, obtaining the offset for a local date-time is not straightforward. There are three cases:</p>
<ul>
<li>Normal, with one valid offset. For the vast majority of the year, the normal case applies, where there is a single valid offset for the local date-time.</li>
<li>Gap, with zero valid offsets. This is when clocks jump forward typically due to the spring daylight savings change from &quot;winter&quot; to &quot;summer&quot;. In a gap there are local date-time values with no valid offset.</li>
<li>Overlap, with two valid offsets. This is when clocks are set back typically due to the autumn daylight savings change from &quot;summer&quot; to &quot;winter&quot;. In an overlap there are local date-time values with two valid offsets.</li>
</ul>
</blockquote>
<h2>Example</h2>
<p>Let's use your specific example of the <code>America/New_York</code> time zone.  Per <a href=""https://www.timeanddate.com/time/change/usa/new-york-state?year=2022"" rel=""nofollow noreferrer"">timeanddate.com</a>, the daylight saving time changes in New York for 2022 are:</p>
<blockquote>
<h2>Mar 13, 2022 - Daylight Saving Time Started</h2>
<p>When local standard time was about to reach<br />
Sunday, March 13, 2022, <strong>2:00:00</strong> am clocks were turned <strong>forward</strong> 1 hour to<br />
Sunday, March 13, 2022, <strong>3:00:00</strong> am local daylight time instead.</p>
<h2>Nov 6, 2022 - Daylight Saving Time Ends</h2>
<p>When local daylight time was about to reach<br />
Sunday, November 6, 2022, <strong>2:00:00</strong> am clocks were turned <strong>backward</strong> 1 hour to<br />
Sunday, November 6, 2022, <strong>1:00:00</strong> am local standard time instead.</p>
</blockquote>
<p>Therefore, there are no times between 2:00 and 2:59 on March 13 in the New York time zone.  1:59 occurs in standard time.  When that minute ends, no 2:00 hour occurs, and instead the local time jumps to 3:00 daylight time.</p>
<p>Additionally, the times between 1:00 and 1:59 occur twice on November 6: one in daylight time and then one in standard time.</p>
<h3>Java <code>ZonedDateTime</code> example</h3>
<pre class=""lang-java prettyprint-override""><code>ZoneId zone = ZoneId.of(&quot;America/New_York&quot;);

// 2022-03-13T03:15:30-04:00[America/New_York] (no 2:15)
System.out.println(
        ZonedDateTime.of(LocalDateTime.parse(&quot;2022-03-12T02:15:30&quot;), zone)
        .plusDays(1));
</code></pre>
<p>Since 2:15 AM on March 12 doesn't exist and is within a 1-hour gap, the following logic you quoted applies, adding 1 hour to the local time:</p>
<blockquote>
<p>If in a gap, the local date-time will be adjusted forward by the length of the gap.</p>
</blockquote>
<p>Therefore, 3:15 AM is used when adding 1 day to March 11 at 2:15 AM.</p>
<pre class=""lang-java prettyprint-override""><code>ZoneId zone = ZoneId.of(&quot;America/New_York&quot;);

// 2022-11-06T01:15:30-04:00[America/New_York] (First 1:15)
System.out.println(
        ZonedDateTime.of(LocalDateTime.parse(&quot;2022-11-05T01:15:30&quot;), zone)
        .plusDays(1));

// 2022-11-06T01:15:30-05:00[America/New_York] (Second 1:15)
System.out.println(
        ZonedDateTime.of(LocalDateTime.parse(&quot;2022-11-05T01:15:30&quot;), zone)
        .plusDays(1).plusHours(1));
</code></pre>
<p>Since 1:15 AM is during an overlap — 1:15 AM occurs twice on November 6 — the following logic you quoted applies, using the same -04:00 zone offset as 1:15 AM on November 5:</p>
<blockquote>
<p>if the local date-time is in an overlap, then the offset will be retained if possible</p>
</blockquote>
<p>Therefore, adding 1 day to November 5 at 1:15 uses the first 1:15 on November 6.  This is made more evident by the second call, which shows that adding an hour to this timestamp returns the second 1:15 of November 6.  The fact that these are different points on the timeline despite both being 1:15 local time is evident by their differing zone offsets: -04:00 &amp; -05:00.</p>
"
310,322981,335891,642706,Basil Bourque,false,4,1662395256,1662346166,73604140,73603358,"<h1>Political time presents anomalies</h1>
<p><code>ZonedDateTime</code> is <em>political</em> time. Politicians define time zones and set the rules.</p>
<p>Politicians around the world have shown a surprisingly common prediliction for fiddling with these rules. And they do so unpredictably, often with little or no warning.</p>
<p>Politicians can decide that everyone should rise an hour early in the morning, and then in half a year reverse their decision, mandating that people open their shops an hour later — this wacky plan is known as <a href=""https://en.wikipedia.org/wiki/Daylight_saving_time"" rel=""nofollow noreferrer"">Daylight Saving Time (DST)</a>.</p>
<p>The newest fad: Politicians deciding that the people of their jurisdiction should stay on DST year-round. So then the sun is <em>never</em> overhead at noon, defying the definition of &quot;noon&quot;.</p>
<p>Martial victors, colonizers, and occupiers may choose to impose a time zone that suits their home country.</p>
<p>Politicians may change the offset of their jurisdictions to annoy their neighbor(s), or to appease their neighbor(s), as a diplomatic move.</p>
<h2>Spring forward; Fall back</h2>
<p>During any of these anomalies, the hands of the clock must jump ahead or fall back some amount of time, some number of hours-minutes-seconds.</p>
<p>For example, many places in the US observing DST change their clocks twice a year. They jump ahead an hour at 2 AM on a particular day in the Spring. So the offset in use changes an hour, such as <code>America/Los_Angeles</code> changing from an offset of -08:00 to -07:00. Those places later fall back an hour at 2AM on a particular day in the Autumn. The offset in use changes by an hour, such as <code>America/Los_Angeles</code> changing from an offset of -07:00 to -08:00.</p>
<ul>
<li>In the first case, clocks jumping ahead, the hour of <strong>02:00 - 03:00 never exists</strong>, for a 23-hour day.</li>
<li>In the second case, clocks falling back, the hour of <strong>01:00 - 02:00 happens <em>twice</em></strong>, for a 25-hour day.</li>
</ul>
<p>In the first case, when jumping ahead, we skip an hour. So the day is shorter, only 23 hours long. 👉 This skipped hour is what “the gap” refers to in that Javadoc.</p>
<p>In that second case, <strong>when the clock falls back an hour, there is an ambiguity</strong> of how to recognize a time-of-day such as 01:30. Does &quot;01:30&quot; refer to the middle of the <em>first</em> hour occurrence or the middle of the <em>second</em> hour occurrence? 👉 This repeated hour with its ambiguity is what &quot;the overlap&quot; refers to in that Javadoc.</p>
<p>I expect reasonable people could disagree on how best to resolve this ambiguity. The <em>java.time</em> classes, specifically <a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/ZonedDateTime.html"" rel=""nofollow noreferrer""><code>ZonedDateTime</code></a>, has its algorithm for resolving the ambiguity. It is crucial that you understand its chosen scheme so you know how to work with it.</p>
<p><a href=""https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/ZonedDateTime.html"" rel=""nofollow noreferrer"">The Javadoc</a> does cover this. To quote:</p>
<blockquote>
<p>There are three cases:</p>
<ul>
<li><strong>Normal</strong>, with one valid offset. For the vast majority of the year, the normal case applies, where there is a single valid offset for the local date-time.</li>
<li><strong>Gap</strong>, with zero valid offsets. This is when clocks jump forward typically due to the spring daylight savings change from &quot;winter&quot; to &quot;summer&quot;. In a gap there are local date-time values with no valid offset.</li>
<li><strong>Overlap</strong>, with two valid offsets. This is when clocks are set back typically due to the autumn daylight savings change from &quot;summer&quot; to &quot;winter&quot;. In an overlap there are local date-time values with two valid offsets.</li>
</ul>
</blockquote>
<hr />
<p>As a reminder of definitions:</p>
<ul>
<li><em>Offset</em> means merely a number of hours-minutes-seconds ahead of, or behind, the temporal prime meridian of UTC (or GMT).</li>
<li><em>Time zone</em> means much more. A time zone is a named history of the past, present, and future changes to the offset used by the people of a particular region as decided by their politicians.</li>
</ul>
"
311,243942,14797,516433,Lucas,false,0,1734029743,1734029743,79276273,56479242,"<p>You could use an extension script.  If you create a file in the <code>${SDKMAN_DIR}/ext/</code> folder (ie: <code>${SDKMAN_DIR}/ext/sdk-install-then-symlink-cacerts.sh</code>) with the following code:</p>
<pre class=""lang-bash prettyprint-override""><code>#!/bin/bash

source &lt;(sed 's/__sdk_install/__sdk_builtin_install/g' &quot;${SDKMAN_DIR}/src/sdkman-install.sh&quot;)

function __sdk_install() {
  __sdk_builtin_install &quot;$@&quot;
  local exit_code=$?

  if ((exit_code==0)); then
    local java_home
    java_home=&quot;$(__sdk_home &quot;${1}&quot; &quot;${2}&quot;)&quot;
    rm &quot;${java_home}/lib/security/cacerts&quot;
    ln -s &quot;/etc/ssl/certs/java/cacerts&quot; &quot;${java_home}/lib/security/cacerts&quot;
  fi

  return &quot;${exit_code}&quot;
}
</code></pre>
<p>It would replace the pre-packaged <code>cacerts</code> with a symlink to the <code>/etc/ssl/certs/java/cacerts</code> for each new install.</p>
"
312,1658378,2250,1527244,Danyel,false,0,1704900500,1704900500,77794494,56479242,"<p>SDKMAN has predefined post installation hooks but there doesn't seem any way to customize them or add your own. I didn't want to create a new wrapper tool like @PeterMue because it'd cause cognitive load and also the footgun of users forgetting to run that, so my solution was to hook into the shell's prompt mechanism. I installed <code>starship</code> (<a href=""https://starship.rs"" rel=""nofollow noreferrer"">https://starship.rs</a>) and put the <code>eval &quot;$(starship init &lt;shell&gt;)&quot;</code> <em>below</em> SDKMan, and in <code>~/.config/starship.toml</code> I defined a section for a custom command which will be run during prompt generation:</p>
<pre class=""lang-ini prettyprint-override""><code>[custom.java-cacerts]
when = true
shell = &quot;sh&quot;
command = &quot;&quot;&quot;
set -xe
[ -f /etc/ssl/certs/java/cacerts ]
ALL_CACERTS=$(find -P &quot;$SDKMAN_DIR/candidates/java&quot; -name cacerts -type f | grep .)
echo &quot;[java: symlinking cacerts]&quot;
for cacerts in $ALL_CACERTS; do
  mv &quot;$cacerts&quot; &quot;$cacerts.original&quot;
  ln -s /etc/ssl/certs/java/cacerts &quot;$cacerts&quot;
done 2&gt;&amp;1
&quot;&quot;&quot;
</code></pre>
<p>Explanation:</p>
<ul>
<li><code>set -xe</code> sets the <code>e</code> flag (exit when any command errors) and the <code>x</code> flag (log commands to <code>stderr</code>)</li>
<li>Since <code>e</code> flag is set, we can skip the <code>if</code> clause and write the condition at the top. If it fails, the script will short circuit</li>
<li><code>find -P</code> doesn't follow symlinks, so the <code>current</code> symlink is ignored. <code>-type f</code> to only find <code>cacerts</code> which are regular files (no symlinks)</li>
<li><code>find</code> always returns success even when no match was found. Piping that into <code>grep .</code> matches anything and causes a non-zero status when there is no input so the script will stop</li>
<li><code>set -x</code> writes everything to <code>stderr</code>, but <code>starship</code> only captures <code>stdout</code> and ignores stderr, so I use <code>2&gt;&amp;1</code> on the <code>for</code> loop to print those 2 commands to inform the user.</li>
</ul>
<p>This runs very fast and on my machine the prompt delay is almost not noticeable. Also using <code>find</code> rather than a predefined path on <code>$JDK/lib/security/cacerts</code> is more backward compatible as for Java 8 the <code>cacerts</code> is under <code>$JDK/jre/lib/security/cacerts</code>.</p>
"
313,1172012,13,1148977,PeterMue,false,1,1701262972,1701262972,77571391,56479242,"<p>I solves this with a custom zsh function so I just have to run <code>sdkman cacerts ~/.cacerts</code> to symlink all cacerts for all sdkman installed jdks.</p>
<pre><code># sdkman
sdkman() {
    case $1 in
        --help)
            cat &lt;&lt;EOF
Alias for sdk with additional custom functions.

Usage: $0 &lt;subcommand&gt; [candidate] [version]

Additional Commands

    $0 --help               Print this help message
    $0 cacerts [cacerts]    Symlink all java cacerts to a custom location (default: ~/.cacerts)

EOF
            ;;
        cacerts)
            cacerts=&quot;${2:-$HOME/.cacerts}&quot;
            if [[ -f &quot;$cacerts&quot; ]]; then
                for jdk in $(sdk list java | grep installed | sed 's/^.*\| \(.*\)$/\1/g'); do
                    jdkHome=$(sdk home java $jdk)
                    pushd &quot;$jdkHome/lib/security&quot;
                    mv cacerts cacerts.orginal
                    ln -s &quot;$cacerts&quot; &quot;cacerts&quot;
                    popd
                done
            else
                echo &quot;Abort: file $cacerts not found.&quot;
            fi
            ;;
        *)
            sdk &quot;$@&quot;
    esac
}
</code></pre>
"
314,1000314,12580,1015327,JimmyB,false,0,1319745708,1319745708,7921641,7756456,"<p>At runtime you may use <a href=""http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Thread.html#holdsLock%28java.lang.Object%29"" rel=""nofollow"">Thread.holdsLock()</a>.</p>

<p>Have you thought about inheriting from <code>Foo</code>, like <code>SynchronizedFoo</code> and using that in your code while others may still use <code>Foo</code> as needed?</p>
"
459,25350771,21,19167671,Hamza Naceur,false,0,1733953989,1733953469,79273268,72885045,"<p>You should use the PreAuthorize annotation instead.</p>
<pre><code>@PreAuthorize(&quot;hasAuthority('AGNI_OIMIVR')&quot;)
</code></pre>
"
315,95356,10225,259747,Daniel,false,1,1318520693,1318519938,7756614,7756456,"<p>If you want the check to be at compile time, FindBugs and PMD won't do. I would suggest Java's Annotation Processing Tool (<a href=""http://download.oracle.com/javase/6/docs/technotes/guides/apt/GettingStarted.html"" rel=""nofollow"">APT</a>). It will let you create a custom annotation processor that can add checks to the compilation process for uses of your annotated classes and cause compiler warnings or errors if your synchronization requirements are not met. In fact, you could even use it tamper with the code to add the synchronization during the compilation if it isn't already there.</p>

<p>To use the annotation processor you create, you just need to make sure it's on the classpath when you compile your project. No extra automated analysis needed.</p>
"
316,153796,21124,369310,Janick Bernet,false,0,1318519921,1318519921,7756611,7756456,"<p>If you call <code>notify()</code> without a synchronized block around it or the method being synchronized you will get an <code>IllegalMonitorStateExcept</code> (see <a href=""http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Object.html#notify%28%29"" rel=""nofollow"">the documentation</a>). However, doing it is very hacky and should, if at all, only be used for debugging and not in a production setting. </p>
"
317,10730,120285,20394,Mike Samuel,true,6,1318519827,1318519515,7756522,7756456,"<p><a href=""http://findbugs.sourceforge.net/"" rel=""noreferrer"">Findbugs</a> is pretty good at finding <a href=""http://findbugs.sourceforge.net/bugDescriptions.html#IS2_INCONSISTENT_SYNC"" rel=""noreferrer"">inconsistent synchronization</a> so as long as you have some code that synchronizes all accesses to an object, and run findbugs, it should alert you to failures to sync.</p>
<blockquote>
<p>A typical bug matching this bug pattern is forgetting to synchronize one of the methods in a class that is intended to be thread-safe.</p>
<p>You can select the nodes labeled &quot;Unsynchronized access&quot; to show the code locations where the detector believed that a field was accessed without synchronization.</p>
<p>Note that there are various sources of inaccuracy in this detector; for example, the detector cannot statically detect all situations in which a lock is held.  Also, even when the detector is accurate in distinguishing locked vs. unlocked accesses, the code in question may still be correct.</p>
</blockquote>
<p>If that isn't sufficient, you can always annotate with <a href=""http://jcip.net/annotations/doc/net/jcip/annotations/NotThreadSafe.html"" rel=""noreferrer""><code>net.jcip.annotations.NotThreadSafe</code></a> which findbugs recognizes.</p>
<p>From <a href=""http://findbugs.sourceforge.net/manual/annotations.html"" rel=""noreferrer"">Chapter 10. Annotations</a> :</p>
<blockquote>
<p>FindBugs also supports the following annotations:</p>
<ul>
<li>...</li>
<li><code>net.jcip.annotations.NotThreadSafe</code></li>
</ul>
</blockquote>
"
318,23121,532979,57695,Peter Lawrey,true,4,1316770799,1316765413,7526057,7525969,"<p>You can write the files to disk and call <code>javac</code> using System.exec()</p>

<p><strike>Perhaps</strike> its time to updated to Java 6 or 7.</p>
"
319,350198,15680,685923,Ed Staub,false,0,1318003907,1318003907,7689989,7689386,"<p>This is skating way closer to the edge than is prudent.  Unless you can find clear language in the spec as to behavior, I'd avoid anything ambiguous like this.  </p>

<p>Even if it <em>is</em> in the spec, readers of your code won't have done the language lawyering to know, so you'll need to comment it to explain, and they may or may not read the comment.  They may not even consider one of the alternatives - just see one overload that fits, and run with that.  An accident waiting to happen.</p>
"
320,36208,242526,103154,axtavt,true,17,1318005269,1318003049,7689819,7689386,"<p>I guess it's related to bug <a href=""https://bugs.java.com/bugdatabase/view_bug?bug_id=6886431"" rel=""nofollow noreferrer"">#6886431</a>, which seems to be fixed in OpenJDK 7 as well.</p>
<p>The problem is that <a href=""http://java.sun.com/docs/books/jls/third_edition/html/expressions.html#15.12.2.5"" rel=""nofollow noreferrer"">JLS 15.12.2.5 Choosing the Most Specific Method</a>
says that one method is more specific than another one when types of formal parameters of the former are subtypes of formal parameters of the latter.</p>
<p>Since <code>int</code> is not a subtype of <code>Object</code>, neither of your methods is the most specific, thus your invocation is ambiguous.</p>
<p>However, the following workaround is possible, because <code>Integer</code> is a subtype of <code>Object</code>:</p>
<pre><code>public void log(Level logLevel, Object... args) { ... }
public void log(Level logLevel, Integer value, Object... args) { ... } 
</code></pre>
"
321,114991,70819,302139,Edwin Buck,false,2,1318001872,1318001872,7689546,7689386,"<p>Eclipse uses it's own compiler, so what Eclipse does eventually follows what the SUN / Oracle provided compilers does; however, sometimes (like in this case) there are differences.</p>

<p>This could ""go either way"" and probably in Java 6, the issue wasn't addressed in detail.  Since Java has a strong requirement to reduce the number of ""ambiguous"" meanings in its environment (to enforce same behavior across many platforms), I'd imagine that they tightened up (or directly specified) the decided behavior in the 7 release.</p>

<p>You just got caught on the ""wrong"" side of new specification clarification.  Sorry, but I think you'll be writing a bit of this </p>

<pre><code>public void log(Level logLevel, Object... args) {
    if (args != null &amp;&amp; args[0] instanceof Integer) {
      // do something else
    } else {
      // do something
    }
}
</code></pre>

<p>into your new solution.</p>
"
322,1657241,787,1526443,m.semnani,false,-1,1668180350,1668180350,74404706,60502811,"<p>Sometimes the problem is related to the object you want to return as JSON. Maybe you are missing constructors or some methods like getters, and so on. A Lombok @Data annotation on the returning class most probably fix the problem.</p>
"
323,7376373,548,5614823,Mohammed Siddiq,false,1,1641660046,1641660046,70634364,60502811,"<p>In my case, I was working on an existing api that was producing a PDF and had to change the response to JSON. I had forgot remove <code>produces = &quot;application/pdf&quot;</code>from the <code>@GetMapping</code> annotation.</p>
"
324,7066348,2689,5468701,shiva,false,1,1641153258,1641153258,70559269,60502811,"<p>Adding the 'toString()' method in the model class worked for me. (I used @Data Lombok annotation for this)</p>
"
325,12724489,69,9243585,Akshma Mittal,false,4,1622561605,1622561605,67791847,60502811,"<p>I have solved this problem by adding below dependency:</p>
<pre><code>&lt;dependency&gt;
  &lt;groupId&gt;com.fasterxml.jackson.dataformat&lt;/groupId&gt;
  &lt;artifactId&gt;jackson-dataformat-xml&lt;/artifactId&gt;
  &lt;version&gt;2.12.3&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
"
375,5695064,15287,4501804,abaghel,true,5,1734003509,1496993165,44451782,44446312,"<p>From the documentation at <a href=""https://docs.spring.io/spring-boot/reference/features/logging.html#features.logging.console-output"" rel=""nofollow noreferrer"">https://docs.spring.io/spring-boot/reference/features/logging.html#features.logging.console-output</a> :</p>
<blockquote>
<p>you can also specify <code>debug=true</code> in your <code>application.properties</code>.</p>
<p>When the debug mode is enabled, a selection of core loggers (embedded container, Hibernate, and Spring Boot) are configured to output more information.</p>
</blockquote>
"
326,10702953,66,10158686,Maverick D. Aece,false,0,1620729651,1620721020,67482915,60502811,"<p>This error can also occur sometimes when you try to return an entity but not the DTO of the entity which you might have created to act as say, the XMLRootElement for your actual entity, from your RestController method.</p>
<p><strong>Either return nothing (<code>void</code>), or return the instance of the class which is <em>properly annotated</em> from the <code>RestController</code>'s method.</strong></p>
<p><em>I understand that this exception for the OP arose due to his lack of the proper dependency in his <code>pom</code> file. Nevertheless, the trick mentioned above is one of the ways you can counter this problem. Or perhaps, it was only me who had this careless problem.</em> :'D</p>
<p>Your final code for the method can perhaps look something like this:</p>
<pre class=""lang-java prettyprint-override""><code>    @ResponseBody
    @ResponseStatus(HttpStatus.CREATED)
    @PostMapping(value = &quot;/xml&quot;,
            consumes = MediaType.APPLICATION_XML_VALUE,
            produces = MediaType.APPLICATION_XML_VALUE)
    public void addPaymentXml(@RequestBody String paymentXml)
            throws IOException, SAXException {
        paymentService.createPaymentXml(paymentXml);
    }
</code></pre>
"
327,13227065,325,9551861,Jack T,false,0,1734019862,1734019862,79275814,68568234,"<p>I had this problem too, specifically with this error in the console:</p>
<blockquote>
<p>Caused by: java.lang.NoClassDefFoundError:
org/springframework/boot/configurationprocessor/json/JSONException</p>
</blockquote>
<p>Looking further into <a href=""https://stackoverflow.com/users/10511066/javed-alam"">Javed Alam</a>'s <a href=""https://stackoverflow.com/q/68568234/9551861"">answer</a>, I realized that the problem was due to the use of these classes in the imports of my code:</p>
<pre><code>import org.springframework.boot.configurationprocessor.json.JSONArray;
import org.springframework.boot.configurationprocessor.json.JSONException;
import org.springframework.boot.configurationprocessor.json.JSONObject;
</code></pre>
<p>So I put this new dependency in the pom:</p>
<pre><code>    &lt;!-- https://mvnrepository.com/artifact/org.json/json --&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.json&lt;/groupId&gt;
        &lt;artifactId&gt;json&lt;/artifactId&gt;
        &lt;version&gt;20240303&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre>
<p>And replaced the imports with these classes:</p>
<pre><code>import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
</code></pre>
<p>The <code>spring-boot-configuration-processor</code> dependency does not need to be changed/removed.</p>
"
328,14109827,45,10192987,Sumit Basu,false,3,1634907773,1634907773,69677379,68568234,"<p>Please check your project dependency jar or library files included or not. E.g. Spring Boot project, we need to check this on pom.xml file.</p>
<p><strong>Problem I faced:</strong></p>
<pre><code>Error creating bean with name 'xxxxxxx': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class 
</code></pre>
<p><strong>Problem I resolved:</strong>
'xxxxxxx' is in a external library file and 'xxxxxxx' class referring to another 'yyy' class which should be resolved by Spring Webflux dependency.</p>
<p>Then I included
<code>&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-webflux&lt;/artifactId&gt; &lt;/dependency&gt;</code></p>
<p>so that 'yyy' class could be imported by webflux Spring JAR. Then the problem was resolved.</p>
"
329,5051724,151,10511066,Javed Alam,false,9,1627768950,1627768950,68606111,68568234,"<p>I had resolved this issue, Actually, I was using Spring's <strong>&quot;configuration processor&quot;</strong> which is annotation processor used to build (to generate configuration metadata). It's not a module that we can use for dependency. So when I used <strong>JSON-java</strong> that resolve above issue.</p>
<p>This cause given me hint <code>Caused by: java.lang.NoClassDefFoundError: org/springframework/boot/configurationprocessor/json/JSONException</code></p>
<p>Thanks for the post of <a href=""https://github.com/snicoll"" rel=""noreferrer"">Stéphane Nicoll</a>! at <a href=""https://github.com/spring-projects/spring-boot/issues/24244#issuecomment-733655435"" rel=""noreferrer"">GitHub</a></p>
"
330,12418319,33,9046591,Misone,true,0,1734019861,1734019861,79275813,75462076,"<p>This is how you are able to load and read external file properties:</p>
<pre><code>import java.io.InputStream;
import java.util.Properties;

InputStream inputStream = getClass().getClassLoader().getResourceAsStream(&quot;/custom.properties&quot;);
Properties customProperties = new Properties();
try {
    customProperties.load(inputStream);
} catch (IOException e) {
    e.printStackTrace();
    logger.error(&quot;IOException caught while reading properties file: &quot; + e.getMessage());
}

if( customProperties.get(&quot;prop1&quot;) != null )
    boolean prop1 = Boolean.parseBoolean((String) customProperties.get(&quot;prop1&quot;));
</code></pre>
"
331,8077956,98,6088275,Elijah Sink,false,0,1734018227,1734018227,79275726,35278875,"<p>The best way that I've discovered to test broker nacks when publishing messages is to set a queue max-length and set the overflow policy to <code>reject-publish</code>. This causes the broker to <code>nack</code> any messages once that max-length limit has been reached.</p>
<p>See the Rabbit <a href=""https://www.rabbitmq.com/docs/maxlength#definition"" rel=""nofollow noreferrer"">docs</a>.</p>
<blockquote>
<p>The my-pol policy ensures that the two-messages queue contains no more than 2 messages and all additional publishes are sent basic.nack responses as long as the queue contains 2 messages and publisher confirms are enabled.</p>
</blockquote>
<p>I was able to do this easily in the management console:</p>
<p><a href=""https://i.sstatic.net/wXMqedY8.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/wXMqedY8.png"" alt=""adding a policy via rabbitmq management console"" /></a></p>
<p>Note: as of RabbitMQ 3.13.6 this works with both classic and quorum queues.</p>
"
332,7800781,111,5900301,John Sandfort,false,1,1455113712,1455113712,35317544,35278875,"<p>Publishing a message to a nonexistent exchange will cause the publisher confirm callback to receive a nack!</p>
"
333,33395,72828,93448,Derick Bailey,false,0,1454977940,1454977940,35281925,35278875,"<p>you will have to turn off auto-ack, to start with. with that turned on, it will not be possible to nack a message. </p>

<p>after that, you're test setup should include a message consumer that is coded specifically to do what you want, when you want... don't use your real code to test the nack handling. set up a consumer that only does a nack... or one that knows when it receives certain messages, it should nack</p>
"
374,18965720,1792,13840270,DuesserBaest,false,-1,1732691473,1732690917,79229240,79227718,"<p>Try:</p>
<pre><code>(?&lt;=\()[\w.]+\h+in\h+\(:something\)
</code></pre>
<p>See: <a href=""https://regex101.com/r/k33EOe/latest"" rel=""nofollow noreferrer"">regex101</a></p>
<hr />
<p>Explanation:</p>
<ul>
<li><code>(?&lt;= ... )</code>: asserts that to the left of the string there is a
<ul>
<li><code>\(</code>: literal opening parenthesis</li>
</ul>
</li>
</ul>
<p>After this match (capture group 0) what you want:</p>
<ul>
<li><code>[\w.]+</code>: Any number or wordcharacters and dots</li>
<li><code>\h+</code>: followed by some amount of horizontal whitespaces</li>
<li><code>in</code>: a literal &quot;in&quot;</li>
<li><code>\h+</code>: more horizontal whitespaces</li>
<li><code>\(:something\)</code>: and literal &quot;(:something)&quot;</li>
</ul>
"
334,92937,18941,254477,Sled,false,0,1734017810,1733943965,79272902,17124754,"<p>I couldn't find an answer that worked out of the box for this in one-place so this is what I got to work for me:</p>
<pre class=""lang-java prettyprint-override""><code>import java.io.IOException;
import java.util.stream.Stream;

import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.http.HttpHeaders;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.entity.ContentType;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.server.ServerConnector;
import org.eclipse.jetty.servlet.ServletContextHandler;
import org.eclipse.jetty.servlet.ServletHandler;
import org.eclipse.jetty.servlet.ServletHolder;

public class ProgrammaticJetty {

    public static void main(String[] args) throws Exception {
        final Server server = new Server();

        final ServerConnector connector = new ServerConnector(server);
        connector.setPort(8888);
        connector.setIdleTimeout(30000);
        server.addConnector(connector);

        final ServletHandler handler = new ServletHandler();
        handler.addServletWithMapping( new ServletHolder( new HelloWorldServlet() ), &quot;/*&quot; );

        final ServletContextHandler context = new ServletContextHandler(ServletContextHandler.SESSIONS);
        context.setContextPath(&quot;/*&quot;);
        context.setHandler(handler);
        server.setHandler(context);


        server.start();

        final HttpGet getHw = new HttpGet(&quot;http://localhost:8888/&quot;);
        getHw.setHeader(&quot;Cookie&quot;,&quot;foo=bar;name=test&quot;);
        getHw.setHeader(HttpHeaders.ACCEPT, ContentType.TEXT_HTML.getMimeType());

        try( CloseableHttpClient httpClient = HttpClients.createDefault() ){
            try( CloseableHttpResponse response = httpClient.execute(getHw) ){
                response.getEntity().writeTo(System.out);
            }
        }

        server.stop();
    }

}

class HelloWorldServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException {
        response.setContentType(ContentType.TEXT_HTML.getMimeType());
        response.setStatus(HttpServletResponse.SC_OK);
        final String[] name = {null};
        Stream.of(request.getCookies()).filter(cs -&gt; cs.getName().equals(&quot;name&quot;)).findAny().ifPresent(c -&gt; name[0] = c.getValue());
        response.getWriter().println(&quot;&lt;h1&gt;Hello World &quot; + name[0] + &quot;!&lt;/h1&gt;&quot;);
        response.getWriter().close();
    }
}
</code></pre>
<p>Using the dependencies</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;dependencies&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;
    &lt;artifactId&gt;jetty-server&lt;/artifactId&gt;
    &lt;version&gt;9.4.56.v20240826&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;
    &lt;artifactId&gt;jetty-servlet&lt;/artifactId&gt;
    &lt;version&gt;9.4.56.v20240826&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;
    &lt;artifactId&gt;jetty-webapp&lt;/artifactId&gt;
    &lt;version&gt;9.4.56.v20240826&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;
    &lt;artifactId&gt;httpclient&lt;/artifactId&gt;
    &lt;version&gt;4.5.14&lt;/version&gt;
&lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre>
"
335,1218047,7182,1185262,jesse mcconnell,true,11,1733868489,1371334806,17128446,17124754,"<p>I just documented one of our examples here a couple weeks back.  We'll be documenting more of our examples and adding some as we get requests and as folks submit their own...</p>
<p>anyway, this ought to get you going :)</p>
<p><a href=""http://www.eclipse.org/jetty/documentation/current/embedded-examples.html#embedded-one-webapp"" rel=""nofollow noreferrer"">http://www.eclipse.org/jetty/documentation/current/embedded-examples.html#embedded-one-webapp</a></p>
<hr />
<p>The above link is now dead, but it was <a href=""https://web.archive.org/web/20131218142026/http://www.eclipse.org/jetty/documentation/current/embedded-examples.html#embedded-one-webapp"" rel=""nofollow noreferrer"">archived</a>. The actual code in question is up on the <a href=""https://git.eclipse.org/c/jetty/org.eclipse.jetty.project.git/plain/examples/embedded/src/main/java/org/eclipse/jetty/embedded/OneWebApp.java"" rel=""nofollow noreferrer"">Eclipse's Git</a> (<a href=""https://web.archive.org/web/20140105181554/http://git.eclipse.org/c/jetty/org.eclipse.jetty.project.git/plain/examples/embedded/src/main/java/org/eclipse/jetty/embedded/OneWebApp.java"" rel=""nofollow noreferrer"">archived</a>).</p>
"
336,38397972,1,28754248,Yasin Abdulkadir5484,false,0,1734016987,1734016987,79275669,50213523,"<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"" data-babel-preset-react=""false"" data-babel-preset-ts=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
        classpath 'com.google.gms:google-services:3.2.0'
        

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url ""https://jitpack.io"" }
        maven { url ""https://maven.google.com"" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}</code></pre>
</div>
</div>
</p>
"
337,12954118,1,9365518,Chetan Sharma,true,0,1527133274,1527133274,50500557,50213523,"<p>I later found the solution to the problem.
It was due to having ""Uppercase"" letters when naming packages inside the java folder.
It was not showing any parsing or  Error -504 or error - 108 in android version N or higher.
But the package was not able to install properly in android version lower than N.
<em>The problem is that android studio never shows a warning when naming packages in java folder.. like it does in naming resources</em>
ALWAYS NAME PACKAGES INSIDE JAVA FOLDER IN lowercase*</p>
"
338,7698989,13461,5832311,abielita,false,0,1525702324,1525702324,50216321,50213523,"<p>Error 504 is a gateway timeout error and is generally associated with slower internet connections or mobile data networks.You may check the provided methods in this <a href=""http://appslova.com/fix-android-504-error/"" rel=""nofollow noreferrer"">link</a>.</p>

<blockquote>
  <p><strong>Method 1:</strong></p>
  
  <ul>
  <li>Go to Settings>> Application Manager or Apps>> Open “All” apps</li>
  <li>From the list of apps find Google Play store >>Clear Data and Clear Cache</li>
  <li>From the list of apps find Google Service Framework >> Clear Data and Clear Cache</li>
  <li>Now install or update app from Google Play Store</li>
  </ul>
  
  <p><strong>Method 2:</strong></p>
  
  <ul>
  <li>Go to system settings>> Accounts>>Google>>remove your Gmail account</li>
  <li>Now from settings>>Apps>>All> Force stop, Clear data and cache for Google Play Store, Google Service Framework and Download Manager (like in method 1)</li>
  <li>Now again go to settings>> Accounts>>Google>>Add your gmail account</li>
  <li>Restart your android and then accept all the Google terms and 504setup Google settings</li>
  <li>Rerun Google Play Store and update or install your app.</li>
  </ul>
</blockquote>

<p>Hope this helps!</p>
"
339,6203035,92,4832118,mohsen_true,true,0,1734016230,1734016230,79275623,79272152,"<p>Actually I tried a lot and figured out the solution is adding <em>cfg.addResource(&quot;Person.hbm.xml&quot;)</em> statement to HibernateUtil.java:</p>
<pre><code> static {
         Configuration cfg = new Configuration().configure(&quot;hibernate.cfg.xml&quot;);
          cfg.addResource(&quot;Person.hbm.xml&quot;);
          StandardServiceRegistryBuilder builder = new 
          StandardServiceRegistryBuilder()
                            .applySettings(cfg.getProperties());
                    sessionFactory = cfg.buildSessionFactory(builder.build());
            }
</code></pre>
"
340,15081515,31,10884042,user-10884042,false,0,1733930470,1733930470,79272241,79272152,"<p>Apologies, I'm no Hibernate expert, but should that be:</p>
<pre><code>@Entity
public class Person {
</code></pre>
"
359,7013957,52,5375923,vijaya kumar gajula,false,0,1734008591,1733848517,79269002,6390810,"<p>we can use component/service bean name pattern for spring boot factory.</p>
<p>Refer the below code, in which we don't need to use if else or another method, it's just factoryClass which will use Map.</p>
<pre><code>interface PaymentService {

 void processPayment();

}

@Component(&quot;PayPall&quot;)
public class PayPall implements PaymentService {
   
    @Override
    public void processPayment() {
      // Your code
    }
}

@Component(&quot;UPI&quot;)
public class UPI implements PaymentService {
   
    @Override
    public void processPayment() {
      // Your code
    }
}

@Service
@RequiredArgsConsturctor
public class PaymentProvierFactory(){

    @Autowired
    private final Map&lt;String,PaymentService&gt; paymentProivderMap;

    public PaymentService getPaymentService(String paymentServiceName){
    
        retrun paymentProivderMap.get(paymentServiceName);
    }
}
</code></pre>
"
341,7236580,17933,5521607,Olivier Boiss&#233;,false,2,1734015267,1674553782,75219757,64541192,"<p>You can use the method <a href=""https://javadoc.io/doc/org.assertj/assertj-core/3.22.0/org/assertj/core/api/Assertions.html#assertThatExceptionOfType(java.lang.Class)"" rel=""nofollow noreferrer"">assertThatExceptionOfType</a> like this :</p>
<pre class=""lang-java prettyprint-override""><code>assertThatExceptionOfType(SomeException.class)
  .isThrownBy(() -&gt; service.doSomething())
  .withMessageStartingWith(&quot;...&quot;)
  .satisfies(e -&gt; assertThat(e.getSomething()).containsExactly(1, 2, 3, 4));
</code></pre>
<p>If you wan to stay with <code>assertThat</code>, an alternative to the <code>extracting</code> method would be to cast the exception in <code>matches</code> or <code>satisfies</code> method :</p>
<pre class=""lang-java prettyprint-override""><code>var elements = Set.of(1, 2, 3, 4);

assertThat(throwable)
  .isInstanceOf(SomeException.class)
  .hasMessageStartingWith(&quot;...&quot;)
  .matches(e -&gt; ((SomeException) e).getSomething().containsAll(elements);    
</code></pre>
<pre class=""lang-java prettyprint-override""><code>assertThat(throwable)
  .isInstanceOf(SomeException.class)
  .hasMessageStartingWith(&quot;...&quot;)
  .satisfies(e -&gt; {
    SomethingException somethingException = (SomethingException) e;

    assertThat(somethingException.getSomething()).contains(1, 2, 3, 4);
  });  
</code></pre>
"
342,2605852,393,2257038,jamietanna,false,32,1639588296,1639588296,70367676,64541192,"<p>It looks like you're looking for <code>catchThrowableOfType</code>, which allows you to receive the correct class:</p>
<pre class=""lang-java prettyprint-override""><code>import static org.assertj.core.api.Assertions.catchThrowableOfType;

SomeException throwable = catchThrowableOfType(() -&gt; service.doSomething(), SomeException.class);

assertThat(throwable.getSomething()).isNotNull();
</code></pre>
"
343,9282320,113,6893207,dj_1993,false,2,1617474140,1617364174,66918874,64541192,"<p>I'd do something like :</p>
<pre><code>assertThatThrownBy(() -&gt; service.doSomething())
    .isInstanceOf(SomeException.class)
    .hasMessageStartingWith(&quot;SomeException occurred&quot;)
    .isEqualToComparingFieldByField(
        new SomeException(&quot;&quot;, Sets.newHashSet(1,2,3,4)));
</code></pre>
<p>This way you don't have to worry about changing the field name in future because you're not hardcoding it anywhere in the assert statements.</p>
"
344,1407336,7026,1348834,Joel Costigliola,true,21,1603791815,1603760556,64546980,64541192,"<p>There are quite a few variations on <code>extracting</code>, the one you want to use is <a href=""https://www.javadoc.io/static/org.assertj/assertj-core/3.18.0/org/assertj/core/api/AbstractObjectAssert.html#extracting(java.lang.String)"" rel=""noreferrer""><code>extracting(String)</code></a>, ex:</p>
<pre class=""lang-java prettyprint-override""><code>   assertThatThrownBy(() -&gt; service.doSomething())
        .isInstanceOf(SomeException.class)
        .hasMessageStartingWith(&quot;SomeException ... &quot;)
        .extracting(&quot;something&quot;)
        .isEqualTo(1,2,3,4);
</code></pre>
<p>Use <a href=""https://www.javadoc.io/static/org.assertj/assertj-core/3.18.0/org/assertj/core/api/AbstractObjectAssert.html#extracting(java.lang.String,org.assertj.core.api.InstanceOfAssertFactory)"" rel=""noreferrer""><code>extracting(String, InstanceOfAssertFactory)</code></a> to get specialized assertions, so if the value is a collection you can try:</p>
<pre class=""lang-java prettyprint-override""><code>   assertThatThrownBy(() -&gt; service.doSomething())
        .isInstanceOf(SomeException.class)
        .hasMessageStartingWith(&quot;SomeException ... &quot;)
        .extracting(&quot;something&quot;, InstanceOfAssertFactories.ITERABLE)
        .contains();
</code></pre>
<p>You can also try: <a href=""https://www.javadoc.io/static/org.assertj/assertj-core/3.18.0/org/assertj/core/api/AbstractObjectAssert.html#hasFieldOrPropertyWithValue(java.lang.String,java.lang.Object)"" rel=""noreferrer""><code>hasFieldOrPropertyWithValue</code></a></p>
<p><strong>Update:</strong> working example</p>
<pre class=""lang-java prettyprint-override""><code>SomeException throwable = new SomeException(&quot;foo&quot;, Sets.newSet(1, 2, 3, 4));

assertThat(throwable).hasMessageStartingWith(&quot;fo&quot;)
                     .extracting(&quot;something&quot;, InstanceOfAssertFactories.ITERABLE)
                     .containsExactly(1, 2, 3, 4);
</code></pre>
"
345,30309506,1,23227858,Ranjith Muniyappa,false,0,1734013824,1734013679,79275479,47780585,"<p>Explore <em>_super</em> in generated Qtypes.</p>
<pre><code>public abstract class AbstractDao&lt;T extends AbstractEntity, Q extends EntityPath&lt;T&gt;&gt; {

    private final Q qEntity;
    private final QAbstractEntity qAbstractEntity;

    public AbstractDao(Q qEntity, QAbstractEntity qAbstractEntity) {
        this.qEntity = qEntity;
        this.qAbstractEntity = qAbstractEntity;
    }
}
</code></pre>
<p>Usage</p>
<pre><code>@Repository
public class ConcreteDao extends AbstractDao&lt;RealEntity, QRealEntity&gt; {

    private static final QRealEntity qRealEntity =
            QRealEntity.realEntity;

    public ConcreteDao() {
        super(qRealEntity, qRealEntity._super);
    }
}
</code></pre>
"
346,1038596,35943,1045142,Simon Martinelli,true,2,1513149487,1513149487,47787513,47780585,"<p>JB Nizets comment is the answer:</p>

<blockquote>
  <p>No the query needs to be translated to SQL, and executed by the
  database. The database doesn't know and care about your classes and
  methods. All it knows about is its tables and columns. – JB Nizet 10
  hours ago</p>
</blockquote>
"
347,19255478,9483,14072498,Roar S.,true,1,1734013465,1734013465,79275466,79275288,"<p>I believe using primary key from parent in a one-to-one or one-to-zero is an often used approach.</p>
<p>In your case, <code>Attributes</code> may look like this:</p>
<pre><code>@Entity
public class Attributes {

    @Id
    @Column(name = &quot;ATTRIBUTE_ID&quot;)
    private Long id;

    @OneToOne
    @MapsId // establish shared primary key relationship
    @JoinColumn(name = &quot;ATTRIBUTE_ID&quot;)
    private Product product;
</code></pre>
"
348,35609,2060,100912,Travis Schneeberger,false,1,1734010195,1734010195,79275303,69375468,"<p>The following is a solution that avoids deprecated code.</p>
<pre><code>CloseableHttpClient httpclient = HttpClients.custom()
                .setConnectionManager(
                    PoolingHttpClientConnectionManagerBuilder.create()
                        .setTlsSocketStrategy(
                            DefaultClientTlsStrategy(
                                SSLContextBuilder.create()
                                    .loadTrustMaterial(TrustAllStrategy.INSTANCE)
                                    .build(),
                                HostnameVerificationPolicy.BOTH,
                                NoopHostnameVerifier.INSTANCE
                            )
                        )
                        .build()
                )
                .build();
</code></pre>
"
349,133909,27438,335638,ok2c,true,29,1734011631,1632946455,69382828,69375468,"<p>There are several specialized builders in HC 5.1 that can be used to do the same:</p>
<pre><code>CloseableHttpClient httpclient = HttpClients.custom()
        .setConnectionManager(PoolingHttpClientConnectionManagerBuilder.create()
                .setSSLSocketFactory(SSLConnectionSocketFactoryBuilder.create()
                        .setSslContext(SSLContextBuilder.create()
                                .loadTrustMaterial(TrustAllStrategy.INSTANCE)
                                .build())
                        .setHostnameVerifier(NoopHostnameVerifier.INSTANCE)
                        .build())
                .build())
        .build();
</code></pre>
<p>UPDATE: For HC version 5.4 please see <a href=""https://stackoverflow.com/users/100912/travis-schneeberger"">Travis Schneeberger</a> answer.</p>
"
367,6291890,9803,4889267,AlanK,false,1,1581368293,1581367829,60158208,60158172,"<p>Add the following dependency and rebuild your project:</p>

<p>Note that the scope is set to test --</p>

<p><code>java.lang.NoClassDefFoundError</code> is thrown when the class is found at compile time, but not at runtime. So you need to ensure this .jar is available at runtime</p>

<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
    &lt;artifactId&gt;cucumber-java&lt;/artifactId&gt;
    &lt;version&gt;5.1.3&lt;/version&gt;
    &lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>

<p>If you're using Eclipse, make sure that you have the project class path set to include the dependency and that it's built and embedded into the project</p>
"
350,4475926,139,3641057,MatthiasL,false,0,1734011252,1733924949,79271956,19163291,"<p>I had the same error message, with a different start case.
My case : i added a new App.
You then must not use the publisher-id (which is on top level)
but the app-id (which is tricky to get).</p>
<p>The publisher-id seems to be shared by all apps. whereas
InterstitialAd.load() needs an app-id. An app-id now consists of publisher-id+extenion.</p>
<p>To see the app-id procceed as follows:</p>
<ol>
<li>open Google AdMob Console</li>
<li>press the &quot;Apps&quot; icon (this is a 3x3 dots icon)
A list of all your apps will be shown.</li>
<li>in the line for your current app you can see the &quot;App Id&quot;.
This is the one you need.</li>
</ol>
<p><strong>One more thing:</strong> i still had a problem to get things running.
I didnt realize that one needs both an &quot;App Id&quot; (used in Manifest) and an &quot;Ad Unit id&quot;.  The later is used in  InterstitialAd.load(). I simply didnt realize that and manually changed my App id (with a ~ seperator).
But this obviously didnt work, i got a strange &quot;Publisher Data not found&quot; error.</p>
<p>After some time i found that one indeed has to generate at least 1
ad unit id. This is done again inside Google Ad Mob.
Steps are :</p>
<ol>
<li><p>open Google AdMob Console</p>
</li>
<li><p>press the &quot;Apps&quot; icon (this is a 3x3 dots icon)
This will show a tricky small dialog. Stop here.
When you get this small dialog press &quot;view all apps&quot; on the lower right side. This is easy to overlook and you would never get to next step.</p>
</li>
<li><p>once you have the list of all apps, the &quot;ad units&quot; is on the right edge. Press this to create a new ad unit for the app.
If you do not create an &quot;ad unit&quot; you will not get an &quot;add unit id&quot;.</p>
</li>
</ol>
<p>Enjoy.</p>
"
351,17470511,31,12666414,vasu,false,2,1578382890,1578381493,59623834,19163291,"<pre><code>    #if UNITY_ANDROID
    string adUnitId = "" ca-app-pub-8572140050384888/1853336688 ""; //no spaces are allowed before and after admob-id..
</code></pre>

<p>Change to :
        #if UNITY_ANDROID
        string adUnitId = ""ca-app-pub-8572140050384888/1853336688"";</p>

<p><a href=""/questions/tagged/android"" class=""post-tag"" title=""show questions tagged &#39;android&#39;"" rel=""tag"">android</a> <a href=""/questions/tagged/java"" class=""post-tag"" title=""show questions tagged &#39;java&#39;"" rel=""tag"">java</a> <a href=""/questions/tagged/admob"" class=""post-tag"" title=""show questions tagged &#39;admob&#39;"" rel=""tag"">admob</a><a href=""/questions/tagged/unity"" class=""post-tag"" title=""show questions tagged &#39;unity&#39;"" rel=""tag"">unity</a></p>
"
352,342969,4728,1149647,Abdalrahman Shatou,false,14,1491984674,1491984674,43363862,19163291,"<p>In my case, the ad unit id was incorrect in AdMob app management section! There was a <code>~</code> instead of <code>/</code> in the id. I fixed it by viewing the GoogleService info plist and found the correct unit id.</p>

<p>Change:</p>

<pre><code>ca-app-pub-XXXXXXXXXX~XXXXXXXXXX
</code></pre>

<p>to:</p>

<pre><code>ca-app-pub-XXXXXXXXXX/XXXXXXXXXX
</code></pre>
"
353,6546692,304,5062473,hermlon,false,1,1454764112,1454764112,35241388,19163291,"<p>First you have to go to www.admob.com. There sign in with your account. Then klick at ""Monetize"" next to ""Home"". There you have to add your app and set the settings for your advertisement. After that, the website is asking you to send you an e-mail with your ad unit id, you have to put in your strings.xml file instead of the exsample id. Hope this helps. </p>
"
354,1654776,16927,1524624,Aamir,false,0,1403324269,1403324269,24338228,19163291,"<p>Try this format</p>

<pre><code>GADBannerView * bannerView_;

bannerView_ = [[GADBannerView alloc] initWithAdSize:kGADAdSizeBanner];

bannerView_.adUnitID=@""ca-app-pub-5250422073333775/6825580043"";  //Id for Top Banners

bannerView_.rootViewController = self;

[self.view addSubview:bannerView_];

[bannerView_ loadRequest:[GADRequest request]];
</code></pre>
"
355,17551947,696,12732187,Dasun wijesundara,false,0,1734010803,1734010803,79275334,76946275,"<p>For Java 23 here it can be fixed with,</p>
<ol>
<li>Having the latest maven-compiler-version (it's version 3.13.0 at the time of writing this article)</li>
<li>Setup maven.compiler.proc property with full value.</li>
</ol>
<p><a href=""https://dzone.com/articles/using-lombok-library-witk-jdk-23"" rel=""nofollow noreferrer"">https://dzone.com/articles/using-lombok-library-witk-jdk-23</a></p>
"
356,12732167,137,9248399,gokhun celik,false,3,1710463888,1710463888,78164154,76946275,"<p>add those lines into build.gradle file. additionally Java 21 and lombok are compatible.</p>
<pre><code>implementation 'org.projectlombok:lombok:1.18.30'
annotationProcessor 'org.projectlombok:lombok:1.18.30'
</code></pre>
"
357,1010706,1366,1023341,gkephorus,false,3,1693999864,1693999864,77051483,76946275,"<p>I bumped into this as well. I had to add the Maven artifact lombok-mapstruct-binding to the maven-compiler-plugin like so:</p>
<pre><code>&lt;plugin&gt;
    &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
    &lt;version&gt;${compiler-plugin.version}&lt;/version&gt;
    &lt;configuration&gt;
        &lt;annotationProcessorPaths&gt;
            &lt;path&gt;
                &lt;groupId&gt;org.mapstruct&lt;/groupId&gt;
                &lt;artifactId&gt;mapstruct-processor&lt;/artifactId&gt;
                &lt;version&gt;${org.mapstruct.version}&lt;/version&gt;
            &lt;/path&gt;
            &lt;path&gt;
                &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
                &lt;artifactId&gt;lombok&lt;/artifactId&gt;
                &lt;version&gt;${lombok.version}&lt;/version&gt;
            &lt;/path&gt;
            &lt;dependency&gt;
                &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;
                &lt;artifactId&gt;lombok-mapstruct-binding&lt;/artifactId&gt;
                &lt;version&gt;0.2.0&lt;/version&gt;
            &lt;/dependency&gt;
        &lt;/annotationProcessorPaths&gt;
        &lt;compilerArgs&gt;
            &lt;arg&gt;-parameters&lt;/arg&gt;
        &lt;/compilerArgs&gt;
    &lt;/configuration&gt;
&lt;/plugin&gt;
</code></pre>
<p>This solved the issue for me. I read in the <a href=""https://projectlombok.org/changelog"" rel=""nofollow noreferrer"">changelog of lombok</a> I should have done this ever since version v1.18.16 (January 28th, 2021). I was just lucky I guess.</p>
"
358,,,,user22423960,false,0,1692629952,1692629952,76946524,76946275,"<p>I'm not sure if your wording is slightly off here but when you say &quot;variable usersRepository not initialized in the default constructor&quot;, this implies you're creating an instance of UsersDetailsService by calling an empty constructor (no arguments).</p>
<p>If this is the case then usersRepository will be null since it is only initialized in the constructor created from @RequiredArgsConstructor.</p>
<p>If you are expecting the constructor created from @RequiredArgsConstructor to be called automatically through dependency injection and usersRepository is still null then check that you are creating a UsersRepository bean that can be injected. Annotating UsersRepository with @Repository will accomplish this if you are using a JPA repository.</p>
<p>Also, if you are using a JPA repository then ensure you have the @EnableJpaRepositories annotation in your app config, that points to the base package of your repositories.</p>
"
360,25188691,1,19029172,Qazi,false,-1,1651631293,1651631293,72107360,6390810,"<pre><code>public interface MyService {
    public void save(); 
//Code
}

@Component(&quot;One&quot;)
public class MyServiceOne implements MyService {
 //Code
    public void save(){
      System.out.println(&quot;one&quot;);
    }
}

@Component(&quot;Two&quot;)
public class MyServiceTwo implements MyService {
 //Code
    public void save(){
      System.out.println(&quot;two&quot;);
    }
}

public class FatoryClass{
    @Autowired
   //@Qualifier(&quot;One&quot;) //This is your default child class use qualifier or just my sample
    MyService One;
    public MyService setMyservice(int typeId){
      switch(typeId){
          case 1:
            One = new MyServiceTwo();
            break;
          default:
            System.out.println(&quot;Default child instance&quot;);
      }
      return One;
    }
}

@Service
public class serviceComponent{
    @Autowired
    FatoryClass facto;

    public void setFactoryMethod(int typeId){
        facto.setMyService(typeId);
        facto.save();
    }
}
</code></pre>
"
361,14922575,378,10774376,jwsinner,false,0,1634934187,1634934187,69682712,6390810,"<p>Spring won't Autowire beans if there isn't a clear path as to which one it should use at build time. Since the factory doesn't change, you can Autowire your LocationService there and pass it down to your different services. This can get a bit cumbersome if your classes have more than one dependency e.g. services, repos, etc.</p>
<p>If you don't intend on having a lot of dependencies for your &quot;MyService&quot; classes you can do this:</p>
<pre><code>@Component
public class MyServiceFactory(){

    @Autowired
    LocationService locationService;
    
    public static MyService getMyService(String service){
        service = service.toLowerCase();
        switch(service){
            case &quot;one&quot;:
                return new MyServiceOne(locationService);
            case &quot;two&quot;:
                return new MyServiceTwo(locationService);
            case &quot;three&quot;:
                return new MyServiceThree(locationService);
            default:
                return new MyServiceDefault(locationService);
        }
    }
}
</code></pre>
<p>Your MyServiceOne class:</p>
<pre><code>@Service
public class MyServiceOne implements MyService{

    public LocationService locationService;

    public MyServiceOne(LocationService service){
        locationService = service;
    }

    @Override
    public checkStatus(){
        // your code
    }
}
</code></pre>
<p>MyService interface</p>
<pre><code>interface MyService{
    boolean checkStatus();
}
</code></pre>
"
362,7598139,3532,5763690,Radu Ionescu,false,1,1633016188,1633016188,69395098,6390810,"<p>This is a variation of the above answers that creates fresh instances.</p>
<p>If the <code>Service</code> depends only on <code>Spring</code> managed beans.</p>
<pre class=""lang-java prettyprint-override""><code>public interface MyService {
 //Code
}

@Component(&quot;One&quot;)
@Scope(&quot;prototype&quot;)
public class MyServiceOne implements MyService {
 //Code
   public MyServiceOne(Dependency dep){
   ...
   }
}

@Component(&quot;Two&quot;)
@Scope(&quot;prototype&quot;)
public class MyServiceTwo implements MyService {
 //Code
}

public class Factory {
    Map&lt;String,MyService&gt; services;
    ApplicationContext context;
    Dependency dep; 

    public Factory(Map&lt;String, MyService&gt; components, ApplicationContext context, Dependency dep) {
     ...
    }

    MyService service(String type){
        return context.getBean(services.get(type).getClass());
    }
}

@Configuration
public class Config {
       @Bean
       Factory languageFactory(Map&lt;String,Service&gt; map, ApplicationContext context, Dependency dep){
        return new Factory(map,context,dep);
    }
}



</code></pre>
<p>If you want to include custom parameters in the factory method that are not all managed by <code>Spring</code> you can try one of the following sketched below</p>
<ol>
<li>ensure a Bean can be instantiated when first discovered by adding empty constructors</li>
</ol>
<pre><code>@Component(&quot;One&quot;)
@Scope(&quot;prototype&quot;)
public class MyServiceOne implements MyService {
 //Code
   public MyServiceOne(){
   ...
   }

   public MyServiceOne(Dependency dep){
   ...
   }

   public MyServiceOne(Dependency dep, Integer myFactoryValue){
   ...
   }
}

</code></pre>
<ol start=""2"">
<li>Or you manually create them in the configuration to be discovered</li>
</ol>
<pre><code>\\ no longer available in autoscan
public class MyServiceOne implements MyService {
 //Code
   public MyServiceOne(){
   ...
   }

   public MyServiceOne(Dependency dep, Integer myFactoryValue){
   ...
   }
}

@Configuration
public class Config {
       @Bean(&quot;One&quot;)
       @Scope(&quot;prototype&quot;)      
       Service serviceOne(){
            // used only for dynamic discovery
            return new ServiceOne();
       }
       ...

       @Bean
       Factory languageFactory(Map&lt;String,Service&gt; map, ApplicationContext context, Dependency dep){
        return new Factory(map,context,dep);
    }
}

</code></pre>
<p>And both solutions allow you to define your factory method like this</p>
<pre><code>public class Factory {
    ....

    MyService service(String type, Integer someParameter){
        // you provide the parameters for the constructor
        return context.getBean(services.get(type).getClass(),dep,someParameter);
    }
} 
</code></pre>
"
363,1628102,4633,1503163,Sanjay Bharwani,false,4,1629389773,1629389773,68851364,6390810,"<p>I have recently worked on similar requirement where in I wanted to use factory pattern but I was not okay with the if else logic which keeps on growing in future and violates the Single Responsibility Principle.</p>
<p>First step, create an interface and have a getType() method, in the given context it will return &quot;one&quot;, &quot;two&quot; etc, otherwise it can be anything.
This is the common solution most of the people suggested above.</p>
<pre><code>public interface MyService {
    String getType();
    void checkStatus();
}
</code></pre>
<p>Some implementations:</p>
<pre><code>@Component
public class MyServiceOne implements MyService {
    @Override
    public String getType() {
        return &quot;one&quot;;
    }

    @Override
    public void checkStatus() {
      // Your code
    }
}

@Component
public class MyServiceTwo implements MyService {
    @Override
    public String getType() {
        return &quot;two&quot;;
    }

    @Override
    public void checkStatus() {
      // Your code
    }
}

@Component
public class MyServiceThree implements MyService {
    @Override
    public String getType() {
        return &quot;three&quot;;
    }

    @Override
    public void checkStatus() {
      // Your code
    }
}
</code></pre>
<p>And the factory itself as following:</p>
<pre><code>@Service
public class MyServiceFactory {

    @Autowired
    private List&lt;MyService&gt; services;

    public static MyService getService(final String type) {
        return services
       .stream().filter(service -&gt; type.equals(service.getType()))
       .findFirst()
       .orElseThrow(throw new RuntimeException(&quot;Unknown service type: &quot; + type));
        
    }
}
</code></pre>
<p>This solution doesn't require extra Map for storing key value of the instances against the type. This solution is extensible without any further code change, as the factory has List auto wiring, so any future implementation of MyService would be easily work. And hence the Single Responsibility Principle is also ensured.</p>
<p>I have used streams() and predicates as I was using Java 8, for earlier version simple for loop would do the work.</p>
"
364,37461619,1,28257181,Samir Chavan,false,0,1734008565,1734008565,79275218,60158172,"<p>Follow below Steps:-
1: Ensure that the correct Cucumber dependencies are added to your project.
2: Ensure that your build tool (Maven/Gradle) has downloaded the required libraries and added them to the classpath
3. If you are using additional libraries (e.g., Gherkin), ensure they are compatible with the Cucumber version
4. Sometimes, stale or corrupted files in the target or build directory can cause issues
5. If the issue occurs at runtime, ensure the library is bundled correctly or accessible in the environment where the application is running
6: Verify IDE Configuration: If you're using an IDE like IntelliJ IDEA or Eclipse:</p>
"
365,5132745,1,4112366,Priya Kumari,false,0,1661005992,1661005992,73427524,60158172,"<p>In your testrunner.java file , try giving full path of feature file</p>
"
366,4895787,11946,3945473,M.P. Korstanje,false,4,1676936205,1581373604,60159391,60158172,"<blockquote>
<p>I'm learning Cucumber and I'm getting the FeatureParser error</p>
</blockquote>
<p>If you follow the <a href=""https://cucumber.io/docs/guides/10-minute-tutorial/"" rel=""nofollow noreferrer"">10 minute tutorial</a> you'll get an introduction that uses Maven dependency management.</p>
<p>In addition to this tutorial I would strongly urge you to invest time in learning either Maven or Gradle along with Cucumber. Amongst other things these tools will automate your dependency management and this can make your life much easier.</p>
<p>For example:</p>
<p>If you want to use Cucumber with JUnit 4 and annotation based step definitions you would declare this minimal set of dependencies in a Maven <code>pom.xml</code> file.</p>
<pre><code>    &lt;properties&gt;
        &lt;cucumber.version&gt;5.2.0&lt;/cucumber.version&gt;
    &lt;/properties&gt;

    &lt;dependencies&gt;
        &lt;dependency&gt;
            &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
            &lt;artifactId&gt;cucumber-java&lt;/artifactId&gt;
            &lt;version&gt;${cucumber.version}&lt;/version&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;

        &lt;dependency&gt;
            &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
            &lt;artifactId&gt;cucumber-junit&lt;/artifactId&gt;
            &lt;version&gt;${cucumber.version}&lt;/version&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
    &lt;/dependencies&gt;
</code></pre>
<p>By telling Maven what your dependencies are Maven can calculate your transitive dependencies i.e: the dependencies of your dependencies.</p>
<p>This has many advantages. One example would be using the <code>mvn dependency:tree -Dverbose=true</code> command to will list all dependencies. This is much faster and much less error prone then downloading jar files by hand and hoping that you have the right ones.</p>
<pre><code>$ mvn dependency:tree -Dverbose=true 
[INFO] Scanning for projects...
[INFO] 
[INFO] ------------------&lt; cucumber:cucumber-java-skeleton &gt;-------------------
[INFO] Building Cucumber-Java Skeleton 0.0.1
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ cucumber-java-skeleton ---
[INFO] cucumber:cucumber-java-skeleton:jar:0.0.1
[INFO] +- io.cucumber:cucumber-java:jar:5.2.0:test
[INFO] |  +- io.cucumber:cucumber-core:jar:5.2.0:test
[INFO] |  |  +- io.cucumber:cucumber-gherkin:jar:5.2.0:test
[INFO] |  |  +- io.cucumber:cucumber-gherkin-vintage:jar:5.2.0:test
[INFO] |  |  +- io.cucumber:tag-expressions:jar:2.0.4:test
[INFO] |  |  +- io.cucumber:cucumber-expressions:jar:8.3.1:test
[INFO] |  |  +- io.cucumber:datatable:jar:3.3.0:test
[INFO] |  |  +- io.cucumber:cucumber-plugin:jar:5.2.0:test
[INFO] |  |  \- io.cucumber:docstring:jar:5.2.0:test
[INFO] |  \- org.apiguardian:apiguardian-api:jar:1.1.0:test
[INFO] +- io.cucumber:cucumber-junit:jar:5.2.0:test
[INFO] \- junit:junit:jar:4.13:test
[INFO]    \- org.hamcrest:hamcrest-core:jar:1.3:test
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  0.781 s
[INFO] Finished at: 2020-02-10T23:00:14+01:00
[INFO] ------------------------------------------------------------------------
</code></pre>
"
368,6603779,71,5101185,Mitsunori Komatsu,false,0,1673794774,1673794774,75126018,52771309,"<p>I also struggled with the limitation. There are some workarounds <a href=""https://spring.io/blog/2021/09/09/spring-data-jdbc-how-to-use-custom-id-generation"" rel=""nofollow noreferrer"">https://spring.io/blog/2021/09/09/spring-data-jdbc-how-to-use-custom-id-generation</a>, but they're not perfect solutions for me.</p>
<p>I'm developing Spring Data JDBC integration for SQLite and it provides a repository helper class that exposes JdbcAggregateTemplate's <code>insert()</code> and <code>update()</code> APIs (<a href=""https://github.com/komamitsu/spring-data-sqlite#repository-helper-class"" rel=""nofollow noreferrer"">https://github.com/komamitsu/spring-data-sqlite#repository-helper-class</a>). The mechanism isn't SQLite specific, so I think the same way would work although some implementation will be needed.</p>
"
369,26158091,1,19845073,Vikas Yadav,false,0,1664190111,1664190111,73853214,52771309,"<p>I referred to Xianghi's answer above and used it slightly differently:</p>
<pre><code>@Data
@Table
public class TestDataTable implements Persistable&lt;String&gt; {


@Id
String id;

private String name;

@Transient
@JsonIgnore
private boolean newEntity;

@Override
public String getId() {
    return id;
}

public void setNew(boolean newInstance) {
    this.newEntity = newInstance;
}

@Override
@JsonIgnore
public boolean isNew() {
    return newEntity;
}
}

// created new record when we use task.setNew(true) in TestDataTable with String Id.
public Mono&lt;TestDataTable&gt; saveTestData(TestDataTable task) {
    task.setNew(true);

    return testRepository.save(task);
}
</code></pre>
"
370,7519351,59,5711801,xiangzi,false,5,1547699615,1547699145,54229036,52771309,"<p>I found another way to solve this problem although it's a little trouble.</p>

<pre><code>// BaseEntity
public class BaseEntity implements Persistable, Serializable {

    @Id
    String id;

    @Transient
    @JsonIgnore
    private boolean newEntity;

    @Override
    public Object getId() {
        return id;
    }

    public void setNew(boolean newInstance) {
        this.newEntity = newInstance;
    }

    @Override
    @JsonIgnore
    public boolean isNew() {
        return newEntity;
    }
}

// User
User extends BaseEntity
...


// insert
User user = new User();
user.id = ""5bffb39cc5e30ba067e86dff"";
user.setName(""xiangzi"");
user.setNew(true);
userRepository.save(user);


// update
User user = new User();
user.id = ""5bffb39cc5e30ba067e86dff"";
user.setName(""xiangzi2"");
userRepository.save(user);
</code></pre>

<p>When insert needs to add the line <code>user.setNew(true);</code>.</p>

<p>Thanks!</p>

<p>I also added a comment <a href=""https://jira.spring.io/browse/DATAJDBC-282"" rel=""noreferrer"">here</a>.</p>
"
371,25822,81602,66686,Jens Schauder,false,19,1734008262,1539321043,52772648,52771309,"<p>The way to do that with Spring Data JDBC is to register a <code>BeforeSaveEvent</code> <code>ApplicationListener</code> that creates the id and sets it in the entity.</p>
<pre><code>@Bean
public ApplicationListener&lt;BeforeSaveEvent&gt; idSetting() {

    return event -&gt; {

        if (event.getEntity() instanceof LegoSet) {
            
            LegoSet legoSet = (LegoSet) event.getEntity();
            if (legoSet.getId() == null) {
                legoSet.setId(createNewId());
            }
        }
    };
}
</code></pre>
<p>There is an example demonstrating that in the <a href=""https://github.com/spring-projects/spring-data-examples/blob/master/jdbc/basics/src/main/java/example/springdata/jdbc/basics/aggregate/AggregateConfiguration.java"" rel=""nofollow noreferrer"">Spring Data Examples</a></p>
<p>The reason your row wasn't inserted in the table, but you also didn't get an exception is: Spring Data JDBC concluded that the entity already existed since the ID was set and performed an update.
But since it didn't exist the update failed to update any rows, so nothing happened.
It might be worth creating an improvement request to check the update count against 0.</p>
<p><strong>UPDATE</strong></p>
<p>Since version 1.1 <a href=""https://docs.spring.io/spring-data/jdbc/docs/current/api/org/springframework/data/jdbc/core/JdbcAggregateTemplate.html#insert-T-"" rel=""nofollow noreferrer""><code>JdbcAggregateTemplate.insert</code></a> is available allowing you do an insert without any check if an aggregate is new.
You can use that to create a custom method in your repository, if you want, or you can autowire the template wherever you need it and use it directly.</p>
<p>Also with DATAJDBC-438 Spring Data JDBC will throw an exception if an aggregate is saved, resulting in an update but the update updates zero rows so this kind of problem doesn't get unnoticed.</p>
<p><strong>Further Update</strong></p>
<p>There is a <a href=""https://spring.io/blog/2021/09/09/spring-data-jdbc-how-to-use-custom-id-generation"" rel=""nofollow noreferrer"">blog article detailing various ways of generating id values in Spring Data JDBC</a>:</p>
"
372,16269349,15939,11748454,Piotr P. Karwasz,true,1,1734008086,1734008086,79275194,79272299,"<p>The example on the &quot;Getting started&quot; page uses <a href=""https://logging.apache.org/log4j/2.x/manual/json-template-layout.html"" rel=""nofollow noreferrer"">JSON Template Layout</a>.
As most recently-added components, JTL is distributed as a separate Maven module: <code>log4j-layout-template-json</code>.</p>
<p>The exact dependencies you need to use the example configuration are documented in the <a href=""https://logging.apache.org/log4j/2.x/manual/getting-started.html#install-app"" rel=""nofollow noreferrer"">How do I install Log4j Core to run my application?</a>.
Assuming you use <a href=""https://logging.apache.org/log4j/2.x/components.html#log4j-bom"" rel=""nofollow noreferrer""><code>log4j-bom</code> in the dependency management section</a> (which is recommended to prevent mismatched transitive dependencies), you need:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;!-- Logging implementation (Log4j Core) --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;
  &lt;artifactId&gt;log4j-core&lt;/artifactId&gt;
  &lt;scope&gt;runtime&lt;/scope&gt;
&lt;/dependency&gt;

&lt;!-- Log4j JSON-encoding support --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.apache.logging.log4j&lt;/groupId&gt;
  &lt;artifactId&gt;log4j-layout-template-json&lt;/artifactId&gt;
  &lt;scope&gt;runtime&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>
"
373,262968,783352,548225,anubhava,true,4,1732693588,1732693270,79229334,79227718,"<p>You may use this regex in Java:</p>
<pre class=""lang-bash prettyprint-override""><code>(?i)\(((\w+\.)?\w*\hin\h*\(\h*:something\h*\))
</code></pre>
<p>Or in Java:</p>
<pre class=""lang-bash prettyprint-override""><code>final Pattern p = Pattern.compile(
   &quot;(?i)\\(((\\w+\\.)?\\w*\\hin\\h*\\(\\h*:something\\h*\\))&quot; );
</code></pre>
<p>PS: Make sure to use <code>Matcher#find()</code> instead of <code>Matcher#matches()</code> that attempts to match complete input.</p>
<p><a href=""https://regex101.com/r/7ONdI1/1"" rel=""nofollow noreferrer"">RegEx Demo</a></p>
<p><strong>RegEx Details:</strong></p>
<ul>
<li><code>(?i)</code>: Turn on ignore case mode</li>
<li><code>\(</code>: Match literal <code>(</code></li>
<li><code>(</code>: Start capture group #1
<ul>
<li><code>(\w+\.)?</code>: capture group #2 that is an optional match to match 1+ word characters and then a literal <code>.</code></li>
<li><code>\w*</code>: Match 0 or more word characters</li>
<li><code>\h</code>: Match a horizontal whitespace</li>
<li><code>in</code>: Match text <code>in</code></li>
<li><code>\h*</code>: Match 0 or more horizontal whitespaces</li>
<li><code>\(</code>: Match literal <code>(</code></li>
<li><code>\h*</code>: Match 0 or more horizontal whitespaces</li>
<li><code>:something</code>: Match text <code>:something</code></li>
<li><code>\h*</code>: Match 0 or more horizontal whitespaces</li>
<li><code>\)</code>: Match literal <code>)</code></li>
</ul>
</li>
<li><code>)</code>: End capture group #1</li>
</ul>
"
376,2273465,16261,2000323,Andrey,true,1,1624264116,1624264116,68064764,68044249,"<blockquote>
<p>also manually checked the file in sandbox/system/logs/idea.log and the INFO statements are there.... they are just not getting to my IDE console.</p>
</blockquote>
<p>This is expected. The console prints the <strong>standard error/output</strong> stream. And the logger writes logs into the idea.log file.</p>
"
377,1106279,10200,1097600,Sorter,false,0,1733998746,1733998217,79274665,58349787,"<h1>Use option(&quot;multiline&quot;, &quot;true&quot;)</h1>
<p>In the OPs sample, csv is being loaded as json, but If a new json file is loaded which is a multiline file, will cause null values even if the headers are correct.</p>
<pre><code>json_schema = StructType([...])
spark.read.schema(json_schema).option(&quot;multiline&quot;,&quot;true&quot;).json(json_file_path);
</code></pre>
<p>This will help others coming to this question, trying to directly load a json file.</p>
<p>Also ensure, the json is a json array.</p>
"
378,4044256,1,3326013,Qiao,false,0,1728622365,1728622365,79076843,58349787,"<p>I encountered a similar issue recently when reading json file with a shcema. After investigation, I discovered that the root cause was a mismatch between the expected and actual schema. To resolve this, I recommend the following approach:</p>
<ol>
<li>Print out the expected schema for reference.</li>
<li>Load the JSON file into Spark, allowing it to infer the schema automatically.</li>
<li>Compare the inferred schema with the expected one to identify any discrepancies.</li>
</ol>
"
379,28319588,1,21655619,Sampan,false,0,1681639114,1681639114,76027059,58349787,"<p>Not sure if this helps, but while reading a JSON file in spark, make sure that the columns name in your schema and JSON file exactly matches. It will show Null values otherwise.</p>
"
380,3092796,139,2618587,Jaliya Sumanadasa,false,0,1623157394,1623157394,67887530,58349787,"<p>I think this is happening due to a data type mismatch in JSON and defined schema.
as an example, in JSON attribute has &quot;age&quot; with integer but schema has defined &quot;age&quot; with String type. Due to that mismatch, all data get null.</p>
"
381,16876372,181,12203675,Mitchan,false,11,1574551198,1574551198,59013189,58349787,"<p>Figured out the problem: </p>

<p>If there is data in the inputted file that cannot have a schema applied to it, it will return Null for ALL the data in your table. For example: ""1n"" is impossible to convert to integer. If a DataTypes.IntegerType is applied to the column that contains ""1n"", then the whole table with have null values. </p>
"
382,21060814,11,15479240,neshko,false,1,1679515996,1679515882,75816878,75805590,"<p>It turns out that I was missing the following statement:</p>
<pre><code>conn.setRequestProperty(&quot;Accept&quot;, &quot;application/json&quot;);
</code></pre>
<p>After that everything works fine.</p>
<p>Best regards!</p>
"
383,380613,1412,734744,Sameer Naik,false,0,1579484151,1579484151,59816003,59815677,"<p>What you are trying is called screen-scraping technique which is inherently error prone since structure of web pages change often.</p>

<p>It is possible to navigate to URLs that require login and you would need to mimic exactly what browser does in that case i.e. following all redirects, storing hidden variables, setting and re-sending cookies, sending user name, password at right times.</p>

<p>You can take a look at Network Panel in your browser.</p>

<p>I am assuming you are using your own twitter user name and password to login.</p>
"
384,5584931,2178,4425643,CausingUnderflowsEverywhere,false,1,1579492577,1579481402,59815782,59815677,"<p>If a website allows logon using basic authentication, you can add the 'Authorization' header to your URL request.</p>

<p>The following answer already outlines how to add such a header to your request in Java: <a href=""https://stackoverflow.com/a/5137446"">https://stackoverflow.com/a/5137446</a></p>

<p>How ever, social media sites don't support this kind of authentication, and logging in with a person's credentials using a program might even be against terms of service. </p>

<p>If you'd like to receive information about a user in your program, you must request an API from the social media site. This might be a java library used for retrieving information from their site, or a schema that documents how to retrieve information, usually by using a REST API they provide on their web server.</p>

<p>This sort of code won't require the user's login credentials, and will most likely work using a standard called OAUTH2 where your program is authenticated to retrieve information by receiving a login key from the user, by means of them ""connecting"" their account to your service.</p>

<p>Take a look at the Twitter developer's page: <a href=""https://developer.twitter.com/en/docs/basics/getting-started"" rel=""nofollow noreferrer"">https://developer.twitter.com/en/docs/basics/getting-started</a> </p>
"
385,5274755,2696,4211947,Md Shahriar,false,0,1733997024,1733997024,79274583,12574414,"<p>Go to Services and start all these <a href=""https://i.sstatic.net/H3LoHsdO.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/H3LoHsdO.jpg"" alt=""enter image description here"" /></a></p>
"
386,2686440,25,2320751,Michel Souza,false,0,1719356720,1719356378,78669792,12574414,"<p>In my case this happened in SOA (Oracle Weblogic) because the database tablespace was at its limit and in addition the machine's network adapter in OCI was intermittent, it was only resolved after restoring the machine's boot backup from a week ago and extend the tablespace.</p>
<pre><code>Stack simplified
####&lt;Jun 25, 2024 3:20:58 PM BRT&gt; &lt;Warning&gt; &lt;JDBC&gt; &lt;Unknown&gt; &lt;pip02&gt; &lt;[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'&gt; &lt;&lt;anonymous&gt;&gt; &lt;&gt; &lt;0000P1GcDzu1f_OLqix0iY1aUkdg000002&gt; &lt;1719339658829&gt; &lt;BEA-001129&gt; &lt;Received exception while creating connection for pool &quot;mds-soa&quot;: IO Error: The Network Adapter could not establish the connection&gt; 
java.sql.SQLRecoverableException: IO Error: The Network Adapter could not establish the connection
Caused By: oracle.net.ns.NetException: The Network Adapter could not establish the connection
Caused By: java.net.ConnectException: Connection timed out (Connection timed out)
</code></pre>
"
387,7610784,3593,5771669,Serge V.,false,6,1690917445,1690917445,76814597,12574414,"<p>I resolved my issue by simply starting the TNS listener service. It was stopped for some reason. <a href=""https://i.sstatic.net/4lOUA.png"" rel=""noreferrer""><img src=""https://i.sstatic.net/4lOUA.png"" alt=""enter image description here"" /></a></p>
"
388,25649826,11,19417275,DANISH ANSARI,false,1,1656203908,1656203826,72758194,12574414,"<p>IO Error: The Network Adapter could not establish the connection (CONNECTION_ID=iKQM6lBbSLiArrYuDqud8A==)</p>
<p>if you are facing this issue
1- make sure you have downloaded oracle databases like oracle 11g,19c, 21c, or any latest databases.
2- search for services in your computer or type win+r then services.mis then search for oracleservice you will find orcl or xe or any other sid like oracleserviceorcl;</p>
<p>after that you can test your connection using sql developer, sql plus or cmd</p>
"
389,17685655,1,12838648,Tony Shevchenko,false,-2,1584077389,1584077389,60665282,12574414,"<p>Just try to re-create connection. In my situation one of jdbc connection stopped working for no reason. From console sqlplus was working ok. 
It took me 2 hours to realize that If i create the same connection - it works.</p>
"
390,6478770,1642,5016540,thangdc94,true,6,1465653063,1465653063,37764512,37764278,"<p>Try to uncheck ""Compile on save"" setting in the project properties (Build -> Compiling)</p>
"
391,1692034,3957,1554195,tquadrat,false,1,1733996133,1733821222,79267587,79267276,"<p>First we talk here about elements with the <em>same</em> type, inside the <em>same</em> parent element and on the <em>same</em> level. Whether the sequence of these elements in an XML file is relevant depends on file's context.</p>
<p>If we look for example at the XML file for a DocBook document, changing the sequence of the <code>&lt;para&gt;</code> elements will definitely change the sense of the text and then the two versions are no longer equal.</p>
<p>On the other hand, for several configuration files in XML format, the sequence of the elements is not relevant at all.</p>
<p>But the sequence of the attributes for an element is irrelevant in all contexts I know about; it does not make a difference whether you sort them alphatically or by length or not at all, the interpretation is always the same:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;elem attr1=&quot;ab&quot; attr2=&quot;ba&quot; /&gt;
</code></pre>
<p>equals</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;elem attr2=&quot;ba&quot; attr1=&quot;ab&quot; /&gt;
</code></pre>
<p>This means that there won't be any <em>general</em> solution that would be able to determine whether two XML files are semantically equal; if there is currently none for your special type of XML file, you have to create your own.</p>
<hr />
<p>Edit based on the <a href=""https://stackoverflow.com/questions/79267276/check-xml-files-for-equality-ignoring-element-order/79267587#comment139785065_79267587"">comment</a> by the thread opener:</p>
<blockquote>
<p>Yes, I understand. The order of some elements may be relevant and the order of the others - not. But assuming the order of all the elements isn't relevant, then it must be a general solution.</p>
</blockquote>
<p>If the order of the elements does not have any semantically meaning, it would be possible to bring them to a defined order within their immediate parent element – recursively, beginning with the child elements without any further children. Also the attributes must be brought into a defined order and all redundant whitespace needs to be stripped.</p>
<p>Then you can use the string representation of the elements to sort them within their parent.</p>
<p>If you have done that for all levels up to the top, you can compare the string representation of the two XML documents for equality.</p>
<p>But as very few XML formats allow to re-arrange all the elements without changing the meaning <strong>and</strong> even less use cases require the comparison of XML on the document level, I doubt that there is any implementation of this in a library so that it could be used instantly.</p>
"
392,316272,454,632361,Kai K.,false,0,1733995415,1733995415,79274484,8603546,"<p>Wow this question is quite old and none of the answers are marked. So I'll try to explain the problem and to provide another solution.</p>
<p>The problem with OSGi classpaths is, that every bundle has it's own private classloader. That bundle classloader must have the template resources on the classpath and the Velocity classes. If the Velocity classes are provided by another bundle, Velocity's ClasspathResourceLoader will not find the template resources because they are not on that bundle's classpath.</p>
<p>So either you have to</p>
<ol>
<li>ensure that the Velocity's ClasspathResourceLoader is located in the very same classpath as the templates (mentioned by @centic) or</li>
<li>implement and configure a custom ResourceLoader that is able to find the resources (mentioned by @gary-stand-with-ukraine).</li>
</ol>
<p>For the latter option I would choose another approach and would specialize ClasspathResourceLoader to be configured with the explicit class loader instance which is aware of the resources.</p>
"
393,6494862,1,5027772,Luis Diego,false,0,1434708455,1434708268,30935396,8603546,"<p>After 2 days I and a colleague have found the solution   Velocity Engine have for default:   file.resource.loader.class=org.apache.velocity.runtime.resource.loader.FileResourceLoader</p>

<p>Created own class Resource loader like that</p>

<pre><code>public static final class PdfResourceLoader extends ResourceLoader

@Override
public void init(ExtendedProperties configuration)
{
}

@Override
public InputStream getResourceStream(String source) throws ResourceNotFoundException
{
  return getClass().getResourceAsStream(source);
}

@Override
public boolean isSourceModified(Resource resource)
{
  return false;
}

@Override
public long getLastModified(Resource resource)
{
  return 0;
}
}
</code></pre>

<p>set the new context class loader     </p>

<pre><code>Thread.currentThread().setContextClassLoader(PdfResourceLoader.class.getClassLoader());  
    VelocityEngine ve = new VelocityEngine();
</code></pre>

<p>changed the property for default inside the velocity engine  </p>

<pre><code>ve.setProperty(""resource.loader"", ""pdf""); 
ve.setProperty(""pdf.resource.loader.class"",
PdfResourceLoader.class.getName());
ve.init(); 
</code></pre>

<p>Example name path template  </p>

<pre><code>String pathTemplate = ""/templates/yourTemplateName.html"";      
Template t = ve.getTemplate(pathTemplate, ""UTF-8""); 
</code></pre>

<p>That it's</p>
"
394,658880,6046,1354879,Balazs Zsoldos,false,8,1366463200,1342023694,11437049,8603546,"<p>Sadly Velocity is not that OSGi friendly. Therefore you cannot use the built in ClasspathResourceLoader and it is hard to add a custom developed ResourceLoader as well.</p>

<p>I suggest that you should get your template as a Reader in any of the ordinary ways and choose one of the following:</p>

<ul>
<li>Use the VelocityEngine evaulate function if you need to merge the
template rarely (performance does not matter that much)</li>
<li>Create a Template by hand with the inner classes of Velocity</li>
</ul>

<p>The first option can be used if you do not have to merge your templates very often so performance is not a key requirement.</p>

<p>Here is a sample for the second option where the created template object can be reused by calling the merge function on it (expecting that you already got a Reader to your vm file or resource):</p>

<pre><code>RuntimeInstance runtimeInstance = new RuntimeInstance();
runtimeInstance.init();
SimpleNode simpleNode = runtimeInstance.parse(reader, ""nameOfYourTemplateResource"");

Template template = new Template();
simpleNode.init(new InternalContextAdapterImpl(new VelocityContext()), runtimeInstance);
template.setData(simpleNode);

template.merge(...);
...
</code></pre>

<p>To get a reader for the vm file in OSGi you should choose a class that is surely in the same bundle as your vm resource and call SameBundleClass.class.getResourceAsStream... You can transform your stream to writer with InputStreamReader than.</p>

<p>Please note that the example misses some try-catch-finally block.</p>
"
395,149311,7521,361703,Gary - Stand with Ukraine,false,0,1331681142,1331681142,9693749,8603546,"<p>I encountered a similar problem with class loader based templates where I wanted to specify a different root.  I worked around it by subclassing ClasspathResourceLoader.</p>

<pre><code>package my.package;

import java.io.InputStream;
import org.apache.commons.collections.ExtendedProperties;
import org.apache.velocity.exception.ResourceNotFoundException;
import org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader;

public class PrefixedClasspathResourceLoader 
    extends ClasspathResourceLoader
{
    /** Prefix to be added to any names */
    private String prefix = """";

    @Override
    public void init(ExtendedProperties configuration) {
        prefix = configuration.getString(""prefix"","""");
    }

    @Override
    public InputStream getResourceStream(String name)
            throws ResourceNotFoundException 
    {
        return super.getResourceStream(prefix+name);
    }
}
</code></pre>

<p>With the following properties set</p>

<pre><code>resource.loader=myloader
myloader.resource.loader.class=my.package.PrefixedClasspathResourceLoader
myloader.resource.loader.prefix=/velocitytemplates/
</code></pre>

<p>this way if you've got a template called ""index.vm"", velocity will use the classloader to find a resource called ""/velocitytemplates/index.vm""</p>
"
421,25822,81602,66686,Jens Schauder,false,0,1562745135,1562745135,56965890,31602425,"<p>I'm coming here from <a href=""https://stackoverflow.com/questions/56954988/how-to-avoid-memory-overflow-using-high-throughput-java-i-o-stream-from-jdbc-con?noredirect=1#comment100468250_56954988"">How to avoid memory overflow using high throughput JAVA I/O Stream from JDBC connectors?</a> which suggests you are concerned about foot print.</p>

<p>I therefore suggest the following solution which should have a small rate of garbage collection</p>

<pre><code>int[] counter = new int[]{0};

list.stream()
.filter(l -&gt; counter[0]++ % n == 0)
</code></pre>

<p>Of course you need to ensure that your stream isn't parallel.</p>
"
396,179293,15842,411846,centic,false,1,1324598889,1324598889,8611088,8603546,"<p>Two things to verify</p>

<h2>1. Classpath issues</h2>

<p>Make sure you set the classpath of the OSGi bundle via the MANIFEST.MF to include a dot:</p>

<pre><code>Bundle-ClassPath: .
</code></pre>

<p>The dot means to include the root of the bundle in the class-loading hierarchy, where your folder ""velocitytemplates"" likely resides.</p>

<p>And you need to have the Velocity jar-files in the same bundle where your template-files reside, because otherwise you'll get classloading issues as Velocity would reside in a different bundle and thus would not see the ""velocitytemplates"" at all in its classpath.</p>

<h2>2. There is no ""path"" for ClasspathResourceLoader</h2>

<p>ClasspathResourceLoader does not support setting a ""path"", as it uses the Classpath by definition, so either add ""velocitytemplates"" to the Classpath in the OSGi bundle (MANIFESt.MF) or reference the velocity templates with complete path, i.e. ""velocitytemplates/index.vm""</p>
"
397,25696046,1,19456717,Tushar Kumar,false,0,1691710163,1691620259,76871654,10742322,"<p>Written using C++. Stack stores only m values and works fine for all inputs</p>
<pre class=""lang-cpp prettyprint-override""><code>int ackermann(int m, int n) {
    stack&lt;int&gt; s;
    s.push(m);
    while(!s.empty()) {
        m = s.top();
        s.pop();
        if(m == 0) {
            n++;
        }
        else if(n == 0) {
            s.push(--m);
            n = 1;
        }
        else {
            s.push(m-1);
            s.push(m);
            n--;
        }
    }
    return n;
}
</code></pre>
"
398,16471009,101,11900025,Bhuvnesh,false,0,1632026826,1632026826,69240370,10742322,"<p>Well I came here to find the answer of this question. But could not write a code even after looking at the answers. So, I tried it myself and after some struggle built the code.
So, I will give you a hint (because I feel etiquettes here are that the homework questions are not meant to be fully answered).
So you can use a single stack to compute the function without using recursion. Just look at the flow of control in David's answer. You have to use that. Just start a while(1) loop and inside that check for the case your arguments are satisfying. Let the desired block amongst if-else blocks execute.Then push the two latest arguments of ackerman function into the stack. Then at the end of the loop pop them and let the cycle repeat till an end condition is reached where no further arguments of ackermann function are generated. You have to put a for statement inside the while loop to keep checking it. And finally get the final results.
I don't know how much of this is understandable, but I wish I could have some idea to start with. So, just shared the way.</p>
"
399,13935478,442,10062580,Darwin Harianto,false,0,1567653496,1567653496,57797989,10742322,"<p>Written in python, using only 1 array and 1 variable, hope this helps!</p>

<pre><code>def acker(m,n):

    right = [m]
    result = n
    i = 0

    while True:
        if len(right) == 0:
            break

        if right[i] &gt; 0 and result &gt; 0:
            right.append(right[i])
            right[i] -= 1
            result -= 1
            i += 1

        elif right[i] &gt; 0 and result == 0:
            right[i] -= 1
            result = 1

        elif right[i] == 0:
            result += 1
            right.pop()
            i -=1

    return result
</code></pre>
"
400,83736,16627,234593,Kache,false,7,1638949509,1548372650,54356919,10742322,"<p>All the answers posted previously don't properly implement Ackermann.</p>
<pre class=""lang-rb prettyprint-override""><code>def acker_mstack(m, n)
  stack = [m]
  until stack.empty?
    m = stack.pop

    if m.zero?
      n += 1
    elsif n.zero?
      stack &lt;&lt; m - 1
      n = 1
    else
      stack &lt;&lt; m - 1 &lt;&lt; m
      n -= 1
    end
  end
  n
end
</code></pre>
"
401,375745,601,726773,Nick S,false,0,1530231407,1530231407,51092690,10742322,"<p>I couldn't get @LightyearBuzz's answer to work, but I found this Java 5 code from <a href=""https://web.archive.org/web/20160322060819/http://c2.com/cgi/wiki?IteratedAckermannExample"" rel=""nofollow noreferrer"">WikiWikiWeb</a> that worked for me:</p>

<pre><code>import java.util.HashMap;
import java.util.Stack;

public class Ackerman {
  static class  Pair &lt;T1,T2&gt;{
    T1 x; T2 y;
    Pair(T1 x_,T2 y_) {x=x_; y=y_;}
    public int hashCode() {return x.hashCode() ^ y.hashCode();}
    public boolean equals(Object o_) {Pair o= (Pair) o_; return x.equals(o.x) &amp;&amp; y.equals(o.y);}
  }

  /**
   * @param args
   */
  public static int ack_iter(int m, int n) {
    HashMap&lt;Pair&lt;Integer,Integer&gt;,Integer&gt; solved_set= new HashMap&lt;Pair&lt;Integer,Integer&gt;,Integer&gt;(120000);
    Stack&lt;Pair&lt;Integer,Integer&gt;&gt; to_solve= new Stack&lt;Pair&lt;Integer,Integer&gt;&gt;();
    to_solve.push(new Pair&lt;Integer,Integer&gt;(m,n));

    while (!to_solve.isEmpty()) {
      Pair&lt;Integer,Integer&gt; head= to_solve.peek();
      if (head.x.equals(0) ) {
        solved_set.put(head,head.y + 1);
        to_solve.pop();
      }
      else if (head.y.equals(0)) {
        Pair&lt;Integer,Integer&gt; next= new Pair&lt;Integer,Integer&gt; (head.x-1,1);
        Integer result= solved_set.get(next);
        if(result==null){
          to_solve.push(next);
        } 
        else {
          solved_set.put(head, result);
          to_solve.pop();
        }
      }
      else {
        Pair&lt;Integer,Integer&gt; next0= new Pair&lt;Integer,Integer&gt;(head.x, head.y-1);
        Integer result0= solved_set.get(next0);
        if(result0 == null) {
          to_solve.push(next0);
        }
        else {
          Pair&lt;Integer,Integer&gt; next= new Pair&lt;Integer,Integer&gt;(head.x-1,result0);
          Integer result= solved_set.get(next);
          if (result == null) {
            to_solve.push(next);
          }
          else {
            solved_set.put(head,result);
            to_solve.pop();
          }
        }
      }
    }
    System.out.println(""hash size: ""+solved_set.size());
    System.out.println(""consumed heap: ""+ (Runtime.getRuntime().totalMemory()/(1024*1024)) + ""m"");
    return solved_set.get(new Pair&lt;Integer,Integer&gt;(m,n));
  }
}
</code></pre>
"
402,13069613,2392,9443618,H&#233;ctor M.,true,3,1733994848,1521266399,49332996,49289120,"<p>Collision detection and score increase:</p>
<pre><code>public class MainActivity extends AppCompatActivity 
{
   //Layout
   private RelativeLayout myLayout = null;

   //Screen Size
   private int screenWidth;
   private int screenHeight;

   //Position
   private float ballDownY;
   private float ballDownX;

   //Initialize Class
   private Handler handler = new Handler();
   private Timer timer = new Timer();

   //Images
   private ImageView net = null;
   private ImageView ball = null;

   //score
   private TextView score = null;

   //for net movement along x-axis
   public float x = 0;
   public float y = 0;

   //points
   private int points = 0;


   @Override
    protected void onCreate(Bundle savedInstanceState) 
    {
         super.onCreate(savedInstanceState);

         this.setContentView(R.layout.activity_main);
         this.myLayout = (RelativeLayout) findViewById(R.id.myLayout);

         this.score = (TextView) findViewById(R.id.score);

         this.net = (ImageView) findViewById(R.id.net);
         this.ball = (ImageView) findViewById(R.id.ball);

         //retrieving screen size
         WindowManager wm = getWindowManager();
         Display disp = wm.getDefaultDisplay();
         Point size = new Point();
         disp.getSize(size);
         screenWidth = size.x;
         screenHeight = size.y;

         //move to out of screen
         this.ball.setX(-80.0f);
         this.ball.setY(screenHeight + 80.0f);

          //Error here
         /*//Run constantly
         new Handler().postDelayed(new Runnable()
         {
           @Override
           public void run()
           {
              Render();
           }
         }, 100); //100 is miliseconds interval than sleep this process, 1000 miliseconds is 1 second*/

     Thread t = new Thread() {
     @Override
     public void run() {
     try {
        while (!isInterrupted()) {
             Thread.sleep(100);
             runOnUiThread(new Runnable() {
             @Override
             public void run(){Render();}});}
             }catch (InterruptedException e) {}}};

     t.start();

    }

    public void Render()
    {
        changePos();
        if(Collision(net, ball))
        {
          points++; //You dont need findView Textview score for that exists in OnCreate Method
          this.score.setText(&quot;Score:&quot; + points);
        }
    }

    public void changePos() 
    {

        //down
        ballDownY += 10;
        if (ball.getY() &gt; screenHeight) {
        ballDownX = (float) Math.floor((Math.random() * (screenWidth - ball.getWidth())));
        ballDownY = -100.0f;

    }
    ball.setY(ballDownY);
    ball.setX(ballDownX);

      //make net follow finger
      myLayout.setOnTouchListener(new View.OnTouchListener() {
        @Override
        public boolean onTouch(View view, MotionEvent event) {
            x = event.getX();
            y = event.getY();

            if (event.getAction() == MotionEvent.ACTION_MOVE) {
                net.setX(x);
                net.setY(y);
            }
            return true;
        }

    });

    public boolean Collision(ImageView net, ImageView ball)
    {
       Rect BallRect = new Rect();
       ball.getHitRect(BallRect);
       Rect NetRect = new Rect();
       net.getHitRect(NetRect);
       return BallRect.intersect(NetRect);
    }
}
</code></pre>
"
420,1119690,20482,1108305,M. Justin,false,0,1733848796,1733848796,79269019,31602425,"<p>Using the three-argument version of <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/util/stream/IntStream.html#iterate(int,java.util.function.IntPredicate,java.util.function.IntUnaryOperator)"" rel=""nofollow noreferrer""><code>Stream.iterate</code></a> along with index-based list access will achieve the desired result:</p>
<pre class=""lang-java prettyprint-override""><code>List&lt;Integer&gt; result = Stream.iterate(0, i -&gt; i &lt; list.size(), i -&gt; i + n)
        .map(list::get)
        .toList();
</code></pre>
<p>This very closely mimics a classic Java index-based for loop, but using the Stream API instead:</p>
<pre class=""lang-java prettyprint-override""><code>List&lt;Integer&gt; result = new ArrayList&lt;&gt;();
for (int i = 0; i &lt; list.size(); i = i + n) {
   result.add(list.get(i));
}
</code></pre>
"
403,37812,26634,108207,Niklas Rosencrantz,false,-1,1521069790,1521069790,49289150,49289120,"<p>Let me give you an example how I implemented working collision detection in only 10 rows of code. It is not exactly the same problem but it can give you an idea how to manipulate objects based on coordinates. </p>

<pre><code> // update the canvas in order to display the game action
    @Override
    public void onDraw(Canvas canvas) {

        super.onDraw(canvas);
        int xx = 200;
        int yy = 0;
        if (persons != null) {
            synchronized (persons) {
                Iterator&lt;Person&gt; iterate = persons.iterator();
                while (iterate.hasNext()) {
                    Person p = iterate.next();
                    if (p.getImage() != 0) {
                        bitmap = BitmapFactory.decodeResource(getResources(), p.getImage()); //load a character image
                        // Draw the visible person's appearance
                        if(xx &gt; canvas.getWidth())
                            xx = 0;
                        canvas.drawBitmap(bitmap, xx , canvas.getHeight()- bitmap.getHeight() , null);
                        // Draw the name
                        Paint paint = new Paint();
                        paint.setStyle(Paint.Style.FILL);
                        canvas.save();
                        paint.setStrokeWidth(1);
                        paint.setColor(Color.WHITE);
                        paint.setTextSize(50);
                        canvas.drawText(p.name, (float)(xx+0.25*bitmap.getWidth()), (float) (canvas.getHeight() ), paint);
                        xx += bitmap.getWidth()*0.75;
                    }
                }
            }
        }
        canvas.save(); //Save the position of the canvas.
        canvas.restore();
        //Call the next frame.
        invalidate();
    }
}
</code></pre>

<p>In the above code, I just check if <code>xx</code> collides with an array of other images, then I just update <code>xx</code> accordingly. You are welcome to check out my <a href=""http://github.com/montao/adventure"" rel=""nofollow noreferrer"">open source repository</a> with this code. </p>
"
404,9337303,10437,6931119,Witold Kaczurba,false,0,1523122070,1523121394,49709935,49708842,"<p>I am a bit confused with what you are trying to do now.</p>

<p>The code in your post returns ""d"" as a String. 
Did you edit the post so it provides working version?
This is correct:</p>

<pre><code>public static String world(String original){
    return Character.toString(original.charAt(original.length()-1)) ;
}

public static void main(String[] args) {
    String test= ""Hello World"";
    System.out.println(world(test));
}
</code></pre>
"
405,4947846,9716,3982755,Bentaye,false,3,1523129307,1523114665,49708881,49708842,"<p><code>String.charAt</code> returns a <code>char</code> (<a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#charAt-int-"" rel=""nofollow noreferrer"">see API here</a>), so you have 2 options:</p>

<p>Either you want to return a <code>char</code> and you need to change the return type of your method:</p>

<pre><code>public static char world(String original){
    return original.charAt(original.length()-1);
}
</code></pre>

<p>or you want to return a <code>String</code> and you need to change your <code>char</code> to <code>String</code>, using <code>String.valueOf</code> for example (<a href=""https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#valueOf-char-"" rel=""nofollow noreferrer"">see API here</a>)</p>

<pre><code>public static String world(String original){
    return String.valueOf(original.charAt(original.length()-1));
}
</code></pre>
"
406,13069613,2392,9443618,H&#233;ctor M.,false,5,1733994726,1523114576,49708871,49708842,"<p>In Java, <code>String.charAt(int index)</code> returns a character, and <code>int</code> can not be implicitly converted to <code>char</code>.</p>
<p>What you can do is convert your returned character to <code>charAt</code> in <code>String</code>:</p>
<pre><code>public class StringTest
{
    public static void main(String [] args)
    {
        String test= &quot;Hello World&quot;;
        world(test);
    }

    public static String world(String original)
    {
        return Character.toString(original.charAt(original.length() - 1));
    }
}
</code></pre>
<p>Also, an even easier way:</p>
<p>Create empty String and conacatenate with your char.
Automatically this converts char into String since
we are adding an element to a String that in itself
supports strings of these elements that are char:</p>
<pre><code> public static String world(String original)
 {
     return &quot;&quot; + original.charAt(original.length() - 1); 
 }
</code></pre>
"
407,13069613,2392,9443618,H&#233;ctor M.,false,3,1733994287,1521926682,49470101,49469921,"<p><code>distance = Math.sqrt(distance)</code> is wrong:</p>
<pre><code>public static double calculateDistance(double[] array1, double[] array2)
{
    double sum = 0.0;

    for (int i = 0; i &lt; array1.length; i++)
    {
        sum += Math.pow((array1[i] - array2[i]), 2.0);
    }

    return Math.sqrt(sum);
}
</code></pre>
<p>Then</p>
<pre><code>double b[] = {0,0,0};
double c[] = {10,0,0};
double distance = calculateDistance(b, c);
System.out.println(distance);
</code></pre>
"
408,29668162,9,22738127,Gururaj Kashikar,false,-1,1733994231,1733994231,79274414,52954675,"<pre><code>public static void main(String[] args)
{
    int d = 4;
    int m = 2;
    int count = 0;
    int[] s = {2,2,1,3,2};
    if(s.length == 1 &amp;&amp; s[0] == d){
        System.out.println(1);
        return;
    }
    for(int i=0; i &lt; s.length-1; i++){
        if(s[i] + s[i+1] == d){
            count++;
        }
    }
    System.out.println(count);
}
</code></pre>
"
409,14401266,1410,10402819,mettleap,true,1,1540317226,1540316894,52955004,52954675,"<p>In your algorithm (shown below), you are checking the sum before the inner loop has ended:</p>

<pre><code>import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;

import java.util.Scanner;
public class Solution {

public static void main(String args[])
{
  int a[] = new int[1000];
  Scanner s=new Scanner(System.in);
  int sum=0,count=0;
  int n=s.nextInt();
  for(int i=0;i&lt;n;i++)
  {
    a[i]=s.nextInt();
  }
  int m=s.nextInt();
  int d=s.nextInt();
  for(int i=0;i&lt;n;i++){ 
    for(int j=i;j&lt;d+i;j++)
    {
      sum=sum+a[j];
      //THIS CHECK SHOULD BE OUTSIDE THE CURRENT FOR LOOP
      if(sum==m)
      {
        count++;

      }
    }sum=0; 
  }
  System.out.println(count);
}}
</code></pre>

<p>You should be doing it like so,</p>

<pre><code>import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;

import java.util.Scanner;
public class Solution {

public static void main(String args[])
{
  int a[] = new int[1000];
  Scanner s=new Scanner(System.in);
  int sum=0,count=0;
  int n=s.nextInt();
  for(int i=0;i&lt;n;i++)
  {
    a[i]=s.nextInt();
  }
  int m=s.nextInt();
  int d=s.nextInt();
  for(int i=0;i&lt;n;i++){ 
    for(int j=i;j&lt;d+i;j++)
    {
      sum=sum+a[j];
    }

      if(sum==m)
      {
        count++;

      }
    sum=0; 
  }
  System.out.println(count);
}}
</code></pre>

<p>However, even the solution above is missing an edge case. You are initializing your array named a as an array of length 1000 which will introduce bugs in your code. For example consider the following input</p>

<pre><code>5
1 2 1 3 2
2 2
</code></pre>

<p>now since your array a looks something like the following:</p>

<pre><code>1 2 1 3 2 0 0 0 0 ... //till length 1000
</code></pre>

<p>your algorithm will give the following answer as valid answer. when in reality there are none:</p>

<pre><code>1 2 1 3 [2 0] 0 0 0 ... //till length 1000
</code></pre>

<p>So your outer for loop should only go till the (n-d)th element</p>
"
410,10198121,429,7529335,Jose Anibal Rodriguez,false,0,1540316245,1540316245,52954854,52954675,"<p>Try this out,</p>

<pre><code>//n - amount of bars
//s - array of bars (s[i] - weight of each bar)
//d - Ron's birthday
//m - Ron's birthmonth

int answer = 0;
 // iterate bars
for (int k = 0; k &lt; s.length; k += 1) {
     int sum = 0;
     // iterate bars month times
     for (int j = i; j &lt; m + i; j += 1) {
         // count sum of weights month times
         sum += s[j];
     }
     // if counted sum is equal to amount of days
     // then it's +1 to possible ways!
     if (sum == d) {
        answer += 1;
     }
}
</code></pre>
"
419,1119690,20482,1108305,M. Justin,false,1,1733979380,1733849671,79269070,31602425,"<p>Here's a solution using the <a href=""https://openjdk.org/jeps/485"" rel=""nofollow noreferrer"">Stream Gatherers</a> feature in the upcoming Java 24:</p>
<pre class=""lang-java prettyprint-override""><code>List&lt;Integer&gt; result = list.stream().gather(takeNth(n)).toList();
</code></pre>
<pre class=""lang-java prettyprint-override""><code>private static &lt;T&gt; Gatherer&lt;T, ?, T&gt; takeNth(int n) {
    class Count { int count = 0; }
    return Gatherer.ofSequential(
            Count::new,
            Gatherer.Integrator.ofGreedy((state, element, downstream) -&gt; {
                if (state.count++ % n == 0) {
                    return downstream.push(element);
                } else {
                    return true;
                }
            }));
}
</code></pre>
<p>This uses a mutable count as the gatherer's state, and an integrator that increments the count, pushing the element only when <code>count % n == 0</code>.  In other words, this gatherer keeps every nth element and discards the rest.</p>
"
411,9526348,221,7079452,xreyc,false,0,1733991638,1733991638,79274291,78115995,"<p>This might help. I have a project I haven't touched for a while now, and I am getting a lot of errors from the graddle issue. I just recently updated my development environment.</p>
<p>I think the main issue is that Android Studio uses JAVA version 21 by default, but Flutter by default uses version 17.</p>
<p>I just recently installed the latest version of Android Studio Ladybug. I tried to setup the gradle based on the compatibility matrix and also installed different versions of Java SDK version 17, 19 and 21 with environment variables setup JAVA_HOME, <strong>but none of it worked</strong>.</p>
<p>To fix the issue,</p>
<ol>
<li><p>I removed all the environment variables JAVA_HOME.</p>
</li>
<li><p>I installed a previous version of Android Studio that uses JAVA 17 by default to match the default of Flutter. Download this version:</p>
<p><code>Android Studio Jellyfish | 2023.3.1 Patch 2 June 10, 2024</code>
<a href=""https://developer.android.com/studio/archive"" rel=""nofollow noreferrer"">https://developer.android.com/studio/archive</a></p>
</li>
<li><p>Uninstall your Android Studio, then install the newly downloaded version.</p>
</li>
<li><p>To validate that Flutter works file run <code>flutter doctor -v</code></p>
</li>
<li><p>If everything is fine, run</p>
</li>
</ol>
<pre><code>flutter run
</code></pre>
<p>If you get an error,  run the following in order</p>
<pre><code>flutter clean
flutter pub get
flutter upgrade
</code></pre>
<ol start=""6"">
<li>On <code>android/settings.gradle</code> change</li>
</ol>
<pre><code>id &quot;org.jetbrains.kotlin.android&quot; version &quot;1.7.10&quot; apply false
</code></pre>
<p>To</p>
<pre><code>id &quot;org.jetbrains.kotlin.android&quot; version &quot;2.0.0&quot; apply false
</code></pre>
<ol start=""7"">
<li>On `android/gradle/wrapper/gradle-wrapper.properties</li>
</ol>
<pre><code>distributionBase=GRADLE_USER_HOME
distributionPath=wrapper/dists
zipStoreBase=GRADLE_USER_HOME
zipStorePath=wrapper/dists
distributionUrl=https\://services.gradle.org/distributions/gradle-7.6.3-all.zip

</code></pre>
<ol start=""8"">
<li>On <code>android/build.gradle</code> you can optionally remove this</li>
</ol>
<pre><code>buildscript {
    ext.kotlin_version = '1.7.10'
    repositories {
        google()
        mavenCentral()
    }
}
</code></pre>
<p>Here's my setup</p>
<pre><code>allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = &quot;${rootProject.buildDir}/${project.name}&quot;
}
subprojects {
    project.evaluationDependsOn(':app')
}

tasks.register(&quot;clean&quot;, Delete) {fl
    delete rootProject.buildDir
}

</code></pre>
"
412,27643097,51,21099631,Can Arslan,false,0,1719087369,1719087369,78657105,78115995,"<p>Open <code>android/settings.gradle</code></p>
<p>update <code>&quot;org.jetbrains.kotlin.android&quot;</code> version</p>
<p>example:</p>
<pre><code>plugins {
    id &quot;dev.flutter.flutter-plugin-loader&quot; version &quot;1.0.0&quot;
    id &quot;com.android.application&quot; version &quot;7.3.0&quot; apply false 
    id &quot;org.jetbrains.kotlin.android&quot; version &quot;1.9.10&quot; apply false //update version
}
</code></pre>
"
413,30766957,1,23595824,nicole,false,0,1710295319,1710295319,78150883,78115995,"<p>android studio--&gt;setting-&gt;Kotlin Compiler-&gt;select Kotlin version</p>
"
414,6237714,446,4858687,l1qu1d,false,3,1709746398,1709746398,78116362,78115995,"<p>You need to go to your <code>android/build.gradle</code> or <code>android/settings.gradle</code> file, depending on your Flutter project <strong>creation</strong>, and update the Kotlin version.</p>
<p>Make sure to view the link that was given to you by the console: <a href=""https://kotlinlang.org/docs/releases.html#release-details"" rel=""nofollow noreferrer"">https://kotlinlang.org/docs/releases.html#release-details</a>.</p>
<p>Depending on when you made your Flutter project, there are 2 different answers.</p>
<h2>Note</h2>
<p>You might have to try different versions of Kotlin to figure out which version works with your project. As of now, I wouldn't go any higher than <code>version 1.9.10</code> as there are known issues with versions that are higher in Flutter.</p>
<p>You can find out more here: <a href=""https://github.com/flutter/flutter/issues/144566"" rel=""nofollow noreferrer"">https://github.com/flutter/flutter/issues/144566</a>.</p>
<h2>Flutter project before version <code>3.16</code> and haven't migrated.</h2>
<ol>
<li>Open <code>android/build.gradle</code>.</li>
<li>Update the version.</li>
<li>Run <code>flutter clean</code>.</li>
<li>Open <code>Android Studio</code> and let it do the <code>gradle sync</code>.</li>
<li>If you have any <code>build_runners</code>, re-run them.</li>
<li>Run your build, debug, release, etc. and you shouldn't see those errors.</li>
</ol>
<pre><code>buildscript {
    ext.kotlin_version = '1.9.10' // Update version on this line!
    repositories {
        google()
        mavenCentral()
    }
</code></pre>
<h2>Flutter created or after version <code>3.16</code>.</h2>
<ol>
<li>Open <code>android/settings.gradle</code>.</li>
<li>Update the version.</li>
<li>Run <code>flutter clean</code>.</li>
<li>Open <code>Android Studio</code> and let it do the <code>gradle sync</code>.</li>
<li>If you have any <code>build_runners</code>, re-run them.</li>
<li>Run your build, debug, release, etc. and you shouldn't see those errors.</li>
</ol>
<pre><code>plugins {
    id &quot;dev.flutter.flutter-plugin-loader&quot; version &quot;1.0.0&quot;
    id &quot;com.android.application&quot; version '8.3.0' apply false
    id &quot;org.jetbrains.kotlin.android&quot; version &quot;1.9.10&quot; apply false // Update version on this line!
    id &quot;com.google.gms.google-services&quot; version &quot;4.3.15&quot; apply false
    id &quot;com.google.firebase.crashlytics&quot; version &quot;2.8.1&quot; apply false
}
</code></pre>
<h2>Want to migrate?</h2>
<p>If you need or want to migrate your Flutter gradle, follow the instructions at: <a href=""https://docs.flutter.dev/release/breaking-changes/flutter-gradle-plugin-apply"" rel=""nofollow noreferrer"">https://docs.flutter.dev/release/breaking-changes/flutter-gradle-plugin-apply</a>.</p>
"
415,9692453,1,17749481,Laszlo voros,false,0,1733986862,1733986862,79274113,26388465,"<p>What I experienced is that on MSSQLSERVER I created multiple java threads which shared the same Connection object, one of the threads created a temporary table with an identity column, then the threads read different parts of the table (by filtering the identity column) and it worked IN PARALLEL. The same method did not work on Oracle in parallel just in consecutive order arranged by the server, though in that case threads with different instance of Connection objects were able to run select queries on the same table (not temporary) in parallel. So the answer is that it depends on the database type.</p>
"
416,4802130,586,3878472,jweberhard,false,2,1413463172,1413463172,26404707,26388465,"<p>By the use of the semaphore, you understand the JDBC rule that a connection should only be in use by a single thread at a time.  However, there are other threads that you need to be aware of, namely the garbage collector thread. </p>

<p>In this case, you need to close all the statement objects that are created before releasing the semaphore.  If you don't close the statement objects, they will be closed by the garbage collector thread at an indeterminate time, causing unusual behavior on the connection. </p>

<p>So, before you prepare a new statement object, you need to close the old one.</p>

<hr>

<p><strong>statement.close()</strong></p>

<p>statement =
            connection
                .prepareStatement(""SELECT COUNT(<code>ID</code>) FROM <code>Missile</code> WHERE <code>WarName</code> = ?"");</p>

<hr>

<p>At the end you need to close the statement. </p>

<hr>

<p>stats[5] = res.getInt(1);</p>

<p><strong>statement.close()</strong></p>

<hr>

<p>You may want to get in the practice of running ""findbugs"" on your code.  I think that may have spotted the problem of not closing the Statement object. </p>
"
417,2072360,1931,1846516,DeepInJava,true,2,1413394485,1413394485,26388604,26388465,"<p>Basically you are positioning the cursor before the first row and then requesting data. You need to move the cursor to the first row.</p>

<p>So first call <code>result.next();</code> </p>
"
418,16068202,61,11597278,Vladimir Abakumov,false,6,1559634192,1559631484,56438826,55106525,"<p>First of all you need to install the self-signed SSL .cer file in the device Security Settings.
Then you need to add a <a href=""https://developer.android.com/training/articles/security-config.html"" rel=""noreferrer"">network_security_config.xml</a> and add it in your manifest.</p>

<pre><code>android:networkSecurityConfig=""@xml/network_security_config""
</code></pre>

<p>There are several ways to configure the network security:<a href=""https://android-developers.googleblog.com/2016/07/changes-to-trusted-certificate.html"" rel=""noreferrer"">ways to trust certificates</a>.
I think the best way is trusting custom CAs only for debugging:</p>

<pre><code>&lt;network-security-config&gt;  
  &lt;debug-overrides&gt;  
       &lt;trust-anchors&gt;  
            &lt;!-- Trust user added CAs while debuggable only --&gt;
            &lt;certificates src=""user"" /&gt;  
       &lt;/trust-anchors&gt;  
  &lt;/debug-overrides&gt;  
</code></pre>

<p></p>

<p>But you can also just always trust user added CAs:</p>

<pre><code>&lt;network-security-config&gt;
&lt;base-config&gt;
    &lt;trust-anchors&gt;
        &lt;certificates src=""system""/&gt;
        &lt;certificates src=""user""/&gt;
    &lt;/trust-anchors&gt;
&lt;/base-config&gt;
</code></pre>

<p></p>

<p>Or you can specify wich certificates are trusted, <a href=""https://medium.com/@johnmarktagle/using-self-signed-ssl-in-android-nougat-6d59593a3b6f"" rel=""noreferrer"">here the marvelous description</a></p>
"
422,15675758,1,11311057,mimi,false,-1,1554376837,1554375618,55514269,31602425,"<p>Can you try this</p>

<pre><code>employees.stream()
.filter(e -&gt; e.getName().charAt(0) == 's')
.skip(n-1)
.findFirst()
</code></pre>
"
425,1674243,11022,1553537,Giorgi Tsiklauri,false,1,1629825694,1629825372,68911542,68911336,"<p><code>ArrayList&lt;E&gt;</code> is not synchronized / thread-safe, that's why.</p>
<p>You can use synchronized list, as:</p>
<pre class=""lang-java prettyprint-override""><code>List&lt;Integer&gt; data = Collections.synchronizedList(new ArrayList&lt;&gt;());
IntStream.range(0,100).parallel().forEach(data::add);
System.out.println(data.size());
</code></pre>
<p>or <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/stream/Stream.html#forEachOrdered(java.util.function.Consumer)"" rel=""nofollow noreferrer"">forEachOrdered</a>, as:</p>
<pre class=""lang-java prettyprint-override""><code>List&lt;Integer&gt; data = new ArrayList&lt;&gt;();
IntStream.range(0,100).parallel().forEachOrdered(data::add);
System.out.println(data.size());
</code></pre>
<p>as it's documentations says, that:</p>
<blockquote>
<p>the action may be performed in whatever thread the library chooses.</p>
</blockquote>
"
426,9706403,1,8252019,murat acar,false,0,1629825253,1629825253,68911519,68911336,"<p>For example you can use synchronizedCollection(). <a href=""https://www.baeldung.com/java-synchronized-collections"" rel=""nofollow noreferrer"">This</a> will help you about that.</p>
"
427,4497436,20173,3656904,talex,false,3,1629824711,1629824711,68911390,68911336,"<p>Because <code>ArrayList</code> is not thread safe.</p>
<p>When two thread try to increment that counter simultaneously, one of them overwrite result of other.</p>
<p>Try to do it with threadsafe collection an you will be fine.</p>
"
428,24276511,1,18223746,sproshchaev,false,0,1733975037,1733856892,79269434,58375169,"<p>In my project, I configured a connection pool in Hibernate as follows: added dependencies to build.gradle and configured the settings in persistence.xml:</p>
<p>build.gradle:</p>
<pre><code>dependencies {
    implementation 'org.hibernate:hibernate-hikaricp:6.6.3.Final'
    implementation 'com.zaxxer:HikariCP:6.2.1'
}
</code></pre>
<p>persistence.xml:</p>
<pre><code>&lt;properties&gt;
    &lt;property name=&quot;hibernate.hikari.minimumIdle&quot; value=&quot;5&quot;/&gt;
    &lt;property name=&quot;hibernate.hikari.maximumPoolSize&quot; value=&quot;20&quot;/&gt;
    &lt;property name=&quot;hibernate.hikari.idleTimeout&quot; value=&quot;30000&quot;/&gt;
    &lt;property name=&quot;hibernate.hikari.connectionTimeout&quot; value=&quot;30000&quot;/&gt;
&lt;/properties&gt;
</code></pre>
"
429,27998529,1,21383262,Logesh Selvaraj,false,0,1709494503,1678628465,75713514,58375169,"<pre><code>&lt;property name=&quot;hibernate.connection.pool_size&quot; value=&quot;10&quot; /&gt;
</code></pre>
<p>add this code (connection pool code) in persistence.xml file.</p>
"
430,5303869,639,4232523,Hadi Moloodi,false,1,1571051328,1571050969,58375426,58375169,"<p>It is just a warning stating that you are using a built_in connection pool which is not a suitable solution in the production environment, you should use the application server connection pool in the production environment. depending on your application server you can setup database connection inside your application server then configure hibernate to use that connection.
But if you want to solve this problem without configuring the application server you can see <a href=""https://stackoverflow.com/questions/2067526/hibernate-connection-pool"">this</a>.</p>
"
431,23823578,289,17830956,sathish,false,0,1733972065,1733927953,79272104,53577042,"<ul>
<li>Hover over in Runner class <code>import io.cucumber.junit.Cucumber;</code></li>
<li>Click on &quot;Organize imports&quot; Suggestion.</li>
<li>This should remove the failure underline.</li>
</ul>
"
432,2233181,3753,1970299,Mehdi,true,12,1543723938,1543723938,53577331,53577042,"<p>You have two options</p>

<p><strong>1- change your folder structure:</strong></p>

<pre><code>src
  |
  test
     |
     your-package
                |
                YourClass
</code></pre>

<p><strong>2- You can remove the scope test from the dependency as follows:</strong></p>

<pre><code>&lt;dependency&gt;
     &lt;groupId&gt;info.cukes&lt;/groupId&gt;
     &lt;artifactId&gt;cucumber-junit&lt;/artifactId&gt;
     &lt;version&gt;1.2.5&lt;/version&gt;
 &lt;/dependency&gt;
</code></pre>
"
433,10097423,13,7462366,Rashid Saleem,false,-1,1543755679,1543721149,53577082,53577042,"<p>You need these imports:</p>

<pre><code>import cucumber.api.CucumberOptions;
import cucumber.api.junit.Cucumber;
import org.junit.runner.RunWith;
</code></pre>
"
434,401843,101552,768644,rzwitserloot,true,5,1733971481,1733919432,79271691,79271443,"<p>If the question is: Does it <em>matter</em>, does the order of annotations make a difference, the answer is an obvious no. ChatGPT is wrong, and that kind of question is a very bad one to ask ChatGPT <sup>1</sup></p>
<p>If the question is: Should one, that's a style/opinion question and thus not appropriate for SO.</p>
<p>What can matter is the order in which Annotation Processors run. This order is not decided by the order of your annotations, and not even by the order of your <code>-proc:</code> command line options. It's more or less arbitrary.</p>
<p>In cases like using lombok and mapstruct together, where order does matter (lombok has to run first), mapstruct and lombok try to work together to figure out the problematic situation where mapstruct arbitrarily runs first, and have MS delay itself to the next round to restore the proper order.</p>
<hr />
<p>[1] The thing you need to know about LLMs is that they basically keep searching until an answer arrives. They aren't capable of telling you they don't know. If they don't know, they end up fabricating an answer out of whole cloth, and it'll <em>look</em> authoritative even when it is utter fabulation - and that's just a fraction of a percentage of all there is to know about hallucinations. This is <em>extremely</em> oversimplified; just be aware that 'ChatGPT told me something' doesn't mean that's correct, especially when you ask an objective question that nobody asked yet on the internet.</p>
"
435,3990483,8526,3289590,Dimuthu,false,0,1733971157,1733971157,79273674,63254537,"<p>This is the PDFBox conversion of the accepted answer</p>
<pre><code>private static void drawBezierConnectedLines(PDPageContentStream contentStream,
                                             PDFPoint[] points, double smoothFactor) throws Exception {

    contentStream.moveTo(points[0].X, points[0].Y);

    for (int i = 0; i &lt; points.length - 2; i++)
    {
        PDFPoint[] pts = computeBezierConnectedLines(points[i], points[i + 1], points[i + 2],
                smoothFactor, i == 0, i == points.length - 3);
        switch (pts.length)
        {
            case 2: // Intermediate/last section - straight lines
                contentStream.lineTo(pts[0].X, pts[0].Y);
                contentStream.lineTo(pts[1].X, pts[1].Y);
                break;
            case 3: // First section - straight lines
                contentStream.lineTo(pts[0].X, pts[0].Y);
                contentStream.lineTo(pts[1].X, pts[1].Y);
                contentStream.lineTo(pts[2].X, pts[2].Y);
                break;
            case 4: // Intermediate/last section
                contentStream.lineTo(pts[0].X, pts[0].Y);
                contentStream.curveTo(pts[1].X, pts[1].Y, pts[1].X, pts[1].Y, pts[2].X, pts[2].Y);
                contentStream.lineTo(pts[3].X, pts[3].Y);
                break;
            case 5: // First section
                contentStream.lineTo(pts[0].X, pts[0].Y);
                contentStream.lineTo(pts[1].X, pts[1].Y);
                contentStream.curveTo(pts[2].X, pts[2].Y, pts[2].X, pts[2].Y, pts[3].X, pts[3].Y);
                contentStream.lineTo(pts[4].X, pts[4].Y);
                break;
        }
    }
}

private static PDFPoint[] computeBezierConnectedLines(PDFPoint pt1, PDFPoint pt2, PDFPoint pt3,
                                                      double smoothFactor,
                                                      boolean isFirstSection, boolean isLastSection) {
    PDFPoint[] outputPoints = null;

    if (smoothFactor &gt; 0.5) {
        smoothFactor = 0.5; // Half line maximum
    }
    if (((pt1.X == pt2.X) &amp;&amp; (pt2.X == pt3.X)) || // Vertical lines
            ((pt1.Y == pt2.Y) &amp;&amp; (pt2.Y == pt3.Y)) || // Horizontal lines
            (smoothFactor == 0)) {
        if (!isFirstSection) {
            pt1 = computeIntermediatePoint(pt1, pt2, smoothFactor, false);
        } if (!isLastSection) {
            pt3 = computeIntermediatePoint(pt2, pt3, smoothFactor, true);
        } if (isFirstSection) {
            outputPoints = new PDFPoint[] { pt1, pt2, pt3 };
        } else {
            outputPoints = new PDFPoint[] { pt2, pt3 };
        }
    } else {
        PDFPoint startPoint = new PDFPoint(pt1);
        if (!isFirstSection) {
            startPoint = computeIntermediatePoint(pt1, pt2, smoothFactor, false);
        }
        PDFPoint firstIntermediaryPoint = computeIntermediatePoint(pt1, pt2, smoothFactor, true);
        PDFPoint secondIntermediaryPoint = new PDFPoint(pt2);
        PDFPoint thirdIntermediaryPoint = computeIntermediatePoint(pt2, pt3, smoothFactor, false);
        PDFPoint endPoint = new PDFPoint(pt3);
        if (!isLastSection) {
            endPoint = computeIntermediatePoint(pt2, pt3, smoothFactor, true);
        }

        if (isFirstSection) {
            outputPoints = new PDFPoint[] { startPoint, firstIntermediaryPoint, secondIntermediaryPoint, thirdIntermediaryPoint, endPoint };
        } else {
            outputPoints = new PDFPoint[] { firstIntermediaryPoint, secondIntermediaryPoint, thirdIntermediaryPoint, endPoint };
        }
    }
    return outputPoints;
}


private static PDFPoint computeIntermediatePoint(PDFPoint pt1, PDFPoint pt2,
                                                 double smoothFactor, boolean isEndLocation)
{
    if (isEndLocation) {
        smoothFactor = 1 - smoothFactor;
    }

    PDFPoint intermediate = new PDFPoint();
    if (pt1.X == pt2.X) {
        intermediate.X = pt1.X;
        intermediate.Y = (float) (pt1.Y + (pt2.Y - pt1.Y) * smoothFactor);
    } else {
        intermediate.X = (float) (pt1.X + (pt2.X - pt1.X) * smoothFactor);
        intermediate.Y = (intermediate.X * (pt2.Y - pt1.Y) + (pt2.X * pt1.Y - pt1.X * pt2.Y)) / (pt2.X - pt1.X);
    }

    return intermediate;
}

static class PDFPoint {

    float X;
    float Y;

    PDFPoint(PDFPoint point) {
        this.X = point.X;
        this.Y = point.Y;
    }

    PDFPoint(float X, float Y) {
        this.X = X;
        this.Y = Y;
    }

    PDFPoint() {
    }
}
</code></pre>
"
436,251246,5814,528481,iPDFdev,true,2,1596804603,1596698962,63278788,63254537,"<p>---A quick &quot;solution&quot; is to use round line joins instead of miter joins (the default) --- it seems that I missed this.</p>
<p>The charts in your sample probably use curve interpolation and this question and answers might help you: <a href=""https://stackoverflow.com/questions/17425763/how-does-polyline-simplification-in-adobe-illustrator-work"">How does polyline simplification in Adobe Illustrator work?</a></p>
<p>The code below shows how to transform a list of lines into Bezier connected lines (it's C# but it can be converted to Java with minimal changes):</p>
<pre><code>/// &lt;summary&gt;
/// Draws the Bezier connected lines on the page.
/// &lt;/summary&gt;
/// &lt;param name=&quot;page&quot;&gt;Page where to draw the lines.&lt;/param&gt;
/// &lt;param name=&quot;points&quot;&gt;List of points representing the connected lines.&lt;/param&gt;
/// &lt;param name=&quot;pen&quot;&gt;Pen to draw the final path.&lt;/param&gt;
/// &lt;param name=&quot;smoothFactor&quot;&gt;Smooth factor for computing the Bezier curve&lt;/param&gt;
/// &lt;param name=&quot;font&quot;&gt;&lt;/param&gt;
private static void DrawBezierConnectedLines(PDFPage page, PDFPoint[] points, PDFPen pen, double smoothFactor, PDFFont font)
{

    PDFPath path = new PDFPath();
    path.StartSubpath(points[0].X, points[0].Y);

    for (int i = 0; i &lt; points.Length - 2; i++)
    {
        PDFPoint[] pts = ComputeBezierConnectedLines(points[i], points[i + 1], points[i + 2], smoothFactor, i == 0, i == points.Length - 3);
        switch (pts.Length)
        {
            case 2: // Intermediate/last section - straight lines
                path.AddLineTo(pts[0].X, pts[0].Y);
                path.AddLineTo(pts[1].X, pts[1].Y);
                break;
            case 3: // First section - straight lines
                path.AddLineTo(pts[0].X, pts[0].Y);
                path.AddLineTo(pts[1].X, pts[1].Y);
                path.AddLineTo(pts[2].X, pts[2].Y);
                break;
            case 4: // Intermediate/last section
                path.AddLineTo(pts[0].X, pts[0].Y);
                path.AddBezierTo(pts[1].X, pts[1].Y, pts[1].X, pts[1].Y, pts[2].X, pts[2].Y);
                path.AddLineTo(pts[3].X, pts[3].Y);
                break;
            case 5: // First section
                path.AddLineTo(pts[0].X, pts[0].Y);
                path.AddLineTo(pts[1].X, pts[1].Y);
                path.AddBezierTo(pts[2].X, pts[2].Y, pts[2].X, pts[2].Y, pts[3].X, pts[3].Y);
                path.AddLineTo(pts[4].X, pts[4].Y);
                break;
        }
    }

    page.Canvas.DrawPath(pen, path);

    page.Canvas.DrawString($&quot;Smooth factor = {smoothFactor}&quot;, font, new PDFBrush(), points[points.Length - 1].X, points[0].Y);
}

/// &lt;summary&gt;
/// Given a sequence of 3 consecutive points representing 2 connected lines the method computes the points required to display the new lines and the connecting curve.
/// &lt;/summary&gt;
/// &lt;param name=&quot;pt1&quot;&gt;First point&lt;/param&gt;
/// &lt;param name=&quot;pt2&quot;&gt;Second point&lt;/param&gt;
/// &lt;param name=&quot;pt3&quot;&gt;Third point&lt;/param&gt;
/// &lt;param name=&quot;smoothFactor&quot;&gt;Smooth factor for computing the Bezier curve&lt;/param&gt;
/// &lt;param name=&quot;isFirstSection&quot;&gt;True if the points are the first 3 in the list of points&lt;/param&gt;
/// &lt;param name=&quot;isLastSection&quot;&gt;True if the 3 points are last 3 in the list of points.&lt;/param&gt;
/// &lt;returns&gt;A list of points representing the new lines and the connecting curve.&lt;/returns&gt;
/// &lt;remarks&gt;The method returns 5 points if this is the first section, points that represent the first line, connecting curve and last line.
/// If this is not the first section the method returns 4 points representing the connecting curve and the last line.&lt;/remarks&gt;
private static PDFPoint[] ComputeBezierConnectedLines(PDFPoint pt1, PDFPoint pt2, PDFPoint pt3, double smoothFactor, bool isFirstSection, bool isLastSection)
{
    PDFPoint[] outputPoints = null;

    if (smoothFactor &gt; 0.5)
    {
        smoothFactor = 0.5; // Half line maximum
    }
    if (((pt1.X == pt2.X) &amp;&amp; (pt2.X == pt3.X)) || // Vertical lines
        ((pt1.Y == pt2.Y) &amp;&amp; (pt2.Y == pt3.Y)) || // Horizontal lines
        (smoothFactor == 0))
    {
        if (!isFirstSection)
        {
            pt1 = ComputeIntermediatePoint(pt1, pt2, smoothFactor, false);
        }
        if (!isLastSection)
        {
            pt3 = ComputeIntermediatePoint(pt2, pt3, smoothFactor, true);
        }
        if (isFirstSection)
        {
            outputPoints = new PDFPoint[] { pt1, pt2, pt3 };
        }
        else
        {
            outputPoints = new PDFPoint[] { pt2, pt3 };
        }
    }
    else
    {
        PDFPoint startPoint = new PDFPoint(pt1);
        if (!isFirstSection)
        {
            startPoint = ComputeIntermediatePoint(pt1, pt2, smoothFactor, false);
        }
        PDFPoint firstIntermediaryPoint = ComputeIntermediatePoint(pt1, pt2, smoothFactor, true);
        PDFPoint secondIntermediaryPoint = new PDFPoint(pt2);
        PDFPoint thirdIntermediaryPoint = ComputeIntermediatePoint(pt2, pt3, smoothFactor, false);
        PDFPoint endPoint = new PDFPoint(pt3);
        if (!isLastSection)
        {
            endPoint = ComputeIntermediatePoint(pt2, pt3, smoothFactor, true);
        }

        if (isFirstSection)
        {
            outputPoints = new PDFPoint[] { startPoint, firstIntermediaryPoint, secondIntermediaryPoint, thirdIntermediaryPoint, endPoint };
        }
        else
        {
            outputPoints = new PDFPoint[] { firstIntermediaryPoint, secondIntermediaryPoint, thirdIntermediaryPoint, endPoint };
        }
    }

    return outputPoints;
}

/// &lt;summary&gt;
/// Given the line from pt1 to pt2 the method computes an intermediary point on the line.
/// &lt;/summary&gt;
/// &lt;param name=&quot;pt1&quot;&gt;Start point&lt;/param&gt;
/// &lt;param name=&quot;pt2&quot;&gt;End point&lt;/param&gt;
/// &lt;param name=&quot;smoothFactor&quot;&gt;Smooth factor specifying how from from the line end the intermediary point is located.&lt;/param&gt;
/// &lt;param name=&quot;isEndLocation&quot;&gt;True if the intermediary point should be computed relative to end point, 
/// false if the intermediary point should be computed relative to start point.&lt;/param&gt;
/// &lt;returns&gt;A point on the line defined by pt1-&gt;pt2&lt;/returns&gt;
private static PDFPoint ComputeIntermediatePoint(PDFPoint pt1, PDFPoint pt2, double smoothFactor, bool isEndLocation)
{
    if (isEndLocation)
    {
        smoothFactor = 1 - smoothFactor;
    }

    PDFPoint intermediate = new PDFPoint();
    if (pt1.X == pt2.X)
    {
        intermediate.X = pt1.X;
        intermediate.Y = pt1.Y + (pt2.Y - pt1.Y) * smoothFactor;
    }
    else
    {
        intermediate.X = pt1.X + (pt2.X - pt1.X) * smoothFactor;
        intermediate.Y = (intermediate.X * (pt2.Y - pt1.Y) + (pt2.X * pt1.Y - pt1.X * pt2.Y)) / (pt2.X - pt1.X);
    }

    return intermediate;
}
</code></pre>
<p>For this set of points:</p>
<pre><code>PDFPoint[] points = new PDFPoint[] {
    new PDFPoint(50, 150), new PDFPoint(100, 200), new PDFPoint(150, 50), new PDFPoint(200, 150), new PDFPoint(250, 50) };
DrawBezierConnectedLines(page, points, pen, 0, helvetica);
</code></pre>
<p>this the result:
<a href=""https://i.sstatic.net/a0hu4.gif"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/a0hu4.gif"" alt=""enter image description here"" /></a></p>
<p>The corresponding PDF file can be downloaded here:
<a href=""https://github.com/o2solutions/pdf4net/blob/master/GettingStarted/BezierConnectedLines/BezierConnectedLines.pdf"" rel=""nofollow noreferrer"">https://github.com/o2solutions/pdf4net/blob/master/GettingStarted/BezierConnectedLines/BezierConnectedLines.pdf</a></p>
"
437,16731320,21,12093573,Do Van Tuan,false,0,1571081938,1571080655,58382855,58381939,"<p><em>obj.hello()</em> is an <strong>object's behavior</strong>, not a reference, only reference can be set to null.</p>

<blockquote>
  <p>About null:</p>
</blockquote>

<ul>
<li><strong><em>null</em></strong> is just a <strong>reference value</strong>.</li>
<li>reference is a variable that has a name and can be used to <strong>access an object</strong> by referring to the memory address where it is located.</li>
</ul>

<blockquote>
  <p>About Object:</p>
</blockquote>

<p>All objects have three essential features:</p>

<ul>
<li>state </li>
<li><strong>behavior</strong></li>
<li>identity</li>
</ul>
"
438,3862105,30183,3199595,Malt,false,1,1733965944,1571077140,58382127,58381939,"<p>Simply speaking, it's because Java doesn't allow it while there are languages that do (e.g Python). In Java you cannot <a href=""https://stackoverflow.com/questions/5626193/what-is-monkey-patching"">monkey-patch</a> existing code.</p>
<p>Why? Well, Java wasn't born as a functional language, and while support for function references was added in Java 8, they're still not first class citizens. So, you cannot assign a new value to a method of a class like you can with a field of that class.</p>
<p>However, since you can assign values to fields, you could do something like this:</p>
<pre><code>class TestClass3 {

    public Supplier&lt;TestClass3&gt; hello;

    public TestClass3() {
        this.hello = this::hello;
    }

    public TestClass3 hello() {
        TestClass3 t = new TestClass3();
        return t;
    }
}

class TestClass1 {
    public static void main(String[] args) {
        TestClass3 obj = new TestClass3();
        obj.hello.get(); // calls hello()
        obj.hello = null; // now works
    }
}
</code></pre>
<p>Here I define a member named <code>hello</code> in <code>TestClass3</code>. It's of type <code>Supplier&lt;TestClass3&gt;</code>, and it just so happens that <code>public TestClass3 hello()</code> is of the same type. Hence, in the constructor of <code>TestClass3</code> I can do this: <code>this.hello = this::hello;</code>.</p>
<p>Now we have a reference to <code>hello()</code> as a <strong>field</strong>, which means that we can invoke the function using that field, or even change the field's value:</p>
<pre><code>obj.hello.get();
obj.hello = null;
</code></pre>
"
439,6104455,4582,4762502,Gaurav Jeswani,false,1,1571076946,1571076946,58382093,58381939,"<p>Here in your code when you write <code>obj.hello()</code>, it only call the method <code>hello</code>. It doesn't assign the return of <code>hello</code> to any variable. So no variable is actually holding the return value of the method <code>hello</code>. While you can assign null value to same variable. That's why it's not a valid syntax.</p>

<p>Valid syntax should be like:</p>

<pre><code>TestClass3 value = obj.hello();
value = null;
</code></pre>
"
440,10313343,51,7608402,Tanja Stroble,false,1,1571076736,1571076736,58382055,58381939,"<p>You'll need to assign <code>obj.hello()</code> to a variable, which you can then set to <code>null</code> if you want. </p>
"
441,13520008,612,11307189,Patrick,false,0,1571084579,1571076500,58382011,58381939,"<p>You are trying to set the method to a value, this isn't possible and doesn't make any sense, if you think about it. If you want to save the reference returned by <code>obj.hello()</code>, write</p>

<pre><code>TestClass3 obj2 = obj.hello();
</code></pre>
"
442,38376410,1,28742039,Derrick Okema,false,0,1733963415,1733963415,79273527,56010986,"<p>Well, I found out NetBeans actually has two labels that can be confusing some times. The AWT and swing controls label. The swing control label has icon property that can be used for inserting an image/ icon in a JFrame/Jpanel while the other AWT identified with a capital A does not have this property. Thanks</p>
"
443,3181898,66,2688406,vicky9988,true,1,1557172943,1557172943,56011673,56010986,"<p>Netbeans Apache IDE icon property not available directly </p>

<p><a href=""https://netbeans.org/kb/docs/java/gui-image-display.html"" rel=""nofollow noreferrer"">https://netbeans.org/kb/docs/java/gui-image-display.html</a></p>

<p>Refer this above link,</p>

<p>To add the image to the label:</p>

<ol>
<li>In the GUI Designer, select the label that you have added to your form.</li>
<li>In the Properties window, click the Properties category and scroll to the Icon property.</li>
<li>Click the ellipsis (...) button.The icon property editor is displayed.</li>
</ol>

<p><a href=""https://i.sstatic.net/tYaHR.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/tYaHR.png"" alt=""enter image description here""></a></p>

<ol start=""4"">
<li>In the icon property dialog box, click Import to Project.</li>
<li>In the file chooser navigate to any image that is on your system that you want to use. Then click Next.</li>
<li>In the Select target folder page of the wizard, select the newpackage folder and click Finish.</li>
</ol>

<p><a href=""https://i.sstatic.net/yjIWn.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/yjIWn.png"" alt=""enter image description here""></a></p>

<ol start=""7"">
<li><p>Click OK to close the icon property dialog box.
After you click OK, the IDE does the following things:</p>

<ul>
<li>Copies the image to your project. Therefore, when you build and distribute the - ------- application, the image is included in the distributable JAR file.</li>
<li>Generates code in the ImageDisplay class to access the image.</li>
<li>Displays your image on the label in the Design view of your form.</li>
</ul></li>
</ol>
"
444,75676,15141,217019,Mateusz Dymczyk,false,15,1382275248,1382274893,19477785,19477767,"<p>It's called ""constructor chaining""</p>

<p>@Edit: adding source: <a href=""http://docs.oracle.com/javase/tutorial/java/IandI/super.html"" rel=""noreferrer"">Oracle's documentation</a>. Courtsey of Oli Charlesworth.</p>

<blockquote>
  <p>If a subclass constructor invokes a constructor of its superclass,
  either explicitly or implicitly, you might think that there will be a
  whole chain of constructors called, all the way back to the
  constructor of Object. In fact, this is the case. It is called
  <strong><em>constructor chaining</em></strong>, and you need to be aware of it when there is a
  long line of class descent.</p>
</blockquote>
"
445,1313746,4506,1261166,Viktor Mellgren,false,2,1733960479,1342600109,11537236,11536934,"<p>You can do something like</p>
<pre><code>StringBuilder res = new StringBuilder();
for (char c : name.toCharArray()) {
    if (Character.isLetter(c) || Character.isDigit(c))
        res.append(c);   
}
s = res.toString();

//Normalize using the method below
</code></pre>
<p><a href=""http://blog.smartkey.co.uk/2009/10/how-to-strip-accents-from-strings-using-java-6/"" rel=""nofollow noreferrer"">http://blog.smartkey.co.uk/2009/10/how-to-strip-accents-from-strings-using-java-6/</a></p>
<pre><code>public static String stripAccents(String s) {    
    s = Normalizer.normalize(s, Normalizer.Form.NFD);   
    s = s.replaceAll(&quot;\\p{InCombiningDiacriticalMarks}+&quot;, &quot;&quot;); 
    return s;
}
</code></pre>
"
456,12784,10578,25338,Erik A. Brandstadmoen,false,1,1312379265,1312379265,6927488,6927424,"<p>I don't think this can be inlined during compilation in Java, as all functions in Java are virtual, and you don't know until runtime which method is actually called, it might be the one of a subclass.</p>

<p>However, I don't think you need to worry about these things, because the HotSpot compiler should be pretty good at optimizing code that gets called frequently, on-the-fly, as the application is running.</p>
"
446,19462,103737,45664,Andrzej Doyle,true,17,1342599678,1342599678,11537115,11536934,"<p>You can use the <a href=""http://docs.oracle.com/javase/6/docs/api/java/text/Normalizer.html"" rel=""noreferrer""><code>java.text.Normalizer</code></a> class to convert your text into normal Latin characters followed by diacritic marks (accents), where possible.  So for example, the single-character string <code>""é""</code> would become the two character string <code>['e', {COMBINING ACUTE ACCENT}]</code>.</p>

<p>After you've done this, your String would be a combination of unaccented characters, accent modifiers, and the other special characters you've mentioned.  At this point you could filter the characters in your string using only a whitelist to keep what you want (which could be as simple as <code>[A-Za-z0-9]</code> for a regex, depending on what you're after).</p>

<p>An approach might look like:</p>

<pre><code>String name =""I&gt;télé""; //example
String normalized = Normalizer.normalize(name, Form.NFD);
String result = normalized.replaceAll(""[^A-Za-z0-9]"", """");
</code></pre>
"
447,1652882,148,1523110,Alfa,false,0,1342599617,1342599617,11537093,11536934,"<p>try using ascii code. <a href=""http://www.asciitable.com/"" rel=""nofollow"">may this link will help</a></p>
"
448,1612994,7573,1491439,rob2universe,false,2,1733960444,1576775444,59414153,59353985,"<p>When / from where would you like to read the property?</p>
<p>Does the model API doc here answer your question?
<a href=""https://docs.camunda.org/manual/latest/user-guide/model-api/bpmn-model-api/extension-elements/"" rel=""nofollow noreferrer"">https://docs.camunda.org/manual/latest/user-guide/model-api/bpmn-model-api/extension-elements/</a></p>
<p>If you need to read the information from an execution:</p>
<pre class=""lang-java prettyprint-override""><code>FlowElement bpmnModelElementInstance = delegateExecution.getBpmnModelElementInstance();
        ExtensionElements extensionElements = bpmnModelElementInstance.getExtensionElements();
        if (null != extensionElements) {
            Query&lt;ModelElementInstance&gt; elementsQuery = extensionElements.getElementsQuery();
            if (null != elementsQuery) {
                Query&lt;CamundaProperties&gt; camundaPropertiesQuery = elementsQuery.filterByType(CamundaProperties.class);
                List&lt;CamundaProperties&gt; list = camundaPropertiesQuery.list();
                if (CollUtil.isNotEmpty(list)) {
                    for (CamundaProperties camundaProperties : list) {
                        Collection&lt;CamundaProperty&gt; camundaProperties1 = camundaProperties.getCamundaProperties();
                        if (CollUtil.isNotEmpty(camundaProperties1)) {
                            for (CamundaProperty camProperty : camundaProperties1) {
                                String name = camProperty.getCamundaName();
                                String value = camProperty.getCamundaValue();
                                
                            }
                        }
                    }
                }
            }
        }
</code></pre>
"
449,17197447,21,12449871,Maaz,false,-1,1576575113,1576572208,59370440,59353985,"<p>Add a java class as a listener as shown in below image.</p>

<p>Java class should implement the org.camunda.bpm.engine.delegate.JavaDelegate.</p>

<p>In the overriden method,you can get the variable by </p>

<p>execution.getVariable(""variable-name"")</p>

<p><a href=""https://i.sstatic.net/feW7s.png"" rel=""nofollow noreferrer"">Camunda Process Listener Image</a></p>
"
450,35665,17894,101095,Cuga,false,1,1534941769,1534941769,51967166,7243221,"<p>Another way to see if loop unrolling is being performed in the loop is to specify <code>-XX:LoopUnrollLimit=1</code> as an <a href=""https://www.oracle.com/technetwork/articles/java/vmoptions-jsp-140102.html"" rel=""nofollow noreferrer"">argument to the JVM</a> when running your code.</p>

<p>If you have an executable jar, then an example of how you can use this is:</p>

<pre><code>java -XX:LoopUnrollLimit=1 -jar your-jar.jar
</code></pre>

<p>This flag will</p>

<blockquote>
  <p>Unroll loop bodies with server compiler intermediate representation node count less than this value</p>
</blockquote>

<p>And that'll directly address your question without needing to look at the generated assembly</p>
"
451,17835,307720,40342,Joachim Sauer,true,6,1582252066,1314707929,7243256,7243221,"<p><em>If</em> the JVM unrolls the loop is probably best answered by actually <a href=""https://wiki.openjdk.java.net/display/HotSpot/PrintAssembly"" rel=""nofollow noreferrer"">printing the generated assembly</a>. Note that this requires your code to actually be executed as a hot spot (i.e. the JVM considers it worthy of the expensive optimizations).</p>

<p><em>Why</em> the JVM decides one way or another is a much harder question and probably requires in-depth analysis of the JIT code.</p>
"
452,372555,4818,721666,Ralph,false,0,1733956569,1733956569,79273367,36711819,"<p>One possible solution is the <a href=""https://www.open-bpmn.org/"" rel=""nofollow noreferrer"">Open-BPMN Meta project</a>. The project provides a BPMN modeller but also a simple Java library to parse and create BPMN 2.0 models. You can add the library with one dependency into your project</p>

  org.imixs.bpmn
  open-bpmn.metamodel
  ${openbpmn.version}

<p>Using the <code>BPMNModelFactory</code> object you can parse a model and access all elements:</p>
<pre><code>    logger.info(&quot;...read model&quot;);
    model = BPMNModelFactory.read(&quot;/my-model.bpmn&quot;);

    BPMNProcess process = model.openDefaultProces();
    assertNotNull(process);
    assertEquals(BPMNTypes.PROCESS_TYPE_PUBLIC, process.getProcessType());

    assertEquals(2, process.getDataObjects().size());

    BPMNElementNode dataObject = process.findElementNodeById(&quot;DataObject_2&quot;);
    assertNotNull(dataObject);

    // test the label position of the event
    BPMNLabel label = dataObject.getLabel();
    assertNotNull(label);
    assertEquals(101.0, label.getPosition().getX());
</code></pre>
<p>Find more details <a href=""https://github.com/imixs/open-bpmn/tree/master/open-bpmn.metamodel"" rel=""nofollow noreferrer"">here</a></p>
"
453,8265293,3870,6215069,Dean Clark,false,1,1461358414,1461358414,36803149,36711819,"<p>There are <a href=""https://en.wikipedia.org/wiki/List_of_BPMN_2.0_engines"" rel=""nofollow"">several products</a> to parse a BPMN file. <a href=""http://jboss.org/jbpm/"" rel=""nofollow"">jBPM</a> is one open-source Java option.</p>

<p>The real question is what you want to do with it, once parsed. Presumably you'll want to actually execute the business process, and I would leverage one of the aforementioned products to do so rather than reinventing the wheel.</p>
"
454,2840646,1183,2440340,Antoine Mottier,false,0,1461068589,1461068589,36718278,36711819,"<p>As BPMN use XML files for interoperability you can use any standard Java XML parser (you can refer to <a href=""https://docs.oracle.com/javase/tutorial/jaxp/sax/index.html"" rel=""nofollow"">JAXP tutorial</a>).</p>

<p>You can get all XML schema from the <a href=""http://www.omg.org/spec/BPMN/2.0/"" rel=""nofollow"">BPMN specification page</a>.</p>
"
455,434266,15635,820127,rossum,false,0,1312382324,1312382324,6928248,6927424,"<p>Marking a method as <code>final</code> gives the JIT compiler a big hint as to how it can treat this method.  You cannot force it to inline the method, but giving the JIT more explicit information can only help.</p>
"
457,23121,532979,57695,Peter Lawrey,true,5,1312379263,1312379263,6927487,6927424,"<p>The Java compiler does very few optimisations at compile time.</p>

<p>Instead the JIT does most of the optimisations at runtime based on how the applciation is actually used. It can inline methods, even up to two ""virtual"" methods.</p>
"
460,7134819,6098,5454842,Marcus Hert da Coregio,true,1,1657194465,1657193610,72897082,72885045,"<p>The <code>Authentication</code> object of your authenticated user is:</p>
<pre><code>UsernamePasswordAuthenticationToken [Principal=LdapUserDetailsImpl [Dn=cn=ivr_apl_user,ou=IVR,ou=Aplicaciones,dc=pre,dc=aplssib; Username=ivr_apl_user; Password=[PROTECTED]; Enabled=true; AccountNonExpired=true; CredentialsNonExpired=true; AccountNonLocked=true; Granted Authorities=[AGNI_OIMIVR]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[AGNI_OIMIVR]] 
</code></pre>
<p>Note that the <code>GrantedAuthorities</code> is <code>Granted Authorities=[AGNI_OIMIVR]</code>, there is no <code>ROLE_</code> prefix there. When you add <code>@RolesAllowed(&quot;AGNI_OIMIVR&quot;)</code> to the method, the <code>ROLE_</code> prefix will be added automatically to the authority that you passed as an argument to the annotation, becoming <code>ROLE_AGNI_OIMIVR</code>.</p>
<p>Spring Security will try to match <code>ROLE_AGNI_OIMIVR</code> that is in the annotation with <code>AGNI_OIMIVR</code> that is in the granted authorities' property, but they do not match.</p>
<p>You have three options:</p>
<ol>
<li>Change the role in LDAP to have the <code>ROLE_</code> prefix</li>
<li>Expose a Bean of <code>GrantedAuthorityDefaults</code> removing the <code>rolePrefix</code>, like so:</li>
</ol>
<pre class=""lang-java prettyprint-override""><code>@Bean
GrantedAuthorityDefaults grantedAuthorityDefaults() {
    return new GrantedAuthorityDefaults(&quot;&quot;);
}
</code></pre>
<ol start=""3"">
<li>Use <code>@PreAuthorize(&quot;hasAuthority('AGNI_OIMIVR')&quot;)</code></li>
</ol>
<p>Another tip would be to use the new <code>@EnableMethodSecurity(jsr250Enabled = true)</code> which uses the simplified <code>AuthorizationManager</code> API, improve logging, amongst others.</p>
"
461,6714862,16465,5176992,Eritrean,false,2,1733953526,1733953526,79273270,79273176,"<p>You can use plugins like <a href=""https://plugins.jetbrains.com/plugin/10080-rainbow-brackets"" rel=""nofollow noreferrer"">Rainbow Brackets</a> if you just want to have different colored braces. Some other features of the plugin require a paid subscription. But for the colored braces you don't need a licence:</p>
<p><a href=""https://i.sstatic.net/6G5AlwBM.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/6G5AlwBM.png"" alt=""enter image description here"" /></a></p>
<p>Other paid plugins (€2 per year) <a href=""https://plugins.jetbrains.com/plugin/24560-color-brackets"" rel=""nofollow noreferrer"">Color Brackets</a></p>
"
462,1811999,167,1647855,foshoshin,false,0,1733952523,1733942670,79272833,65684250,"<p>Adding the code referenced by Kyrylo Semenko at the link <a href=""https://github.com/spring-projects/spring-framework/issues/26489#issuecomment-896182570"" rel=""nofollow noreferrer"">https://github.com/spring-projects/spring-framework/issues/26489#issuecomment-896182570</a>
with credit to github user kozel-stas. This solved my problem and is very helpful and reusable code.</p>
<pre><code>public class MultipartExchangeFilterFunction implements ExchangeFilterFunction {

@Override
@NonNull
public Mono&lt;ClientResponse&gt; filter(@NonNull ClientRequest request, @NonNull ExchangeFunction next) {
    if (MediaType.MULTIPART_FORM_DATA.includes(request.headers().getContentType())
            &amp;&amp; (request.method() == HttpMethod.PUT || request.method() == HttpMethod.POST)) {
        return next.exchange(
                ClientRequest.from(request)
                        .body((outputMessage, context) -&gt; request.body().insert(new BufferingDecorator(outputMessage), context))
                        .build()
        );
    } else {
        return next.exchange(request);
    }
}

private static final class BufferingDecorator extends ClientHttpRequestDecorator {

    private BufferingDecorator(ClientHttpRequest delegate) {
        super(delegate);
    }

    @Override
    @NonNull
    public Mono&lt;Void&gt; writeWith(@NonNull Publisher&lt;? extends DataBuffer&gt; body) {
        return DataBufferUtils.join(body).flatMap(buffer -&gt; {
            getHeaders().setContentLength(buffer.readableByteCount());
            return super.writeWith(Mono.just(buffer));
        });
    }

}
</code></pre>
<p>}</p>
"
463,6499111,956,5030597,Kyrylo Semenko,false,4,1630943791,1630943791,69077389,65684250,"<p>Create <code>ExchangeFilterFunction</code> like this one <a href=""https://github.com/spring-projects/spring-framework/issues/26489#issuecomment-896182570"" rel=""nofollow noreferrer"">https://github.com/spring-projects/spring-framework/issues/26489#issuecomment-896182570</a> and register it, for example</p>
<pre><code>WebClient webClient = WebClient.builder()
                .filter(new MultipartExchangeFilterFunction())
                ...
                .build();
</code></pre>
<p>Where <code>MultipartExchangeFilterFunction</code> implements <code>org.springframework.web.reactive.function.client.ExchangeFilterFunction</code>, calculates body length and creates the <code>Content-Length</code> header.</p>
"
464,2603307,89414,2255089,Casimir et Hippolyte,true,3,1733949791,1437797478,31622830,31622573,"<p>You can do it with this kind of pattern (add optional CR if needed):</p>
<pre><code>(?m)^(?&gt;(?&gt;\\d+([ \\t]|$)(?=.*\\n(\\2?+\\d+\\1)))+\\n(?=\\2$))+.*
</code></pre>
<p><a href=""https://regex101.com/r/BXYeob/1"" rel=""nofollow noreferrer"">demo</a></p>
<p>For each item in the first line the lookahead checks if an item in the same column exists in the next line. To know if the columns are the same, the capture group 2 contains an optional self reference <code>\\2?+</code>. In this way, the capture group 2 grows each time the &quot;item&quot; group is repeated (and reaches the next column).</p>
<p>details:</p>
<pre class=""lang-php prettyprint-override""><code>(?m) # use the multiline mode
^    # start of the line
(?&gt;  # group for a complete line
    (?&gt; # group for an item
        \\d+ ([ \\t]|$) # a number followed by a space/tab or the end of the line
        (?= # looakead
            .*\\n # reach the next line
            (\\2?+\\d+\\1) # capture group 2
        )
    )+ # repeat the item group
    \\n 
    (?=\\2$) # check if there isn't more columns in the next line
)+ # repeat the line group
.* # match the next line
</code></pre>
<p>Note: this pattern checks if separators are unique (not repeated) and always the same with <code>([ \\t]|$)</code> and <code>\\1</code> (in the capture group 2). Leading and trailing white-spaces aren't allowed. But you can write it in a more flexible way:</p>
<pre><code>(?m)^(?&gt;[ \\t]*(?&gt;\\d+[ \\t]*(?=.*\\r?\\n(\\1?+\\d+(?:[ \\t]+|[ \\t]*$))))+\\r?\\n(?=\\1$))+.*\\2$))+.*
</code></pre>
<p>These patterns can be used either with <code>matches()</code> to check a whole string or <code>find()</code> to find eventual arrays in a larger string.</p>
"
497,4277860,1678,3498071,Ali-Alrabi,false,0,1684832233,1684832233,76312935,30761253,"<p>If you did not implement UserDetailsService interface, you need to exclude SecurityAutoConfiguration</p>
<p>Implement UserDetailsService interface</p>
<pre><code>@Component
public class UserDetailsServiceImpl implements UserDetailsService{

@Override
public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
    // TODO Auto-generated method stub
    return null;
}
</code></pre>
<p>Exclude SecurityAutoConfiguration</p>
<pre><code>@SpringBootApplication(exclude = {SecurityAutoConfiguration.class })
</code></pre>
"
465,1318923,9031,1265182,Shar1er80,false,2,1437803111,1437796440,31622727,31622573,"<h2>UPDATE</h2>

<p>If you wanted to do straight <code>regex</code> for validation of a 2d array, you can build patterns that validate specific ""x by y"" 2d arrays.</p>

<pre><code>public static void main(String[] args) throws Exception {
    String data = ""0 4 8 4\n9 6 5 7\n9 5 5 1"";

    // Check if the data is either a 2 x 2 - 10 x 10 array
    for (int row = 2; row &lt;= 10; row++) {
        for (int col = 2; col &lt;= 10; col++) {
            Matcher matcher = Pattern.compile(buildPattern(row, col)).matcher(data);
            if (matcher.matches()) {
                System.out.printf(""Valid %d x %d array%n"", row, col);
                return;
            }
        }
    }
    System.out.println(""Invalid 2d array"");
}

public static String buildPattern(int row, int col) {
    StringBuilder patternBuilder = new StringBuilder();
    for (int r = 0; r &lt; row; r++) {
        for (int c = 0; c &lt; col; c++) {
            patternBuilder.append(""\\d+"");
            if (c + 1 &lt; col) patternBuilder.append(""[ ]"");
        }
        if (r + 1 &lt; row) patternBuilder.append(""\n"");
    }
    return patternBuilder.toString();
}
</code></pre>

<p>Results:</p>

<pre><code>Valid 3 x 4 array
</code></pre>

<h2>OLD ANSWER</h2>

<p>I would do 2 splits.</p>

<ol>
<li>Split to get rows</li>
<li>Split to get number of columns from the first row</li>
</ol>

<p>From there, I would get the number of rows that have the same number of columns as the first row.  If the result of that is equal to the number of rows from split 1, then we know it's a 2d array.  Otherwise, it's a jagged array.</p>

<pre><code>public static void main(String[] args) throws Exception {
    String data = ""0 4 8 4\n9 6 5 7\n9 5 5 1"";

    // Get the rows
    String[] rows = data.split(""[\r]?[\n]"");

    // Get the number of columns in the first row
    int colCount = rows[0].split("" "").length;

    // Check if all rows have the same number of columns as the first row
    if (Arrays.stream(rows)
            .filter(row -&gt; row.split("" "").length == colCount)
            .count() == rows.length) {
        System.out.println(""Valid 2d array"");
    } else {
        System.out.println(""Jagged array"");
    }
}
</code></pre>

<p>Results:</p>

<pre><code>Valid 2d array
</code></pre>
"
466,311307,11646,624814,SMBiggs,false,1,1733949288,1724682975,78914989,6343166,"<p>This is a big question, hence four pages of answers (many are old and should be culled)!  Yet no one has yet mentioned the current google-approved kotlin solution for code within an Activity (or Fragment).</p>
<pre><code>lifecycleScope.launch(Dispatchers.IO) {
    result = myApiCall()
}
</code></pre>
<p>The <code>lifecycleScope.launch(Dispatchers.IO)</code> will honor the activity lifecycle.  This means that if the Activity is suspended or destroyed, the coroutine is also suspended or destroyed.  GlobalScope has the potential of running even after an Activity is destroyed (causing a nasty crash).</p>
<p>If you are in a viewmodel, then your code is even easier:</p>
<pre><code>class MyViewModel : ViewModel {
...

    viewModelScope.launch {
        result = myApiCall()
    }
    
    // if you want to launch off the main thread:
    viewModelScope.launch(Dispatchers.IO) {
        result = myApiCall()
    }

...
}
</code></pre>
<p>This code will honor the lifecycle of MyViewModel.</p>
"
467,13560705,230,9782531,rajeev ranjan,false,0,1716962856,1716381795,78517632,6343166,"<p>The android.os.NetworkOnMainThreadException is thrown when an application attempts to
perform network operations on its main thread. This exception is specifically
designed to prevent the main thread, which handles UI updates, from being blocked
by potentially slow network operations. Performing network operations on the main
thread can make your app appear unresponsive, which leads to a poor user experience. for more detail read this <a href=""https://androidgurudeva.blogspot.com/2024/05/how-can-i-fix-androidosnetworkonmainthr.html"" rel=""nofollow noreferrer"">artcle</a></p>
"
468,7870611,2699,5948056,programandoconro,false,3,1652172363,1652172363,72183216,6343166,"<p>I solved using <code>Thread</code> in Kotlin. There are many examples using Java, so I wanted to add a solution that worked for me in Kotlin.</p>
<pre><code> Thread {
     println(&quot;NEW THREAD&quot;)
     callAPI() // add your own task
 }.start()
</code></pre>
<p>So, as many others greatly explained, you cannot block the main thread with you call, so it is necessary to create a new thread.</p>
"
469,9705313,317,7198913,Sourav Kumar Verma,false,-2,1651399114,1651399114,72075706,6343166,"<pre><code>Executors.newFixedThreadPool(3).execute(() -&gt; {
      //DO Task;        
 });
</code></pre>
"
470,1301136,2811,1450409,nyxee,false,0,1626978327,1617580324,66946843,6343166,"<p>I converted the network access function returning a value into a suspend function like so:</p>
<pre><code>
suspend fun isInternetReachable(): Boolean {
  ...
  ...
  return result
}
</code></pre>
<p>Then I modified where I was using the function to fit into this:</p>
<pre><code>...
Globalscope.async{
  ...
  result = isInternetReachable()
  ...
}
...
</code></pre>
"
471,38311115,1,28707227,Bart,false,0,1733796410,1733796349,79266854,7487526,"<p>If your laptop is connected to a vpn, disconnect and retry it.</p>
"
472,26533312,1,20165187,2xMarci,false,0,1664958606,1664958606,73957751,7487526,"<p>In eclipse select Run tab -&gt; Debug configuration -&gt; Junit -&gt; select your test name -&gt;
Environment tab -&gt; add variable server=y .</p>
"
473,12172246,1028,8886529,vladimirror,false,8,1587195393,1587195393,61285706,7487526,"<p>Had same problem, but the solution was to run the application with <code>-server=y</code> option and not with <code>-server=n</code>.</p>

<p>Before:</p>

<pre><code>java -agentlib:jdwp=transport=dt_socket,server=n,suspend=y,address=localhost:5005 
</code></pre>

<p>After:</p>

<pre><code>java -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=localhost:5005
</code></pre>
"
474,7146588,21,5462095,Andreas,false,2,1582620668,1582618088,60390043,7487526,"<p>I changed </p>

<pre><code>-agentlib:jdwp=transport=dt_socket,address=9009,server=n,suspend=y
</code></pre>

<p>to </p>

<pre><code>-agentlib:jdwp=transport=dt_socket,address=9009,server=y,suspend=n
</code></pre>

<p>and that did the trick!</p>
"
475,343146,12262,674669,user674669,false,5,1526369161,1526369161,50344544,7487526,"<p>I was seeing an error while using the -X format:</p>

<pre><code>java -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=4000,suspend=n myapp
</code></pre>

<p>The error went away when I switched to the newer format:</p>

<pre><code>java -agentlib:jdwp=transport=dt_socket,server=y,address=4000,suspend=n myapp
</code></pre>
"
476,21199033,23,15590025,Dominik,false,0,1733948710,1733948710,79273093,7160568,"<p>You can use <code>for</code> loop too. After every iteration it check <code>e.hasMoreElements()</code> and sets <code>a</code> to <code>e.nextElement()</code>:</p>
<pre><code>for(String a = e.nextElement(); e.hasMoreElements(); a = e.nextElement()) {
    System.out.println(a);
}
</code></pre>
<p>Note: if an empty <code>Enumeration</code> can be expected, you must the check <code>if(e.nextElement())</code> do first, before setting value <code>String a = e.nextElement()</code> in the <code>for</code> loop.</p>
"
477,3811879,833,3162459,user3162459,false,80,1391610734,1388924230,20933439,7160568,"<pre><code>for (String key : Collections.list(e))
    System.out.println(key);
</code></pre>
"
478,220789,115236,478399,AlexR,true,136,1490170509,1314100446,7160635,7160568,"<p>You call <code>nextElement()</code> twice in your loop. This call moves the enumeration pointer forward. 
You should modify your code like the following:</p>

<pre><code>while (e.hasMoreElements()) {
    String param = e.nextElement();
    System.out.println(param);
}
</code></pre>
"
479,277416,690875,571407,JB Nizet,false,3,1314100420,1314100420,7160625,7160568,"<p>You're calling nextElement twice in the loop. You should call it only once, else it moves ahead twice:</p>

<pre><code>while(e.hasMoreElements()){
    String s = e.nextElement();
    System.out.println(s);
}
</code></pre>
"
480,20029,7368,47461,cadrian,false,1,1314100400,1314100400,7160621,7160568,"<p>Each time you do <code>e.nextElement()</code> you skip one. So you skip two elements in each iteration of your loop.</p>
"
481,19303012,37,14110479,You,false,0,1697118150,1697115798,77280842,14925073,"<pre><code>apt show tomcat9       # Pour Debian/Ubuntu
# or
yum info tomcat        # Pour CentOS/RedHat
...
Name        : tomcat
Arch        : noarch
Version     : 7.0.76
# first locate your catalina.sh like : 
locate catalina.sh
/opt/tomcat/bin/catalina.sh
#and 
/opt/tomcat/bin/catalina.sh version
...
Server version: Apache Tomcat/9.0.30
...
Server number:  9.0.30.0
OS Name:        Linux
OS Version:     3.10.0-1160.95.1.el7.x86_64
Architecture:   amd64
...

# or 
systemctl status tomcat
● tomcat.service - Apache Tomcat 9
Loaded: loaded (/etc/systemd/system/tomcat.service; enabled; vendor             
preset: disabled)
Active: active (running) since Tue 2023-09-12 08:26:34 CEST; 4 weeks 2     
days ago
Process: 961 ExecStart=/opt/tomcat/bin/startup.sh (code=exited,     
status=0/SUCCESS)
Main PID: 1041 (java)
CGroup: /system.slice/tomcat.service
       └─1041 /usr/bin/java - 
Djava.util.logging.config.file=/opt/tomcat/conf/
</code></pre>
"
482,8329980,967,6258747,igorpcholkin,false,0,1660657122,1660657122,73374934,14925073,"<p>Sometimes the bin/version.sh script in tomcat directory still doesn't show a numerical version. E.g. it can just show: &quot;Server version: WebServer&quot;. And other mentioned opportunities (checking path, checking logs, release notes, tomcat root page output) don't work neither.
In that case (you should still have read access to tomcat's directory):</p>
<ol>
<li>take catalina.jar from tomcat's lib directory.</li>
<li>extract it</li>
<li>take a look inside org/apache/catalina/util/ServerInfo.properties</li>
</ol>
<p>it can contain what you expect (server.info and server.number fields)</p>
"
483,3723758,12676,3600553,Du-Lacoste,false,2,1652009563,1652009162,72160522,14925073,"<p>These Following 4 ways can be used to find out <code>Apache Tomcat Version</code> in <code>Linux</code>:</p>
<p><strong>1). Linux via Version Script in Tomcat Bin Directory:</strong></p>
<ol>
<li>Locate the Tomcat`s bin Directory that is being used</li>
<li>Check for version.sh script exists, i.e. ll version.sh</li>
<li>Execute the script either way: <code>sh version.sh</code> OR <code>./version.sh</code></li>
</ol>
<p>This will output you sample as below:</p>
<p><a href=""https://i.sstatic.net/pObgv.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/pObgv.jpg"" alt=""enter image description here"" /></a></p>
<p><strong>2). Check Tomcat Version in Linux Command Line</strong></p>
<pre><code>ps -ef |grep -i tomcat // this is will output and you will need to eye-ball to find version, sample below
</code></pre>
<p><a href=""https://i.sstatic.net/gT8MY.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/gT8MY.jpg"" alt=""enter image description here"" /></a></p>
<p><strong>3). Get Tomcat version via Catalina.jar</strong></p>
<p>Execute the following CMD in terminal, you will need to locate Lib folder in Tomcat</p>
<pre><code>java -cp tomcat/lib/catalina.jar org.apache.catalina.util.ServerInfo
</code></pre>
<p><strong>4). Get Tomcat version through JSP</strong></p>
<ol>
<li>Create JSP page with the below code</li>
<li>Then try to open the JSP via Tomcat in the Browser</li>
<li>This will output the Tomcat Version you are running.</li>
</ol>
<blockquote>
<p>Tomcat Version : &lt;%= application.getServerInfo() %&gt; <br>     Servlet
Specification Version : &lt;%= application.getMajorVersion() %&gt;. &lt;%=
application.getMinorVersion() %&gt;  <br>     JSP version :
&lt;%=JspFactory.getDefaultFactory().getEngineInfo().getSpecificationVersion()
%&gt; <br></p>
</blockquote>
"
484,10982424,11,8069116,Mark,false,1,1644303873,1643940494,70980661,14925073,"<p>check yout tomcat log directory.</p>
<pre><code>goto  /var/log/tomcat8/
</code></pre>
<p>view the file: catalina.out
it will show the tomcat version below:</p>
<blockquote>
<p>Server version name:   Apache Tomcat/8.5.72
04-Feb-2022 04:00:58.537 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Oct 28 2021 00:54:01 UTC
04-Feb-2022 04:00:58.537 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 8.5.72.0
04-Feb-2022 04:00:58.537 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Linux
04-Feb-2022 04:00:58.537 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
04-Feb-2022 04:00:58.537 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           1.8.0_312-b07</p>
</blockquote>
"
485,3854437,11,3193759,Steven Baker,false,1,1613647376,1613647376,66258963,14925073,"<p>On Windows just cmd</p>
<p>C:\Program Files (x86)\Extensis\Portfolio Server\applications\tomcat\bin&gt;version</p>
"
486,8573019,11,6423204,panatechnica,false,0,1629692931,1629571859,68875907,14390577,"<p>Updated for java 11 instead of javax. use jakarta. and 11.0.3 for jetty</p>
<pre><code>ServletHolder servletHolder = new ServletHolder(DefaultServlet.class);
servletHolder.setInitParameter(&quot;resourceBase&quot;,&quot;./resource&quot;);
servletHolder.setInitParameter(&quot;dirAllowed&quot;, &quot;false&quot;);
servletHolder.setInitParameter(&quot;pathInfoOnly&quot;, &quot;true&quot;);
servletHandler.addServlet(servletHolder, &quot;/api/source/*&quot;);
FilterHolder f = new FilterHolder(new MyFilter());
servletHandler.addFilter(MediaFilter.class, &quot;/api/source/*&quot;,     
EnumSet.allOf(DispatcherType.class));
</code></pre>
"
487,243942,14797,516433,Lucas,false,5,1454967886,1454967886,35279943,14390577,"<p>The <code>ServletContextHandler.addFilter(...)</code> methods are just convenience wrappers around the <code>ServletHandler.addFilter(...)</code> methods.  Provided that you only need one <code>&lt;url-pattern&gt;</code> they <em>are</em> quite convenient.  However, if you need more than one pattern or choose to use <code>&lt;servlet-name&gt;</code> instead, you will need something more like this:</p>

<pre><code>ServletContextHandler context = new ServletContextHandler(
        ServletContextHandler.SESSIONS);

FilterMapping mapping = new FilterMapping();
mapping.setFilterName( ""Foobar Filter"" );
mapping.setPathSpecs( new String[] { ""/foo/*"", ""/bar/*"" } );
mapping.setServletNames( new String[] { ""foobar"" } );
mapping.setDispatcherTypes(
        EnumSet.of( DispatcherType.INCLUDE,DispatcherType.REQUEST ) ) );

FilterHolder holder = new FilterHolder( FoobarFilter.class );
holder.setName( ""Foobar Filter"" );

context .getServletHandler().addFilter( holder, mapping );
</code></pre>
"
488,2102941,7720,1870054,wener,false,28,1493028966,1400833890,23824473,14390577,"<p>I got the same problem, but I think Καrτhικ's answer is too complex.  I found this easy way:</p>

<pre><code>Server server = new Server(8080);
ServletContextHandler context = new ServletContextHandler(ServletContextHandler.SESSIONS);
context.setContextPath(""/"");
context.addServlet(org.eclipse.jetty.servlet.DefaultServlet.class, ""/"");
context.addFilter(AppFilter.class, ""/*"", EnumSet.of(DispatcherType.INCLUDE,DispatcherType.REQUEST));

server.setHandler(context);
server.start();
server.join();
</code></pre>

<p>My jetty version is <code>8.1.14.v20131031</code>.</p>
"
524,10508038,53,7744621,Ernestorumo,false,2,1677232720,1677232720,75555096,75187134,"<p>Since you are using &quot;2.0.2&quot; version of springdoc, you put @Hidden annotation in repositories that produce the error. In this entry it´s explained with more detail: <a href=""https://stackoverflow.com/a/74378329/7744621"">https://stackoverflow.com/a/74378329/7744621</a></p>
"
489,81564,3905,229896,Καrτhικ,true,27,1733944478,1358518885,14400892,14390577,"<p>Update: For Jetty version 9.2.2:</p>

<pre><code>    Server server = new Server();

    // Note: if you don't want control over type of connector, etc. you can simply 
    // call new Server(&lt;port&gt;);
    ServerConnector connector = new ServerConnector(server);
    connector.setHost(&quot;0.0.0.0&quot;);
    connector.setPort(8085);
    // Setting the name allows you to serve different app contexts from different connectors.
    connector.setName(&quot;main&quot;);
    server.addConnector(connector);

    WebAppContext context = new WebAppContext();
    context.setContextPath(&quot;/&quot;);
    // For development within an IDE like Eclipse, you can directly point to the web.xml
    context.setWar(&quot;src/main/webapp&quot;);
    context.addFilter(MyFilter.class, &quot;/&quot;, 1);

    HandlerCollection collection = new HandlerCollection();
    RequestLogHandler rlh = new RequestLogHandler();
    // Slf4j - who uses anything else?
    Slf4jRequestLog requestLog = new Slf4jRequestLog();
    requestLog.setExtended(false);
    rlh.setRequestLog(requestLog);
    collection.setHandlers(new Handler[] { context, rlh });
    server.setHandler(collection);

    try {
        server.start();
        server.join();
    } catch (Exception e) {
        // Google guava way
        throw Throwables.propagate(e);
    }
</code></pre>
<hr />
<p>Original answer:</p>
<p>If you don't want to use <code>web.xml</code> then use this:</p>

<pre><code>SocketConnector socketConnector = new SocketConnector();
socketConnector.setPort(7000); // Change to port you want
Server server.setConnectors(new Connector[] { socketConnector });

WebAppContext webapp = new WebAppContext();

webapp.setContextPath(&quot;/&quot;); // For root
webapp.setWar(&quot;/&quot;); // Appropriate file system path.

// Now you can use the various webapp.addFilter() methods
webapp.addFilter(MyFilter.class, &quot;/test&quot;, 1); // Will serve request to /test.
// There are 3 different addFilter() variants.

// Bonus ... request logs.
RequestLogHandler logHandler = new RequestLogHandler();
NCSARequestLog requestLog = new NCSARequestLog(&quot;/tmp/jetty-yyyy_mm_dd.request.log&quot;);
requestLog.setRetainDays(90);
requestLog.setAppend(true);
requestLog.setExtended(false);
requestLog.setLogTimeZone(&quot;GMT&quot;);
logHandler.setRequestLog(requestLog);
    
logHandler.setHandler(webapp);
    
HandlerList handlerList = new HandlerList();
handlerList.addHandler(logHandler);

server.setHandler(handlerList);

server.start();
</code></pre>
<p>If you do want to use <code>web.xml</code>, instead of the <code>addFilter()</code> methods, just make sure you have a <code>WEB-INF/web.xml</code> in your webapp root path with the following XML:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;

&lt;!DOCTYPE web-app
   PUBLIC &quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;
   &quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot;&gt;

&lt;web-app&gt;
    &lt;filter&gt;
        &lt;filter-name&gt;filterName&lt;/filter-name&gt;
        &lt;filter-class&gt;com.x.y.z.FilterClass&lt;/filter-class&gt;
    &lt;/filter&gt;
    &lt;filter-mapping&gt;
        &lt;url-pattern&gt;/test&lt;/url-pattern&gt;
        &lt;filter-name&gt;filterName&lt;/filter-name&gt;
    &lt;/filter-mapping&gt;
&lt;/web-app&gt;
</code></pre>
"
490,253401,1573,532070,Ratna Dinakar,true,15,1511303858,1309100625,6484734,6484644,"<p>Use:</p>

<pre><code>com.sun.source.tree.*
com.sun.source.util.*
</code></pre>

<p>The above packages can be found in tools.jar. Please add tools.jar to classpath. You can find tools.jar in &lt;JDK_HOME>/lib folder. Also, you can extract src.zip and find the related API source files there.</p>
"
491,7835470,430,20977270,Stijn,true,3,1733308979,1733308979,79250819,79250646,"<p>You can use <a href=""https://docs.spring.io/spring-shell/reference/getting-started.html"" rel=""nofollow noreferrer"">Spring Shell</a> for this in Spring Boot</p>
<p>First, add the Spring Shell Dependency</p>
<pre><code>&lt;dependency&gt;
&lt;groupId&gt;org.springframework.shell&lt;/groupId&gt;
&lt;artifactId&gt;spring-shell-starter&lt;/artifactId&gt;
&lt;/dependency&gt;
</code></pre>
<p>Then, add enable the interactive shell in your applicaion.properties</p>
<pre><code>spring.shell.interactive.enabled=true
</code></pre>
<p>or, for yaml:</p>
<pre><code>spring:
  shell:
    interactive:
      enabled: true
</code></pre>
<p>Then, you can write you first command like so:</p>
<pre class=""lang-java prettyprint-override""><code>    @ShellComponent
    public class MyCommands {

        @ShellMethod(key = &quot;hello-world&quot;)
        public String helloWorld(
            @ShellOption(defaultValue = &quot;spring&quot;) String arg
        ) {
            return &quot;Hello world &quot; + arg;
        }
    }
</code></pre>
<p>When you run your spring boot application now, you can type <code>help</code> in the interactive shell and your command will be shown like this:</p>
<pre><code>My Commands
       hello-world:
</code></pre>
<p>Finally, you can invoke it by typing the name of the command into the interactive shell:</p>
<pre><code>shell:&gt;hello-world
Hello world spring

shell:&gt;hello-world --arg boot
Hello world boot
</code></pre>
"
492,4729376,417,3825421,brassmookie,false,0,1733942099,1733942099,79272817,77337343,"<p>Adding to one of the answers above, which may be incomplete for some people.</p>
<p>Add the following to your <code>onCreate()</code> method.</p>
<pre><code>OnBackPressedCallback onBackPressedCallback = new OnBackPressedCallback(true) {
   @Override
   public void handleOnBackPressed() {
      // the 3 lines below replace the functionality of super.onBackPressed();
      setEnabled(false);
      getOnBackPressedDispatcher().onBackPressed();
      setEnabled(true);
      // any additional code
   }
};
getOnBackPressedDispatcher().addCallback(this, onBackPressedCallback);
</code></pre>
"
493,30357108,111,23264202,Pavan Prajapati,false,11,1705586562,1705586562,77839976,77337343,"<p>Use this in your <code>onCreate()</code></p>
<pre><code>OnBackPressedCallback onBackPressedCallback = new OnBackPressedCallback(true) {
        @Override
        public void handleOnBackPressed() {
            // handle backpressed here
        }
    };
    getOnBackPressedDispatcher().addCallback(this,onBackPressedCallback);
</code></pre>
"
494,21741636,1840,16048914,David Weber,false,4,1704896715,1697925054,77337921,77337343,"<p>You need to use <code>onBackPressedDispatcher.addCallback(new ...)</code> in your <code>onCreate()</code>.</p>
<p>You can test its execution by displaying a toast in the callback for example.</p>
"
495,1668855,15073,2700303,MiguelSlv,false,0,1733941820,1733941820,79272808,30761253,"<p>In my case the message was generated by UserDetailsServiceAutoConfiguration, as show in the log bellow:</p>
<blockquote>
<p>2024-12-11 18:24:46,572 WARN  [main] o.s.b.a.s.s.<strong>UserDetailsServiceAutoConfiguration</strong>:</p>
<p>Using generated security password: 3149b84f-6d2f-4f6a-9ebd-64fbadbacb31</p>
<p>This generated password is for development use only. Your security configuration must be updated before running your application in production.</p>
</blockquote>
<p>To disable I simple added it to the excluded list in the EnableAutoConfiguration notation, like this:</p>
<pre><code>@Configuration
@EnableWebSecurity
@EnableAutoConfiguration(exclude = {
       SecurityAutoConfiguration.class,
       UserDetailsServiceAutoConfiguration.class 
})
public class MyConfig {
...
}
</code></pre>
"
496,7953735,855,6003769,Roger Thomas,false,0,1695577081,1695577081,77168225,30761253,"<p>This thread covers historic versions of Spring Boot, but sadly is the first place that Google wants to take anyone if they want to try and disable the default user/password screen as they develop code. Ideas posted so far may work in part, but are also likely to be tripped up by the fact that more people are likely to be using spring-boot-starter-actuator that also expected the security sub-system to be working.</p>
<p>Below is a simple code example that enables permitAll access on any URL requested, with a link to the published blog post that covers the new interface. I hope this saves someone just half the time I have wasted today just trying to view the output of an endpoint.</p>
<pre><code>package com.example.demo;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;

// Using Spring Security to disable the default user/password request screen
//
// based on the info posted here for code using spring security 5.7 or  higher
//
// https://spring.io/blog/2022/02/21/spring-security-without-the-websecurityconfigureradapter
//

@Configuration
public class DisableDefaultAuthenticationManager
{
   @Bean
   public SecurityFilterChain filterChain(HttpSecurity http) throws Exception
   {
      http.authorizeHttpRequests((authz) -&gt; authz.anyRequest().permitAll()); 
      return http.build();
   }
</code></pre>
<p>}</p>
"
498,108117,10469,287138,Stefan Haberl,false,13,1680859321,1680859321,75957153,30761253,"<p>A lot of answers here are actually trying to work against Spring Boot instead of working <em>with</em> the framework.</p>
<p>If you don't have any local users - because for example authentication is managed exclusively with JWT tokens - just tell Spring Boot so.</p>
<p>Declare an empty <code>UserDetailsService</code> as part of your <code>SecurityConfiguration</code> instead of trying to exclude parts of the auto configuration, or setting an unnecessary default user/password in <code>application.properties</code>:</p>
<pre><code>@Configuration
@EnableWebSecurity
class SecurityConfiguration {

   @Bean
   UserDetailsService emptyDetailsService() {
       return username -&gt; { throw new UsernameNotFoundException(&quot;no local users, only JWT tokens allowed&quot;); };
   }

   // rest of your security config

}
</code></pre>
"
499,4895787,11946,3945473,M.P. Korstanje,false,57,1654081185,1654081185,72460696,30761253,"<p>So most of the answers to this question recommend either:</p>
<ul>
<li>excluding some auto-configuration</li>
<li>setting up a user and/or password</li>
</ul>
<p>However excluding auto-configuration is hardly ever the answer. And if your application does not have any users the second solution is not great either.</p>
<p>Instead we should work with Spring Boot.</p>
<p>The log message is generated by <code>UserDetailsServiceAutoConfiguration</code> to let us know Spring Boot put in a sensible default. And looking at the source and documentation for <code>UserDetailsServiceAutoConfiguration</code> we see:</p>
<pre class=""lang-java prettyprint-override""><code>/**
 * {@link EnableAutoConfiguration Auto-configuration} for a Spring Security in-memory
 * {@link AuthenticationManager}. Adds an {@link InMemoryUserDetailsManager} with a
 * default user and generated password. This can be disabled by providing a bean of type
 * {@link AuthenticationManager}, {@link AuthenticationProvider} or
 * {@link UserDetailsService}.
 *
 * @author Dave Syer
 * @author Rob Winch
 * @author Madhura Bhave
 * @since 2.0.0
 */
@Configuration(proxyBeanMethods = false)
@ConditionalOnClass(AuthenticationManager.class)
@ConditionalOnBean(ObjectPostProcessor.class)
@ConditionalOnMissingBean(
        value = { AuthenticationManager.class, AuthenticationProvider.class, UserDetailsService.class,
                AuthenticationManagerResolver.class },
        type = { &quot;org.springframework.security.oauth2.jwt.JwtDecoder&quot;,
                &quot;org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector&quot;,
                &quot;org.springframework.security.oauth2.client.registration.ClientRegistrationRepository&quot; })
public class UserDetailsServiceAutoConfiguration {
</code></pre>
<p>We can see that the <code>UserDetailsServiceAutoConfiguration</code> is disabled when any of these beans are provided: <code>AuthenticationManager</code>, <code>AuthenticationProvider</code>, <code>UserDetailsService</code>, or <code> AuthenticationManagerResolver</code>.</p>
<p>This means that when tell Spring Boot how we want to authenticate our users, Spring Boot will not auto-configure a sensible default. Since we don't want to authenticate any users we can provide:</p>
<pre class=""lang-java prettyprint-override""><code>@Configuration
public class ApplicationConfiguration {

    @Bean
    public AuthenticationManager noopAuthenticationManager() {
        return authentication -&gt; {
            throw new AuthenticationServiceException(&quot;Authentication is disabled&quot;);
        };
    }
}
</code></pre>
"
500,291162,3232,593146,Zyl,false,0,1733938906,1732546009,79223501,3214448,"<p>You <em>can</em> write a single big method which does it all, but it will likely demand more logic than you need. Even in my attempt I already decided to partially single out <code>BigInteger</code> and <code>BigDecimal</code> because of how different they are from the basic numeric types:</p>
<pre class=""lang-java prettyprint-override""><code>public static boolean equals(BigInteger a, BigInteger b) {
    if (a == b) {
        return true;
    }
    if (a == null || b == null) {
        return false;
    }
    return a.compareTo(b) == 0;
}

public static boolean equals(BigDecimal a, BigDecimal b) {
    if (a == b) {
        return true;
    }
    if (a == null || b == null) {
        return false;
    }
    return a.compareTo(b) == 0;
}

public static boolean equals(BigInteger a, BigDecimal b) {
    return equals(b, a);
}

public static boolean equals(BigDecimal a, BigInteger b) {
    if (a == null &amp;&amp; b == null) {
        return true;
    }
    if (a == null || b == null) {
        return false;
    }
    try {
        return a.toBigIntegerExact().compareTo(b) == 0;
    } catch (ArithmeticException ex) {}
    return false;
}

public static boolean equals(Number a, Number b) {
    if (a == b) {
        return true;
    }
    if (a == null || b == null) {
        return false;
    }

    boolean canLongA = canLong(a);
    boolean canLongB = canLong(b);
    if (canLongA &amp;&amp; canLongB) {
        return a.longValue() == b.longValue();
    }
    if (canLongA != canLongB) {
        return false;
    }

    if ((a instanceof Double || a instanceof Float) &amp;&amp; (b instanceof Double || b instanceof Float)) {
        return a.doubleValue() == b.doubleValue();
    }

    if (a.getClass() == b.getClass()) {
        return a.equals(b); // Apparently this is already a risky bet; see behavior of BigInteger.equals().
    }

    throw new IllegalArgumentException(&quot;insufficient type-awareness to compare a to b.&quot;);
}

public static boolean canLong(Number n) {
    if (n instanceof Float || n instanceof Double) {
        double d = n.doubleValue();

        // Float and Double represent Long.MIN_VALUE and Long.MAX_VALUE with larger magnitude, so the bounds are exclusive.
        return d &gt; Long.MIN_VALUE &amp;&amp; d &lt; Long.MAX_VALUE &amp;&amp; d % 1 == 0;
    }

    // Inspired by DecimalFormat
    if (n instanceof Long || n instanceof AtomicLong || n instanceof Integer || n instanceof AtomicInteger || n instanceof Short || n instanceof Byte) {
        return true;
    }

    if (n instanceof BigInteger big) {
        return big.bitLength() &lt; 64;
    };

    if (n instanceof BigDecimal dec) {
        try {
            dec.longValueExact();
            return true;
        } catch (ArithmeticException ex) {}
        return false;
    }

    throw new IllegalArgumentException(&quot;insufficient type-awareness to determine whether n is representable as long.&quot;);
}
</code></pre>
<p>An approach with less room for runtime exceptions and silent failures is to provide only concretely typed overloads:</p>
<pre class=""lang-java prettyprint-override""><code>public static boolean equals(Integer a, Long b) {
    return equals(b, a);
}

public static boolean equals(Long a, Integer b) {
    if (a == null &amp;&amp; b == null) {
        return true;
    }
    if (a == null || b == null) {
        return false;
    }
    return a.longValue() == b.longValue();
}

public static boolean equals(Float a, Double b) {
    return equals(b, a);
}

public static boolean equals(Double a, Float b) {
    if (a == null &amp;&amp; b == null) {
        return true;
    }
    if (a == null || b == null) {
        return false;
    }
    return a.doubleValue() == b.doubleValue();
}
</code></pre>
<p>Doing this for all permutations would yield a lot of code, but could be done. Doing it this way reveals the true size of the problem and likely offers better performance.</p>
<p>In any case, knowledge about the types involved cannot be avoided due to <code>Number</code> not exposing any methods to get a complete description of the real number being represented. In fact, it does not even limit implementers to use it to describe only real numbers; only that it be convertible to <code>byte</code>, <code>short</code>, <code>int</code>, <code>long</code>, <code>float</code> and <code>double</code>.</p>
<p>The notion that code is a liability is quite helpful here. Unless you have the explicit goal of writing a library, it's probably a good idea to only implement the cases you need to expect.</p>
<p>Finally, there is also the dichotomy of whether <code>a == null &amp;&amp; b == null</code> should return <code>true</code>. It is not possible to decide that without knowing the surrounding semantics; the educated guess made in above code could be just right, could be irrelevant, or could be completely wrong.</p>
"
501,17256173,29,12495207,Ghareeb Nawaz,false,1,1575707205,1575706226,59224151,3214448,"<pre><code>    public static boolean compareTo(Number d1, Number d2) {
    Double num1=d1.doubleValue();
    Double num2=d2.doubleValue();
     if(Double.compare(num1, num2)==0)
         return true;
     else
         return false;

}

OR
    public static boolean compareTo(Number d1, Number d2) {
     if(d1.doubleValue()==d2.doubleValue())
         return true;
     else
         return false;

}
</code></pre>
"
502,2422627,317,2115284,Lian,false,18,1657068597,1361967135,15111857,3214448,"<p>To compare two Numbers in Java you can use the <code>compareTo</code> from <code>BigDecimal</code>. BigDecimal can hold everything from short until double or BigInteger, so it's the perfect class for this.</p>
<p>So you can try to write something like this:</p>
<pre><code>public int compareTo(Number n1, Number n2) {
    // ignoring null handling
    BigDecimal b1 = BigDecimal.valueOf(n1.doubleValue());
    BigDecimal b2 = BigDecimal.valueOf(n2.doubleValue());
    return b1.compareTo(b2);
}
</code></pre>
<p>This is surely not the best approach regarding to performance.
The following tests worked so far, at least with JDK7:</p>
<pre><code>assertTrue(compareTo(new Integer(1), new Integer(2)) == -1);
assertTrue(compareTo(new Integer(1), new Double(2.0)) == -1);
assertTrue(compareTo(new Integer(1), new Double(Double.MAX_VALUE)) == -1);
assertTrue(compareTo(new Integer(1), new Double(Double.MIN_VALUE)) == 1);
assertTrue(compareTo(new Integer(1), new Double(1.000001)) == -1);
assertTrue(compareTo(new Integer(1), new Double(1.000)) == 0);
assertTrue(compareTo(new Integer(1), new Double(0.25*4)) == 0);
assertTrue(compareTo(new Integer(1), new AtomicLong(1)) == 0);
</code></pre>
"
503,36232,27404,103206,Jay,false,2,1278695026,1278695026,3214901,3214448,"<p>On a tangent to a couple of the responses, may I suggest that instead of writing something like:</p>

<pre><code>boolean compare(Object o1, Object o2)
{
  if (o1==null)
    return o2==null;
  if (o2==null)
    return false;
  return o1.equals(o2);
}
</code></pre>

<p>It's much more concise, and I believe slightly more efficient, to write:</p>

<pre><code>boolean compare(Object o1, Object o2)
{
  return o1==o2 || o1!=null &amp;&amp; o2!=null &amp;&amp; o1.equals(o2);
}
</code></pre>

<p>If both are null, o1==o2 will return true. If they're not but they're the same object, that's fine too.</p>

<p>Technically the o2!=null is not necessary for most implementations of equals, but if you were really being so generic as to do this on Objects as in the above example, you of course wouldn't know how every override was written.</p>
"
504,62440,23363,185541,rsp,false,0,1278692259,1278692259,3214545,3214448,"<p>Comparing numbers between integer and floating point is almost never going to yield what you are after. If however this is a simple exercise, you could implement the comparison by comparing the string representations of the values, as in:</p>

<pre><code>public boolean areEqual(Number first, Number second) {
    if (first == null) {
        return second == null;
    }
    if (second == null) {
        return false;
    }

    return first.toString().equals(second.toString());
}
</code></pre>
"
505,3273937,120708,2756547,Artem Bilan,true,1,1733937287,1733937287,79272613,79272324,"<p>Consider to use a <code>ThreadPoolTaskExecutor</code> instead of that <code>Executors.newCachedThreadPool()</code> and as a bean. It has a proper lifecycle management when Spring application is shouted down.</p>
<p>See more info in docs: <a href=""https://docs.spring.io/spring-framework/reference/integration/scheduling.html#scheduling-task-executor"" rel=""nofollow noreferrer"">https://docs.spring.io/spring-framework/reference/integration/scheduling.html#scheduling-task-executor</a></p>
"
525,5594376,71,4432563,Pawel,false,5,1674550609,1674549712,75219132,75187134,"<p>I was able to fix (workaround) the error by adding @Param annotation to all repository methods implemented with JpaRepository, ex.:</p>
<p><code>Optional&lt;File&gt; findByFileType(@Param(&quot;fileType&quot;) String fileType);</code></p>
<p>When the method did not have any @Param I was getting the 500 error, when I added the annotation to all methods in all repositories now the Swagger loads correctly.</p>
<p>Edit.
After more testing it seems the issue is in my case only with the only 2 paramters method in my repositories, so I had only to add the @Param to one method in all my repositories:</p>
<p><code>Optional&lt;Dictionary&gt; findByDictionaryNameAndDictionaryValue( @Param(&quot;dictionaryName&quot;) String dictionaryName,  @Param(&quot;dictionaryValue&quot;) String dictionaryValue);</code></p>
<p>The second method in this repository and other repositories do not need @Param annotation in my case.</p>
"
526,4954061,81,5221426,habelson,false,0,1733931221,1733931221,79272290,58762598,"<p>I know this is an older question, but you can just call Pageable.unpaged(Sort sort) which will create an unpaged but sorted pageable.</p>
"
506,5569841,6515,4415625,dani-vta,true,1,1733936453,1733918893,79271655,79271530,"<p>If you take a look at the implementation of the <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/Collection.java#L747"" rel=""nofollow noreferrer""><code>Collection.stream()</code></a> method, you would see that this invokes the <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/StreamSupport.java#L67"" rel=""nofollow noreferrer""><code>StreamSupport.stream()</code></a> method, which creates a new instance of the <strong>concrete</strong> static nested class <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/ReferencePipeline.java#L787"" rel=""nofollow noreferrer""><code>ReferencePipeline.Head</code></a>. The two classes <code>ReferencePipeline</code> and <code>ReferencePipeline.Head</code> basically provide your stream implementation.</p>
<p>In fact, when you ask about the implementation of the <em>collection iteration</em>, or a better phrasing: <em>the iteration of the stream elements</em>, this is handled by the <code>ReferencePipeline</code> class. This abstract class contains the implementation of all stream operations (<a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/ReferencePipeline.java#L805"" rel=""nofollow noreferrer""><code>forEach()</code></a>, <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/ReferencePipeline.java#L753"" rel=""nofollow noreferrer""><code>count()</code></a>, etc.).</p>
<p>For example, the <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/ReferencePipeline.java#L805"" rel=""nofollow noreferrer""><code>forEach()</code></a> operation iterates non-parallel streams via the <code>Spliterator.forEachRemaining()</code> method. The <code>count()</code> operation relies on the <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/ReduceOps.java#L253"" rel=""nofollow noreferrer""><code>evaluateSequential()</code></a> or <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/ReduceOps.java#L262"" rel=""nofollow noreferrer""><code>evaluateParallel()</code></a> to compute the value via a <code>Spliterator</code>. As you can see, under the hood, the <em>iteration</em> actually happens in <em>terminal operations</em> via iterators. This is because streams are <a href=""https://docs.oracle.com/javase/tutorial/collections/streams/parallelism.html#laziness"" rel=""nofollow noreferrer"">lazily evaluated</a>, and unless their operations aren't used by a terminal operation, these are not executed at all.</p>
<p>Taking on from @Slaw's comment, I've decided to include a debug example of the <code>count()</code> terminal operation. Supposing that we have the following line of code <code>List.of(1,2,3).stream().count();</code>.</p>
<ol>
<li><p>When we step into <code>count()</code>, we can see that the <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/ReferencePipeline.java#L753"" rel=""nofollow noreferrer""><code>ReferencePipeline.count()</code></a> method is invoked.</p>
</li>
<li><p>Inside this method, it is made a call to <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/AbstractPipeline.java#L257"" rel=""nofollow noreferrer""><code>AbstractPipeline.evaluate()</code></a> by passing an implementation of the <code>TerminalOp</code> interface returned from the <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/ReduceOps.java#L246"" rel=""nofollow noreferrer""><code>ReduceOps.makeRefCounting()</code></a> method (this argument passage is important for later).</p>
</li>
<li><p>Once inside <code>evaluate()</code>, since the stream is not parallel, the method invokes <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/ReduceOps.java#L253"" rel=""nofollow noreferrer""><code>evaluateSequential()</code></a> from a <code>TerminalOp</code> instance.</p>
</li>
<li><p>The instance in question is an anonymous implementation of the <code>ReduceOp</code> abstract class. Specifically, the exact instance returned by <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/ReduceOps.java#L246"" rel=""nofollow noreferrer""><code>ReduceOps.makeRefCounting()</code></a> at step 2.</p>
</li>
<li><p>At this point, we can see that the <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/ReduceOps.java#L253"" rel=""nofollow noreferrer""><code>evaluateSequential()</code></a> being executed is the one defined in the anonymous <code>ReduceOp</code> definition made in the <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/ReduceOps.java#L246"" rel=""nofollow noreferrer""><code>ReduceOps.makeRefCounting()</code></a> method.</p>
</li>
<li><p>Inside of <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/ReduceOps.java#L253"" rel=""nofollow noreferrer""><code>evaluateSequential()</code></a>, it is made an invocation to the <code>PipelineHelper.exactOutputSizeIfKnown()</code> method, whose definition is the one inherited from <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/AbstractPipeline.java#L529"" rel=""nofollow noreferrer""><code>AbstractPipeline.exactOutputSizeIfKnown()</code></a>.</p>
</li>
<li><p>Lastly, once we step into <a href=""https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/AbstractPipeline.java#L529"" rel=""nofollow noreferrer""><code>AbstractPipeline.exactOutputSizeIfKnown()</code></a>, we can see that the size is computed from the <code>getExactSizeIfKnown()</code> method of the given <code>Spliterator</code> instance.</p>
</li>
</ol>
"
507,1416522,95127,3553087,Brian Goetz,true,46,1653906725,1587131293,61273216,61261226,"<p>Java arrays pose several challenges for records, and these added a number of constraints to the design.  Arrays are mutable, and their equality semantics (inherited from Object) is by identity, not contents.</p>
<p>The basic problem with your example is that you wish that <code>equals()</code> on arrays meant content equality, not reference equality.  The (default) semantics for <code>equals()</code> for records is based on equality of the components; in your example, the two <code>Foo</code> records containing distinct arrays <em>are</em> different, and the record is behaving correctly.  The problem is you just wish the equality comparison were different.</p>
<p>That said, you can declare a record with the semantics you want, it just takes more work, and you may feel like is is too much work.  Here's a record that does what you want:</p>
<pre><code>record Foo(String[] ss) {
    Foo { ss = ss.clone(); }
    String[] ss() { return ss.clone(); }
    public boolean equals(Object o) { 
        return o instanceof Foo f &amp;&amp; Arrays.equals(f.ss, ss);
    }
    public int hashCode() { return Objects.hash(Arrays.hashCode(ss)); }
}
</code></pre>
<p>What this does is a defensive copy on the way in (in the constructor) and on the way out (in the accessor), as well as adjusting the equality semantics to use the contents of the array.  This supports the invariant, required in the superclass <code>java.lang.Record</code>, that &quot;taking apart a record into its components, and reconstructing the components into a new record, yields an equal record.&quot;</p>
<p>You might well say &quot;but that's too much work, I wanted to use records so I didn't have to type all that stuff.&quot;  But, records are not primarily a syntactic tool (though they are syntactically more pleasant), they are a semantic tool: records are <em>nominal tuples</em>.  Most of the time, the compact syntax also yields the desired semantics, but if you want different semantics, you have to do some extra work.</p>
"
508,322981,335891,642706,Basil Bourque,false,14,1733936155,1587085726,61262553,61261226,"<h1><code>List&lt; Integer &gt;</code> workaround</h1>
<p>Workaround: Use a <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/List.html"" rel=""nofollow noreferrer""><code>List</code></a> of <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Integer.html"" rel=""nofollow noreferrer""><code>Integer</code></a> objects (<code>List&lt; Integer &gt;</code>) rather than array of primitives (<code>int[]</code>).</p>
<p>In this example, I instantiate an <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/List.html#unmodifiable"" rel=""nofollow noreferrer"">unmodifiable list</a> of unspecified class by using the <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/List.html#of(E,E)"" rel=""nofollow noreferrer""><code>List.of</code></a> feature added to Java 9. You could just as well use <a href=""https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ArrayList.html"" rel=""nofollow noreferrer""><code>ArrayList</code></a>, for a modifiable list backed by an array.</p>
<pre><code>record Foo( List &lt; Integer &gt;integers ) {}

List&lt; Integer &gt; integers = List.of( 1 , 2 );
var foo = new Foo( integers );

System.out.println( foo ); // Foo[integers=[1, 2]]
System.out.println( new Foo( List.of( 1 , 2 ) ).equals( new Foo( List.of( 1 , 2 ) ) ) ); // true
System.out.println( new Foo( integers ).equals( new Foo( integers ) ) ); // true
System.out.println( foo.equals( foo ) ); // true
</code></pre>
"
509,6780825,158777,5221149,Andreas,false,7,1587078337,1587078337,61261537,61261226,"<p><strong><em>Workaround:</em></strong> Create an <code>IntArray</code> class and wrap the <code>int[]</code>.</p>

<pre><code>record Foo(IntArray ints) {
    public Foo(int... ints) { this(new IntArray(ints)); }
    public int[] getInts() { return this.ints.get(); }
}
</code></pre>

<p>Not perfect, because you now have to call <code>foo.getInts()</code> instead of <code>foo.ints()</code>, but everything else works the way you want.</p>

<pre><code>public final class IntArray {
    private final int[] array;
    public IntArray(int[] array) {
        this.array = Objects.requireNonNull(array);
    }
    public int[] get() {
        return this.array;
    }
    @Override
    public int hashCode() {
        return Arrays.hashCode(this.array);
    }
    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null || getClass() != obj.getClass())
            return false;
        IntArray that = (IntArray) obj;
        return Arrays.equals(this.array, that.array);
    }
    @Override
    public String toString() {
        return Arrays.toString(this.array);
    }
}
</code></pre>

<p><em>Output</em></p>

<pre class=""lang-none prettyprint-override""><code>Foo[ints=[1, 2]]
true
true
true
</code></pre>
"
510,1483039,8839,1391924,Chandrayya G K,true,2,1393916839,1393916839,22165162,22164656,"<p>Right click on the project. Go to <code>Replace With -&gt; HEAD Revision</code> this will overwrite local changes</p>
"
511,7532056,1897,5719810,Shamsul Arefin,false,0,1728278945,1728278945,79060682,31319358,"<p>The solution that worked for me is creating a seperate DTO class. where I dont have any field that has @jsonbackreference annotation and also No field which is a Model (which can contain inside a jsonbackreference or jsonmanagedreference).</p>
<p>I think the solution stems from incorrect mapping or inifite recursion of fields.</p>
"
527,10791884,73,7940628,emolano,false,1,1714138841,1714138841,78390852,58762598,"<p>This is one way to do this:</p>
<pre><code>PageRequest.of(0, Integer.MAX_VALUE, Sort.by(&quot;age&quot;));
</code></pre>
<p>It works because size is an Integer. It's not the prettiest solution, but I think it's better than creating another function.</p>
"
528,17382009,31,12594040,Neha P,false,-2,1618295156,1618295156,67069715,58762598,"<p>You could pass <code>Pageable.unpaged()</code> in the query and then sort the result (<code>list.getContent().sort(Comparator.comparing(Item::getName))</code>) if you are adamant about using the existing query.</p>
"
512,5973459,922,4695118,Andrew S.,false,7,1563276635,1563274938,57055767,31319358,"<p>As write Rajat Verma, his solution works perfectly. Thanks man you saved me lot of time and anger :-)</p>

<blockquote>
  <p><strong>The important Part:</strong><br>
  You need define fields as <code>List</code>, I had that as <code>Set</code> before and this solution NOT WORKING (appears as infinite loop)!</p>
</blockquote>

<p>I add my solution:</p>

<pre><code>@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = ""id"", scope = Long.class)
public class Agent {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @ManyToMany(mappedBy = ""subscribers"")
    @ApiModelProperty(dataType = ""List"", example = ""[1,2,3]"") // for Swagger
    @JsonIdentityReference(alwaysAsId = true) // show only id of Topic
    private final List&lt;Topic&gt; subscribeTopics = new ArrayList&lt;&gt;()
}

 @JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = ""id"", scope = Long.class)
 public class Topic {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;

    @ManyToMany(cascade = {CascadeType.DETACH, CascadeType.MERGE, CascadeType.PERSIST, CascadeType.REFRESH})
    @JoinTable(name = ""topic_agent"",
        joinColumns = @JoinColumn(name = ""fk_topic_id""),
        inverseJoinColumns = @JoinColumn(name = ""fk_agent_id""))
    @ApiModelProperty(dataType = ""List"", example = ""[1,2,3]"")
    @JsonIdentityReference(alwaysAsId = true)
    private final List&lt;Agent&gt; subscribers = new ArrayList&lt;&gt;();
 }
</code></pre>
"
513,8012388,3493,6043669,HopeKing,false,14,1733935268,1492522907,43473926,31319358,"<p><strong><code>@JsonManagedReference</code></strong> -&gt; Manages the forward part of the reference and the fields marked by this annotation are the ones that get serialized</p>
<p><strong><code>@JsonBackReference</code></strong> -&gt; Manages the reverse part of the reference and the fields/collections marked with this annotation are not serialized.</p>
<p><strong>Use case:</strong>
You have one-to-many or many-to-many relationships in your entities/tables and not using the above would lead to errors like:</p>
<pre><code>Infinite Recursion and hence stackoverflow - &gt; Could not write content: Infinite recursion (StackOverflowError)
</code></pre>
<p>The above error occurs because Jackson (or some other similar) tries to serialize both ends of the relationship and ends up in a recursion.</p>
<p><code>@JsonIgnore</code> performs similar functions but the annotations mentioned above are preferable.</p>
"
514,1800179,3466,1638718,ooozguuur,false,5,1479461486,1479461486,40673538,31319358,"<p><code>@JsonManagedReference</code> and <code>@JsonBackReference</code> are designed to handle this two-way linkage between fields, one for Parent role, the other for Child role.</p>

<blockquote>
  <p>For avoiding the problem, linkage is handled such that the property
  annotated with @JsonManagedReference annotation is handled normally
  (serialized normally, no special handling for deserialization) and the
  property annotated with @JsonBackReference annotation is not
  serialized; and during deserialization, its value is set to instance
  that has the ""managed"" (forward) link.</p>
</blockquote>
"
515,152539,19997,367141,David,true,83,1733935400,1436450035,31319631,31319358,"<blockquote>
<p><code>@JsonManagedReference</code> is the forward part of reference – the one that
gets serialized normally.</p>
<p><code>@JsonBackReference</code> is the back part of
reference – it will be omitted from serialization.</p>
</blockquote>
<p>So they depend on the direction of your relationship:</p>
<pre><code>public class User {
    public int id;
    public String name;
 
    @JsonManagedReference
    public List&lt;Item&gt; userItems; 
} 

public class Item {
    public int id;
    public String itemName;
 
    @JsonBackReference
    public User owner; 
 }
</code></pre>
<p>A useful guide for more details: <a href=""https://www.baeldung.com/jackson-bidirectional-relationships-and-infinite-recursion"" rel=""nofollow noreferrer"">https://www.baeldung.com/jackson-bidirectional-relationships-and-infinite-recursion</a></p>
"
516,1047407,536,1052132,Lotzy,false,0,1733931425,1733931425,79272307,75732794,"<p>In my case Srping Boot v3.4.0 + springdoc-openapi-starter-webmvc-ui v2.6.0 =&gt; error</p>
<p>Upgrading springdoc-openapi-starter-webmvc-ui to v2.7.0 =&gt; ok</p>
"
517,26420826,33,20068533,Farid Guluzade,false,0,1731274292,1731274292,79175861,75732794,"<p>I am already using Spring Boot 3.2.6, and the same problem occurred. These dependencies fixed my problem:</p>
<pre><code>implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
implementation 'io.swagger.core.v3:swagger-annotations-jakarta:2.2.10'
implementation 'io.swagger.core.v3:swagger-core:2.2.10'
</code></pre>
"
518,13133765,3765,12553450,Mafei,false,0,1725904906,1725904906,78966722,75732794,"<h3>Most probably it can be a cache issue.</h3>
<p>Remove all dependencies under swagger (<code>C:\Users\{user}\.m2\repository\io\swagger</code>) in local maven cache and rerun or compile the project again. good luck!</p>
"
519,19168283,55,14002558,Mohammed Masood Ansari,false,4,1723448280,1700804903,77540966,75732794,"<p>Please add these two dependency in pom.xml file. It worked for me.</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;org.springdoc&lt;/groupId&gt;
    &lt;artifactId&gt;springdoc-openapi-starter-webmvc-ui&lt;/artifactId&gt;
    &lt;version&gt;2.0.3&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
    &lt;groupId&gt;io.swagger.core.v3&lt;/groupId&gt;
    &lt;artifactId&gt;swagger-annotations&lt;/artifactId&gt;
    &lt;version&gt;2.2.16&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
"
520,2794316,2214,2403836,mr nooby noob,false,11,1723448716,1695815876,77187302,75732794,"<p>In my case, even though I have springdoc-openapi-starter-webmvc-ui i also had to add this dependency</p>
<p>mvn</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;dependency&gt;
    &lt;groupId&gt;io.swagger.core.v3&lt;/groupId&gt;
    &lt;artifactId&gt;swagger-annotations&lt;/artifactId&gt;
    &lt;version&gt;2.2.16&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
"
521,1047407,536,1052132,Lotzy,false,1,1733931233,1733931233,79272291,75187134,"<p>If anybody uses Spring Boot v3.4.0 with springdoc-openapi-starter-webmvc-ui v2.6.0 and gets similar error on the swagger page, update springdoc-openapi-starter-webmvc-ui to v2.7.0 should solve the issue.</p>
"
522,37491789,44,28272910,Girish G,false,0,1731495476,1731495476,79184576,75187134,"<p>Another way some one might help in Spring Boot 3 is way of adding these two dependencies</p>
<pre><code>implementation(&quot;org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0&quot;)
implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'
</code></pre>
<p>make sure to exclude it from other SDKs if its referencing.</p>
"
523,25326567,85,19147117,h1alexbel,false,1,1711385500,1711385500,78220586,75187134,"<p>my problem was fixed by removing an additional slash (<code>/</code>) from the request. This one should return you an expected JSON response: <code>/v3/api-docs</code>, while this one: <code>/v3/api-docs/</code> will return you:</p>
<pre class=""lang-json prettyprint-override""><code>{
  &quot;message&quot;: &quot;No static resource v3/api-docs.&quot;
}
</code></pre>
"
529,43980,22504,128812,gpeche,false,7,1573200224,1573200224,58762676,58762598,"<p>According to <a href=""https://docs.spring.io/spring-data/data-jpa/docs/current/reference/html/#jpa.query-methods.sorting"" rel=""noreferrer"">the documentation for the current version of Spring Data JPA</a>, you can pass a <code>Sort</code> directly to a query method, so you could have two versions of the same query method:</p>

<ul>
<li>One receiving a <code>Pageable</code>, for use when you have a ""full"" <code>Pageable</code>.</li>
<li>Another one receiving a <code>Sort</code>, for use when you just want to perform sorting.</li>
</ul>
"
530,42117,30778,122607,Pops,false,1,1733930869,1321290800,8125342,8090386,"<p>One common way to save form values is to set up a <code>PropertyModel</code>
relationship between the form component (in your case, the text field) and some variable in your Java code.</p>
<p>For example, if you're trying to get the name of a company's CEO, you might use</p>
<pre><code>Company theCompany = new Company();
// ...
add(new TextField(&quot;ceoName&quot;, new PropertyModel(theCompany, &quot;ceo&quot;)));
</code></pre>
<p>in your page class,</p>
<pre><code>&lt;input type=&quot;text&quot; wicket:id=&quot;ceoName&quot;&gt;
</code></pre>
<p>in your markup and</p>
<pre><code>class Company {
    String ceo;
    // ...
</code></pre>
<p>elsewhere.</p>
<p>If you provide more information about what you're trying to do, I and others might be able to provide more specific/helpful answers.</p>
"
531,13669828,633,9862732,Sergey  Molchanovsky,false,0,1733930046,1733930046,79272217,9619030,"<p>I encountered this problem when we upgraded our Flutter project to JAVA_17 and Gradle 8.</p>
<p>In my case, the solution was just updating all the SDK Tools in Android Studio:</p>
<p><a href=""https://i.sstatic.net/GPcG8eiQ.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/GPcG8eiQ.png"" alt=""screenshot"" /></a></p>
"
532,143589,1512,352035,AutomatedMike,false,0,1727090870,1727090870,79014410,9619030,"<p>None of the previous answers worked for me using Spring 5 in the situation where I don't control the code making the http connection.</p>
<p>The following code disables SSL Certificate verification for all new RestTemplates:</p>
<pre><code>@Bean
public RestTemplateCustomizer restTemplateCustomizer() {
    return restTemplate -&gt; {
        try {
            SSLContext sslContext = SSLContextBuilder.create()
                    .loadTrustMaterial((TrustStrategy) (chain, authType) -&gt; true)
                    .build();

            SSLConnectionSocketFactory socketFactory = 
                    new SSLConnectionSocketFactory(
                        sslContext, NoopHostnameVerifier.INSTANCE);

            PoolingHttpClientConnectionManager connectionManager = 
                    PoolingHttpClientConnectionManagerBuilder.create()
                        .setSSLSocketFactory(socketFactory)
                        .build();

            CloseableHttpClient httpClient = HttpClients.custom()
                    .setConnectionManager(connectionManager)
                    .build();

            HttpComponentsClientHttpRequestFactory requestFactory = 
                    new HttpComponentsClientHttpRequestFactory(httpClient);

            restTemplate.setRequestFactory(requestFactory);

        } catch (Exception e) {
            e.printStackTrace();
        }
    };
</code></pre>
"
533,9107988,3727,6777695,Hakan54,false,1,1700882072,1700813767,77541597,9619030,"<p>I would like to suggest a simple alternative based on <a href=""https://github.com/Hakky54/certificate-ripper"" rel=""nofollow noreferrer"">certificate ripper</a> which I have built myself. It extracts the server certificate and adds it the cacert truststore of the jdk. See below for the command.</p>
<pre><code>crip export jks -u=https://[HOST:[PORT] -d=$JAVA_HOME/jre/lib/security/cacerts
</code></pre>
<p>In some cases you need to run it with sudo or admin rights. It is available for Windows, Mac and Linux. Binaries can be found here: <a href=""https://github.com/Hakky54/certificate-ripper/releases"" rel=""nofollow noreferrer"">certificate ripper binaries</a></p>
"
534,1603708,99,1484228,LostBuzz,false,1,1690827224,1690827224,76806168,9619030,"<p>I ran into this issue today (same PKIX error) after setting up a brand new project and was completely confused since I had previously imported my security certificate for my organization using the steps outlined above.  In fact, project performing a similar function did not have this issue.</p>
<p><strong>I realized that the version of the MS SQL JDBC library Gradle was grabbing was the newest one (12.2.0.jre8 as of this answer) and my other project was using version 8.4.1.jre8.  Once I specified the old version, I was up and running.</strong></p>
<p>I realize this answer doesn't explain what about the new version is causing the issue but I'm hoping it helps someone in a pinch.  I've wasted a lot of time on this already.</p>
<p>My project is using Spring Boot, Gradle wrapper, Java 8, JPA and MS SQL Server.</p>
"
535,1618670,1385,1495703,Harish Gyanani,false,0,1684701010,1684701010,76301812,9619030,"<p>In my case Charles Mac Os Proxy was the issue.<br />
Steps to resolve -</p>
<ol>
<li>If charles is activated/opened then go to &quot;Proxy&quot; menu, unselect &quot;Mac OS X Proxy&quot; option.</li>
<li>Kill all java processes using &quot;Activity Monitor&quot; app and try again.</li>
</ol>
"
536,13566136,305,9786128,Muhammad Taha,false,0,1733927286,1733927286,79272071,77973038,"<p>Create <strong>Empty Views Activity</strong> instead of <strong>Empty Avtivity</strong>
<a href=""https://i.sstatic.net/mdnzbAJD.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/mdnzbAJD.png"" alt=""enter image description here"" /></a></p>
"
537,4250491,593,3477733,Mohammad nagdawi,false,0,1728583988,1728583988,79075677,77973038,"<p>Not all templates support Java. Try to choose another template for the new project, e.g. no activity or basic view activity, and then you will find a language droplist where you can select your preferred language.</p>
"
538,9036760,21,6732430,dvm,false,1,1727707607,1727707607,79039901,77973038,"<p><a href=""https://i.sstatic.net/iVHzTJj8.png"" rel=""nofollow noreferrer"">new project wizard Android Studio as of 09202024</a></p>
<p>While in the New Project Wizard, do not choose the &quot;Empty Activity&quot;. Instead, choose the &quot;Empty Views Activity&quot; template. This will allow you to select your language preference. So you don't have to build from scratch to use Java. You can also do what the others proposed and start from scratch. There are no rules here but it does increase the barrier of entry into Android development.</p>
<p>TANGENT =&gt; After some exploration I found that Android Studio color coded the templates in the wizard. Any purple banner'ed template do not have a field that allows the developer to choose their language preference. Any green banner'ed template allows the developer to choose their language preference.</p>
<p>I attempted some screen shots but this platform is understandably harsh on noobs to it. I guess I need some cred... hopefully I get some from this effort :)
<a href=""https://i.sstatic.net/fzh8ngf6.png"" rel=""nofollow noreferrer"">the next form when a green banner'ed template is selected</a>
<a href=""https://i.sstatic.net/yG7BFV0w.png"" rel=""nofollow noreferrer"">the next form when a purple banner'ed template is selected</a></p>
"
539,8830742,111,6597235,Yatendra Sen,false,8,1708425070,1708425070,78026581,77973038,"<p>You can create new project using java language using below steps:</p>
<ol>
<li>Open Android Studio</li>
<li>click on new project</li>
<li>Select <strong>Empty Views Activity</strong></li>
<li>Click on next button</li>
<li>Then select <strong>Java</strong> from <strong>Language</strong> drop down section</li>
<li>Then select <strong>Groovy DSL (build.gradle)</strong> from <strong>Build Configuration Language</strong> drop down</li>
<li>Now click Finish button.</li>
</ol>
"
540,24547019,36,18456722,Muhammed Duzgun,false,0,1707930930,1707930930,77996134,77973038,"<p>android studio hedgehog starts with kotlin files but we can still create the java classes. create a new activity and choose the java in source language section.<a href=""https://i.sstatic.net/3Tylh.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/3Tylh.jpg"" alt=""here is the opotions"" /></a></p>
"
541,190479,1404,430480,Rajeev,true,2,1373524195,1373524195,17586505,17489970,"<p>I hope I am not too late with this reply.</p>

<p>First things first:
from the same <a href=""http://www.developer.nokia.com/Community/Wiki/AMR_format"" rel=""nofollow"">reference</a>
you can see that the first 6 bytes (the file header) should be 0x23, 0x21, 0x41, 0x4D, 0x52, 0x0A. This is a constant value and should always be there. If it is not present then the file is probably corrupted and should not be used. So you should not blindly skip the first 6 bytes.</p>

<p>Now, AMR codec supports DTX (discontinuous transmission). DTX is nothing but a way of saving bandwidth by producing less data when vocoder detects silence. Your amr parser should be ready to expect DTX. For AMR-NB (amr narrow band or simply amr) DTX is signalled using mode 8. So your CMR Map should contain the below entry</p>

<blockquote>
  <p>8 AMR    SID        6  (SID is silence indicator...indicates that silence period is starting)</p>
</blockquote>

<p>After SID, there will be actual silence frames which will be 1 byte in length (just the header...NO DATA), so you should have entry for</p>

<blockquote>
  <p>15 AMR    NO_DATA 1</p>
</blockquote>

<p>Modes 9-11 should be discarded. And modes 12-14 are reserved for future use (generally these are also discarded). All the above information has been given keeping in mind that single channel AMR is being used.</p>

<p>In the prints you have pasted </p>

<blockquote>
  <p>6 -> 1 0 0 1 1 1 1 0</p>
</blockquote>

<p>This is supposed to be the AMR Toc header </p>

<pre><code>    0 1 2 3 4 5 6 7
   +-+-+-+-+-+-+-+-+
   |F|  FT   |Q|P|P|
   +-+-+-+-+-+-+-+-+
</code></pre>

<p>For storage, F bit should be 0 but in your example it is 1. And last two bits (which are padding bits) must be zero but in your example these are not 0. I believe your example is not telling the full story here.</p>
"
542,38361376,1,28734729,Gaming 3697,false,0,1733925443,1733925443,79271983,50843652,"<pre><code>import javafx.animation.AnimationTimer;
import javafx.application.Application;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;

public class Game extends Application {

  public static void main(String[] args) {
    launch(args);
  }

  @Override
  public void start(Stage primaryStage) {
    Group root = new Group();
    Scene scene = new Scene(root, 800, 600);

    Rectangle train = new Rectangle(0, 300, 50, 50);
    train.setFill(Color.GREEN);

    Rectangle[] trees = new Rectangle[10];
    for (int i = 0; i &lt; 10; i++) {
      trees[i] = new Rectangle((int) (Math.random() * 800), (int) (Math.random() * 600), 20, 20);
      trees[i].setFill(Color.GREEN);
    }

    Rectangle water = new Rectangle((int) (Math.random() * 800), (int) (Math.random() * 600), 10, 10);
    water.setFill(Color.BLUE);

    root.getChildren().addAll(train, trees, water);

    AnimationTimer timer = new AnimationTimer() {
      @Override
      public void handle(long now) {
        train.setX(train.getX() + 5);
        if (train.getX() &gt; 800) {
          train.setX(0);
        }
      }
    };
    timer.start();

    primaryStage.setTitle(&quot;Game&quot;);
    primaryStage.setScene(scene);
    primaryStage.show();
  }
}
</code></pre>
"
543,2819940,13710,2423906,SedJ601,false,1,1528923581,1528923581,50846190,50843652,"<p>Here is another approach using <code>TimeLine</code>. Code from <a href=""https://stackoverflow.com/questions/9966136/javafx-periodic-background-task"">here</a>.</p>

<pre><code>import java.util.concurrent.atomic.AtomicInteger;
import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.scene.Scene;
import javafx.scene.layout.GridPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;
import javafx.util.Duration;

public class Main extends Application
{

    @Override
    public void start(Stage primaryStage) throws Exception
    {
        GridPane gridPane = new GridPane();

        Rectangle[] recs = new Rectangle[10];
        for (int i = 0; i &lt; recs.length; i++) {
            recs[i] = new Rectangle(30, 30, Color.GREEN);
            recs[i].setStroke(Color.BLACK);
            gridPane.add(recs[i], i, 0);
        }

        primaryStage.setTitle(""Code after primaryStage.show()"");
        primaryStage.setScene(new Scene(gridPane, 400, 300));
        primaryStage.show();

        AtomicInteger counter = new AtomicInteger();
        Timeline oneSecondsWonder = new Timeline(new KeyFrame(Duration.seconds(1), (ActionEvent event) -&gt; {
            System.out.println(""this is called every 1 second on UI thread"");
            recs[counter.getAndIncrement()].setFill(Color.ORANGE);
        }));
        oneSecondsWonder.setCycleCount(recs.length);
        oneSecondsWonder.play();
    }

    public static void main(String[] args)
    {
        launch(args);
    }
}
</code></pre>
"
544,8664592,10213,6485651,Zephyr,true,2,1528915280,1528914928,50844047,50843652,"<p>The issue here is that your loop is running on the main application thread, so it locks any GUI updates until it's completed.</p>

<p>Perform the loop on its own thread instead and use <code>Platform.runLater()</code> to update each rectangle:</p>

<pre><code>import javafx.application.Application;
import javafx.application.Platform;
import javafx.scene.Scene;
import javafx.scene.layout.GridPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.stage.Stage;


public class Main extends Application {

    @Override
    public void start(Stage primaryStage) throws Exception {
        GridPane gridPane = new GridPane();

        Rectangle[] recs = new Rectangle[10];
        for (int i = 0; i &lt; recs.length; i++) {
            recs[i] = new Rectangle(30, 30, Color.GREEN);
            recs[i].setStroke(Color.BLACK);
            gridPane.add(recs[i], i, 0);
        }

        primaryStage.setTitle(""Code after primaryStage.show()"");
        primaryStage.setScene(new Scene(gridPane, 400, 300));
        primaryStage.show();

        new Thread(() -&gt; {
            for (Rectangle rec :
                    recs) {
                try {
                    Thread.sleep(1000);
                    Platform.runLater(() -&gt; rec.setFill(Color.ORANGE));
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }).start();

    }

    public static void main(String[] args) {
        launch(args);
    }
}
</code></pre>

<p><strong>So What's Happening?</strong></p>

<pre><code>new Thread(() -&gt; {
</code></pre>

<p>Opens up a new thread in the background of your application so that the UI remains responsive.</p>

<p>We can then start your loop within a <code>try/catch</code> block.</p>

<pre><code>Platform.runLater(() -&gt; rec.setFill(Color.ORANGE));
</code></pre>

<p>When working with a background thread, it's important to know that you cannot make changes to the UI directly. This line tells JavaFX to execute the <code>rec.setFill()</code> statement on the JavaFX Application thread.</p>

<pre><code>.start();
</code></pre>

<p>You've already created the new <code>Thread</code>, this just starts it.</p>
"
604,8871561,101,6625141,Sai Sandeep,true,1,1733909318,1733905084,79270963,79245309,"<p>You can try using expect to automate your flow. Sample expect script:</p>
<pre class=""lang-bash prettyprint-override""><code>#!/usr/bin/expect -f

set timeout 120
spawn jdb -attach 192.168.5.55:9999

expect &quot;&gt; &quot;
send &quot;stop in comm.app.aaa.func\n&quot;

for {set i 0} {$i &lt; 10} {incr i} {
    expect -re {\[\d\] }
    send &quot;set a = 0\n&quot;
    expect -re {\[\d\] }
    send &quot;cont\n&quot;
}
</code></pre>
"
545,7388972,117747,5623035,Mojtaba Hosseini,false,0,1699707681,1699707681,77465185,6841333,"<h3>💡Extra information</h3>
<p>It's because of daylight saving as others mentioned in their answer. I want to point out other facts about the date and calendar to show you:</p>
<h3>🧠 Why you must NEVER assume the date</h3>
<p>In addition to many existing calendars and rules like leap years and daylight saving, Throughout history, many changes have happened to the calendar that do not follow any order.</p>
<p>For example in 1752, the calendar used in England and its colonies was <strong>11 days out-of-sync</strong> with the Gregorian Calendar in use in most other parts of Europe. 🤷🏻‍♂️</p>
<p>So they changed it in a series of steps:</p>
<ul>
<li>December 31, 1750 was followed by January 1, 1750 (under the &quot;Old Style&quot; calendar, December was the 10th month and January the 11th)</li>
<li>March 24, 1750 was followed by March 25, 1751 (March 25 was the first day of the &quot;Old Style&quot; year)</li>
<li>December 31, 1751 was followed by January 1, 1752 (the switch from March 25 to January 1 as the first day of the year)</li>
<li>September 2, 1752 was followed by September 14, 1752 (drop of 11 days to conform to the Gregorian calendar)</li>
<li><a href=""https://libguides.ctstatelibrary.org/hg/colonialresearch/calendar"" rel=""nofollow noreferrer"">More information here</a></li>
</ul>
<p>Another example is Moon-based calendars like the Hijri date which can be changed every year depending on the moon phase in every month.</p>
<p>So there are even gaps in some calendars for more than 10 days and some inconsistency in some calendars from year to year! We should always pay attention to a lot of parameters when working with calendars, (like the timezone, locale, daylight saving, the calendar standard itself, etc.) and always try to use a tested and accurate date system.</p>
<p><sub>⚠️ Preferred an online one, because some calendars like the Iranian Hijri Calendar are actively changing without the ability to forecast.</sub></p>
"
546,6982783,320,5354987,Samuel Marchant,false,-2,1634971194,1634971194,69685761,6841333,"<p>It cannot ever be &quot;1&quot; as the result because <strong>getTime() returns long milliseconds not seconds</strong> (of which 353 milliseconds is a fair point but the epoch for Date is started at 1970 not the 1920's).
cmmnt: The API section you are using is largely considered deprecated.
<a href=""http://windsolarhybridaustralia.x10.mx/httpoutputtools-tomcat-java.html"" rel=""nofollow noreferrer"">http://windsolarhybridaustralia.x10.mx/httpoutputtools-tomcat-java.html</a></p>
"
547,12514905,2284,9194639,new Q Open Wid,false,42,1605402089,1549835255,54621415,6841333,"<p>As others said, it's a time change in 1927 in Shanghai.</p>
<p>It was <code>23:54:07</code> in Shanghai, in the local standard time, but then after 5 minutes and 52 seconds, it turned to the next day at <code>00:00:00</code>, and then local standard time changed back to <code>23:54:08</code>. So, that's why the difference between the two times is 343 seconds, not 1 second, as you would have expected.</p>
<p>The time can also mess up in other places like the US. The US has Daylight Saving Time. When the Daylight Saving Time starts the time goes forward 1 hour. But after a while, the Daylight Saving Time ends, and it goes backward 1 hour back to the standard time zone. So sometimes when comparing times in the US the difference is about <code>3600</code> seconds not 1 second.</p>
<p>But there is something different about these two-time changes. The latter changes continuously and the former was just a change. It didn't change back or change again by the same amount.</p>
<p><strong>It's better to use UTC unless if needed to use non-UTC time like in display.</strong></p>
"
548,1045732,11661,1050755,user1050755,false,194,1603165257,1417017497,27153569,6841333,"<p><code>IMHO</code> the pervasive, <em>implicit</em> localization in Java is its single largest design flaw. It may be intended for user interfaces, but frankly, who really uses Java for user interfaces today except for some IDEs where you can basically ignore localization because programmers aren't exactly the target audience for it. You can fix it (especially on Linux servers) by:</p>
<ul>
<li>export <code>LC_ALL=C TZ=UTC</code></li>
<li>set your system clock to UTC</li>
<li>never use localized implementations unless absolutely necessary (ie for display only)</li>
</ul>
<p>To the <a href=""https://www.jcp.org/"" rel=""noreferrer"">Java Community Process</a> members I recommend:</p>
<ul>
<li>make localized methods, not the default, but require the user to explicitly request localization.</li>
<li>use <code>UTF-8/UTC</code> as the <em>FIXED</em> default instead because that's simply the default today. There is no reason to do something else, except if you want to produce threads like this.</li>
</ul>
<p>I mean, come on, aren't global static variables an anti-OO pattern? Nothing else is those pervasive defaults given by some rudimentary environment variables.......</p>
"
549,1045732,11661,1050755,user1050755,false,268,1545006682,1392677052,21840785,6841333,"<p>I'm sorry to say, but the time discontinuity has moved a bit in</p>

<p><a href=""https://en.wikipedia.org/wiki/Java_version_history#Java_SE_6_.28December_11.2C_2006.29"" rel=""noreferrer"">JDK 6</a> two years ago, and in <a href=""https://en.wikipedia.org/wiki/Java_version_history#Java_SE_7_.28July_28.2C_2011.29"" rel=""noreferrer"">JDK 7</a> just recently in <a href=""https://en.wikipedia.org/wiki/Java_version_history#cite_note-131"" rel=""noreferrer"">update 25</a>.</p>

<p>Lesson to learn: avoid non-UTC times at all costs, except maybe for display.</p>
"
550,15442148,1,28733470,Yassien Ahmad,false,0,1733920733,1733920733,79271747,59182272,"<pre><code>bool isElfish(string &amp;word)
{
    if(word.size() &lt; 3)
        return false;
    if(word.size() == 3) 
    {
        string sorted = word;
        sort(sorted.begin(), sorted.end());
        return (sorted == &quot;efl&quot;);
    }
    if(word[0] == word[1])
    {
        word.erase(0,1);
    }
    if(word[0] == 'e')
    {
        word.erase(0,1);
        word = word + &quot;e&quot;;
    }
    if(word[0] == 'f')
    {
        word.erase(0,1);
        word = word + &quot;f&quot;;
    }
    if(word[0] == 'l')
    {
        word.erase(0,1);
        word = word + &quot;l&quot;;
    }
    else
    {
        word.erase(0,1);
    }
    return(isElfish(word));
}
</code></pre>
<p>this is c++ but the logic should carry over to java
u can also make it work for other words by changing the base case size and putting a sorted version of the second word(elf in this case is efl)</p>
"
551,11714700,415,8575615,Praveen,false,0,1575485647,1575485647,59182921,59182272,"<p>Not sure whether it solves your question 100 %. But i tried a recursive method. See if this helps. </p>

<p>package com.company;</p>

<p>public class Selfish {</p>

<pre><code>public static void main(String args[]) {

    String check = ""waffle"";
    String letters = ""elf""; // ""eof""

    int xishCount = xish(check, letters, 0);

    if(letters.length()== xishCount) {
        System.out.println(""TRUE"");
    }else{
        System.out.println(""FALSE"");
    }
}


static int xish(String check, String letters, int xishCount) {

    if(letters.length() &lt; 1) {
        return 0;
    }

    if(check.contains(letters.substring(0, 1))) {
        xishCount = 1;
    }

    return xishCount + xish(check, letters.substring(1, letters.length()), 0);
}
</code></pre>

<p>}</p>
"
582,2128605,2414,3196458,blackpen,true,4,1476355226,1476346376,40015634,40011232,"<p>Try <em><code>SimpleDateFormat(""MMM dd,yyyy hh:mm"",Locale.US)</code></em>.</p>

<p>If you are trying to print date in a foriegn locale (or if your locale seems to be wrong), you can change it in your environment so that it can generate the name of the month correctly.</p>

<p>You can set your system locale in Windows using control panel like <strong><em><code>Start-&gt;Control Panel-&gt;Clock,Language and Region</code></strong></em> like shown <a href=""https://www.java.com/en/download/help/locale.xml"" rel=""nofollow"">here</a>. You can also change locale per user as discussed in this detailed <a href=""https://msdn.microsoft.com/en-us/goglobal/bb688174.aspx"" rel=""nofollow"">FAQ</a></p>

<p>If you are on linux, you can set your locale in system configuration OR in your HOME directory as discussed <a href=""https://wiki.archlinux.org/index.php/locale"" rel=""nofollow"">here</a></p>
"
552,5150443,34528,4125191,RealSkeptic,true,0,1575485584,1575485584,59182908,59182272,"<p>Actually, doing this recursively will also take care of the multiple occurrences issue.</p>

<p>First, your own method is not really correct - it looks for the whole <code>letters</code> in the word. That is, if <code>letters</code> is <code>elf</code>, then true will be returned for <code>self</code>, but not for <code>heartfelt</code>, and that's wrong. You are supposed to look for the individual letters, because the order is not important.</p>

<p>For recursion:</p>

<ol>
<li><p>If the <code>letters</code> is an empty string - return true. You can say that any word is fine if there are no restrictions.</p></li>
<li><p>If the <code>check</code> is an empty string - return false. An empty string does not contain the letters in <code>letters</code> (and we already know that letters is not empty).</p></li>
<li><p>Take the first letter in <code>letters</code>. Look for it in <code>check</code>. If it's not there, return false.</p></li>
<li><p>If it was there, then call the same method, but pass only what remains of <code>check</code> and <code>letters</code>. For example, if <code>check</code> was <code>selfish</code> and <code>letters</code> was <code>elf</code>, you found that <code>e</code> exists. Return the result of <code>Xish(""slfish"",""lf"")</code>. This will take care of the multiple occurrences. You do that by using <code>substring</code> and concatenating the applicable parts.</p></li>
</ol>

<p>If multiple occurrences weren't an issue, you could pass the <code>check</code> as-is to the next level of the recursion. But since they matter, we need to remove one letter for each letter requested, to make sure that we don't match the same position again for the next occurrenc.</p>
"
553,12079826,45,10530569,CuriousOne,false,0,1575484977,1575484977,59182780,59182272,"<p>The title mentions a recursive function so I will propose a recursive solution.</p>

<ol>
<li><p>For each character in your check string, compare it against the first character in your letters string.</p></li>
<li><p>If the compared characters are equivalent, remove the first character from your letters string and pass both strings back into your function.</p></li>
<li><p>If the check string is fully iterated without finding a character in the letters string, return false</p></li>
<li><p>If letters is empty at any point, return true</p></li>
</ol>

<p>This is a brute force approach, and there are several other ways to accomplish what you are looking for. Maybe think about how you could check every character in your in you check string a single time?</p>
"
554,7878945,87,5953746,Amey Kulkarni,false,0,1575485238,1575484312,59182630,59182272,"<pre><code>public static boolean Xish(String check, String letters) {
    boolean ish = true;
    String word = check;

    char[] contains= letters.toCharArray();

    for(int i = 0; i &lt; contains.length; i++){
        if(word.indexOf(contains[i]) &lt; 0){
            ish = false;
        }else {
            StringBuilder sb = new StringBuilder(word);
            sb.deleteCharAt(word.indexOf(contains[i]));
            word = sb.toString();
            // System.out.println(word);
        }
    }

    return ish;
}
</code></pre>

<p>This could be one way, but it is not recursive.
Xish(""Waffle"", ""elff"") returns true, but
Xish(""Waffle"", ""elfff"") returns false.</p>
"
555,25732467,107,19487835,powerful_clouds,false,4,1733920324,1733920324,79271731,79271632,"<p>It turns out that this is a bug from Java 8 (<a href=""https://bugs.java.com/bugdatabase/view_bug?bug_id=JDK-6609854"" rel=""nofollow noreferrer"">link</a>). Also see <a href=""https://mail.openjdk.org/pipermail/core-libs-dev/2011-June/006957.html"" rel=""nofollow noreferrer"">this mailing discussion</a>.</p>
<p>The solution is to update the regex. ChatGPT suggests <code>^(/[-a-zA-Z0-9_.]+)+/?$ </code></p>
"
556,9504657,8363,7064617,jcompetence,true,5,1733919696,1637099827,69996503,69985777,"<p>Ok, I figured out your problem.</p>
<p><code>Okio</code> source code from <code>3.0.0-Alpha-10</code> and above has been re-written with <code>Kotlin</code>.</p>
<p>Use this version <a href=""https://repo1.maven.org/maven2/com/squareup/okio/okio/3.0.0-alpha.9/"" rel=""nofollow noreferrer"">https://repo1.maven.org/maven2/com/squareup/okio/okio/3.0.0-alpha.9/</a>  This one is written in Java, before the migration to Kotlin.</p>
<p>The code below will compile:</p>
<pre><code>package example;

import java.io.File;
import okhttp3.MediaType;
import okhttp3.MultipartBody;
import okhttp3.RequestBody;


public class OkHttpExample {

    public void example() {
        
        RequestBody requestBody = new MultipartBody.Builder()
                .addFormDataPart(&quot;new&quot;, &quot;This is my new TODO&quot;)
                .addFormDataPart(&quot;image&quot;, &quot;attachment.png&quot;,
                        RequestBody.create(new File(&quot;&quot;), MediaType.parse(&quot;image/png&quot;))
                )
                .setType(MultipartBody.FORM)
                .build();
    }
    
}
</code></pre>
<p>See build path dependencies:</p>
<p><a href=""https://i.sstatic.net/FnQWF.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/FnQWF.png"" alt=""enter image description here"" /></a></p>
<p>Once in your build path, in eclipse you can open the jar file, and see the contents:  ByteString.class is included:</p>
<p><a href=""https://i.sstatic.net/IfMSu.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/IfMSu.png"" alt=""enter image description here"" /></a></p>
"
557,9133364,5637,6794063,Luk&#225;š Petrovick&#253;,true,0,1733919115,1733919115,79271669,79270694,"<p>No, this is not currently supported.
It is recommended that you generate as many entities as you think you may need, and use <a href=""https://docs.timefold.ai/timefold-solver/latest/using-timefold-solver/modeling-planning-problems#planningListVariableAllowingUnassigned"" rel=""nofollow noreferrer"">unassigned values</a> to make sure the solver only uses as many as necessary.</p>
"
558,4259182,1,4188016,IceWil,false,0,1733918270,1733918037,79271609,7025444,"<p>You can simply use a for loop (it is still duplicating some code though):</p>
<pre><code>OutputStream os = ...;
InputStream is = ...;
byte[] buffer = new byte[1024];
for (int bufferLength = is.read(buffer); bufferLength != -1; bufferLength = is.read(buffer)) {
   os.write(buffer, 0, bufferLength);
}
</code></pre>
"
559,1789975,1658,1630619,Philippe Gioseffi,false,0,1541013617,1540955939,53075791,7025444,"<p>Maybe an additional recursive method could solve this warning:</p>

<pre><code>private static void writeToInputStream(final InputStream is, final OutputStream os) throws IOException {
    writeToInputStream(is, os, new byte[8388608]); // 8388608 bits = 1024 * 1024 * 8 = 1MB
    os.flush();
}

private static void writeToInputStream(final InputStream is, final OutputStream os, final byte[] dados) throws IOException {
    final int read = is.read(dados, 0, dados.length);
    if (read != -1) {
        os.write(dados, 0, read);
        writeToInputStream(is, os, dados);
    }
}
</code></pre>

<p>Since you have to initialize your buffer with some length I can't see other way around to not duplicate code or use two methods.</p>
"
583,1548204,1202,1441210,andre,false,1,1722974113,1722974113,78840807,77803626,"<p>I had something similar in my project too and adding the -parameters flag didn't help. It turns out I was using a library and that library needed to be built with the -parameters compiler flag.
Once I built the library with the above flag, the issue went away.</p>
"
560,36858,114651,105224,Andreas Dolk,false,4,1313064421,1313064421,7025550,7025444,"<p>The most elegant way ... is to suppress the warning. </p>

<p>PMD ships with a lot of rules and the idea is that you select those that you want to use in your own code. If you think, that assignments in operands are OK, simply <a href=""http://pmd.sourceforge.net/suppressing.html"" rel=""nofollow"">suppress the warning</a>:</p>

<pre><code>@SuppressWarnings(""PMD.AssignementInOperand"")
</code></pre>

<p>By the way, this is defined in the <em>controversial</em> ruleset anyway. I wouldn't activate that at all.</p>

<blockquote>
  <p>The Controversial Ruleset contains rules that, for whatever reason, are considered controversial. They are separated out here to allow people to include as they see fit via custom rulesets. This ruleset was initially created in response to discussions over UnnecessaryConstructorRule which Tom likes but most people really dislike :-) </p>
</blockquote>

<p>After using PMD for a while, your should start thinking about a custom ruleset that includes all rules and only those rules that <em>you</em> agree on.</p>
"
561,299251,340320,605744,Tomasz Nurkiewicz,true,3,1313064343,1313064343,7025534,7025444,"<p>I just wanted to advice you to use <a href=""http://commons.apache.org/io/"" rel=""nofollow"">Commons IO</a>:</p>

<pre><code>IOUtils.copy(is, os);
</code></pre>

<p>and then I had a quick look at the source code of <code>copy()</code>:</p>

<pre><code>byte[] buffer = new byte[DEFAULT_BUFFER_SIZE];
int n = 0;
while (-1 != (n = input.read(buffer))) {
    output.write(buffer, 0, n);
}
</code></pre>

<p>I would assume your code is valid and leave it as-is. Or maybe do-while loop will do the trick?</p>
"
562,8326,262144,14955,Thilo,false,1,1313064224,1313064224,7025496,7025444,"<pre><code>while (true) {
   int bufferLength = is.read(buffer);
   if (bufferLength == -1) 
      break;
   os.write(buffer, 0, bufferLength);
}
</code></pre>
"
563,,,,Ed Kirwan,false,2,1254068115,1254068115,1483852,1444221,"<p>Hej,</p>

<p>See, ""How to encapsulate software (Part 1),"" here:</p>

<p><a href=""http://www.edmundkirwan.com/encap/overview/paper7.html"" rel=""nofollow noreferrer"">http://www.edmundkirwan.com/encap/overview/paper7.html</a></p>

<p>Regards,</p>

<p>Ed.</p>
"
564,44499,23990,130659,AlBlue,false,1,1253380176,1253380176,1448986,1444221,"<p>Since this has been tagged with 'osgi', I can throw in an OSGi-related perspective.</p>

<p>The short answer is that it is possible to go from completely spaghetti code to modular in small steps; it doesn't have to be a big bang. For example, even spaghetti code depends on some kind of bolognaise logging library, so in some sense, it's already modular, just with One Very Big Metball (sorry, module) in it.</p>

<p>The trick is to break the big meatball into one smaller chunk and then a slightly less big meatball and then recurse. It doesn't all have to be done in one go either; simply chip off a bit more each time until there is nothing left to remove.</p>

<p>As for OSGi, it's still possible to put an uber-jar into a bundle. In fact, you can do this without changing the bits; either by modifying the Manifest.MF in place, or by wrapping that in another JAR and specify Bundle-ClassPath: metaball.jar in the manifest.</p>

<p>Failing that, tools like BND can help generate the right data you'd need, and then it can be dropped in an OSGi runtime easily enough. But beware of overly coupled code, and stuff that mucks around with classloaders - those will trip you up.</p>
"
565,52561,1633,157080,John,false,0,1253321514,1253321514,1447369,1444221,"<p>The <a href=""http://www.javapractices.com/topic/TopicAction.do?Id=205"" rel=""nofollow noreferrer"">package-by-feature</a> idea helps to make code more modular. </p>

<p>Many examples seen on the web divide applications first into layers, not features</p>

<ul>
<li>models</li>
<li>data access</li>
<li>user interface</li>
</ul>

<p>It seems better, however, to divide applications up using top-level packages that align with <strong>features, not layers</strong>.</p>

<p>Here is an <a href=""http://www.web4j.com/predict/javadoc/index.html"" rel=""nofollow noreferrer"">example</a> of a web app that uses package-by-feature. Note the names of the top-level packages, which read as a list of actual features in the application. Note as well how each package contains all items related to a feature - the items aren't spread out all over the place; most of the time, they are all in a single package/directory.</p>

<p>Usually, deletion of a feature in such an app can be implemented in a single operation - deletion of a single directory.</p>
"
566,41067,129115,119280,DVK,false,4,1253277488,1253277488,1444311,1444221,"<p>To answer your specific question of <strong>how to make</strong> the code more modular, a couple of approaches are:</p>

<ul>
<li><p>One of best tool for modularization is spotting code re-use. If you find that your code does the same exact (or very similar) thing in more than once place, it's a good candidate for modularizing away.</p></li>
<li><p>Determine which pieces of logic can be made independent, in a sense that other logic would use them without needing to know how they are built. This is somewhat similar to what you to in OO design, although module/component does not necessarily need to correspond to a modeled object as in OO.</p></li>
</ul>
"
567,2722,95524,3827,Eugene Yokota,false,27,1556113772,1253277145,1444282,1444221,"<p>Key points are</p>
<ul>
<li>Separation of concerns</li>
<li>Cohesion</li>
<li>Encapsulation (communicates via interface)</li>
<li>Substitutability</li>
<li>Reusability</li>
</ul>
<p>A good example of such module system is standard car parts like disk brakes and car stereo.
You don't want to build car stereo from scratch when you are building cars. You'd rather buy it and plug it in. You also don't want the braking system affecting the car stereo — or worse car stereo affecting the brake system.</p>
<p>To answer your question, &quot;How do I decide that particular code is modular up to this much extent,&quot; we can form questions to test the modularity. <strong>Can you easily substitute your modules with something else without affecting other parts of your application?</strong></p>
<p>XML parsers could be another example. Once you obtain the DOM interface, you really don't care which implementation of XML parser is used underneath (e.g. Apache Xerces or JAXP).</p>
<p>In Java, another question may be: <strong>Are all functionality accessible via <code>interface</code>s?</strong> Interface pretty much takes care of the low coupling.</p>
<p>Also, <strong>can you describe each module in your system with one sentence?</strong> For example, a car stereo plays music and radio. Disk brakes decelerate the vehicle safely.</p>
<hr />
<p>(Here's what I wrote to <a href=""https://stackoverflow.com/questions/933723/what-is-component-driven-development/991517#991517"">What is component driven development?</a>)</p>
<p>According to Wikipedia, Component-Based Development is an alias for <a href=""http://en.wikipedia.org/wiki/Component-based_software_engineering"" rel=""noreferrer"">Component-based software engineering (CBSE)</a>.</p>
<blockquote>
<p>[It] is a branch of software
engineering, the priority of which is
the <em>separation of concerns</em> in respect
of the wide-ranging functionality
available throughout a given software
system.</p>
</blockquote>
<p>This is somewhat vague, so let's look at more details.</p>
<blockquote>
<p>An individual component is a software
package, or a module, that
encapsulates a set of related
functions (or data).</p>
<p>All system processes are placed into
separate components so that all of the
data and functions inside each
component are semantically related
(just as with the contents of
classes). Because of this principle,
it is often said that components are
<em>modular</em> and <em>cohesive</em>.</p>
</blockquote>
<p>So, according to this definition, a component can be anything as long as it does one thing really well and only one thing.</p>
<blockquote>
<p>With regards to system-wide
co-ordination, components communicate
with each other via <em>interfaces</em>. [...]
This principle results in components referred to as <em>encapsulated</em>.</p>
</blockquote>
<p>So this is sounding more and more like what we think of good API or SOA should look like.</p>
<p>The <em>provided</em> interfaces are represented by a lollipop and <em>required</em> interfaces are represented by an open socket symbol attached to the outer edge of the component in UML.</p>
<p><a href=""https://i.sstatic.net/cOeqr.gif"" rel=""noreferrer""><img src=""https://i.sstatic.net/cOeqr.gif"" alt=""alt text"" /></a></p>
<blockquote>
<p>Another important attribute of
components is that they are
<em>substitutable</em>, so that a component
could be replaced by another (at
design time or run-time), if the
requirements of the initial component
(expressed via the interfaces) are met
by the successor component.</p>
<p>Reusability is an important
characteristic of a high quality
software component. A software
component should be designed and
implemented so that it can be reused
in many different programs.</p>
</blockquote>
<p>Substitutability and reusability is what makes a component a component.
So what's the difference between this and Object-Oriented Programming?</p>
<blockquote>
<p>The idea in object-oriented
programming (OOP) is that software
should be written according to a
mental model of the actual or imagined
objects it represents. [...]</p>
<p>Component-based software engineering,
by contrast, makes no such
assumptions, and instead states that
software should be developed by gluing
prefabricated components together much
like in the field of electronics or
mechanics.</p>
</blockquote>
"
568,38310273,41,28706813,Will,false,1,1733916877,1733916877,79271553,71653627,"<p>Locate the cacerts file again (/Library/Java/JavaVirtualMachines/zulu-11.jdk/Contents/Home/lib/security/cacerts). The keytool command you used was correct, but ensure you're using the right password. The default password for cacerts in many Java installations is &quot;changeit&quot; unless you've explicitly changed it. Try:</p>
<pre><code>sudo keytool -import -alias charles -file ~/Documents/charles-ssl-proxying-certificate.pem -keystore /Library/Java/JavaVirtualMachines/zulu-11.jdk/Contents/Home/lib/security/cacerts -storepass changeit
</code></pre>
"
569,1073482,12152,1072187,John Little,false,0,1733917212,1733916377,79271528,71653627,"<p>I found a partial solution.  The Charles documentation page: <a href=""https://www.charlesproxy.com/documentation/using-charles/ssl-certificates/"" rel=""nofollow noreferrer"">https://www.charlesproxy.com/documentation/using-charles/ssl-certificates/</a> is missing some key information for windows.</p>
<p>First you have to find where java is. The only way I found to do this was to install gitBash, then use &quot;which java&quot;. The result was:</p>
<p>/c/Program Files/Zulu/zulu-8/bin/java</p>
<p>You need to download the pem file from the help-&gt;SSL Proxying-&gt;Save Root cert.</p>
<p>I copied this to /c/Program Files/Zulu/zulu-8/jre/lib/security/</p>
<p>Then running git bash as admin, did the following from the security directory:</p>
<p>$ keytool -import -alias charles -file charles.pem -keystore &quot;/c/Program Files/Zulu/zulu-8/jre/lib/security/cacerts&quot; -storepass changeit</p>
<p>This appears to have worked, but when I restart my java service, charles still says</p>
<p>&quot;You may need to configure your browser or application to trust the Charles Root Certificate. See SSL Proxying in the Help menu.&quot;</p>
<p>And I still don't see SSLed data when running my spring boot app from intellij.</p>
<p>java spits out this error when it attempts to connect:
java.security.cert.CertificateException: No subject alternative DNS name matching xxx.yyy.com found.</p>
<p>Presumably, java is detecting that the Charles root cert is fake.</p>
<p>This solution, however, may work for you.</p>
"
570,1865629,1000,1689284,daniel sp,false,0,1733914736,1733914736,79271436,60995721,"<p>In Java 8, there is no direct way to check if a stream is empty without terminating it. You can achieve the desired behavior by using a custom utility method to handle the intermediate checks.
Something like:</p>
<pre><code>public void checkAgencySupplierMapping(List&lt;Customer&gt; allCustomers, String agency, String supplier) {
    Stream&lt;Customer&gt; stream = allCustomers.stream()
        .filter(customer -&gt; customer.getAgency().equals(agency));
    
    stream = checkIfEmpty(stream, () -&gt; new AgencyNotSupportedException(agency));
    
    stream.filter(customer -&gt; customer.getSupplier().equals(supplier))
          .findFirst()
          .orElseThrow(() -&gt; new SupplierNotSupportedException(supplier));
}
</code></pre>
<p>And the helper method...</p>
<pre><code>    private &lt;T&gt; Stream&lt;T&gt; checkIfEmpty(Stream&lt;T&gt; stream, Supplier&lt;RuntimeException&gt; exceptionSupplier) {
        boolean isEmpty = stream.findAny().isEmpty();
        if (isEmpty) {
            throw exceptionSupplier.get();
        }
        return stream;
    }
</code></pre>
"
571,12820004,1888,9275263,E. Betanzos,true,2,1585845650,1585845650,60996644,60995721,"<p>The code below is a bit ugly but work like you wish.</p>

<p>First we need to count how many agency of customers match with and then try found the first one supplier match. If there are no matches throw an exception, but here you will check if the cause is that no agency clients were found in order to throw the correct excaption.</p>

<pre><code>AtomicInteger countAgencyMatches = new AtomicInteger(0);

allCustomers.stream()
        .filter(customer -&gt; {
            if (customer.getAgency().equals(agency)) {
                countAgencyMatches.incrementAndGet();
                return true;
            }

            return false;
        })
        .filter(customer -&gt; customer.getSupplier().equals(supplier))
        .findFirst()
        .orElseThrow(() -&gt; {
            if (countAgencyMatches.get() == 0) {
                return new AgencyNotSupportedException(agency);
            }

            return new SupplierNotSupportedException(supplier);
        });
</code></pre>
"
572,1959220,111,1761363,iagorubio,false,0,1733913942,1733913942,79271403,66045230,"<p>An example we used on production of a use of this class, is to add to entities transversal functionality.</p>
<p>We have an abstract <em><strong>@MappedSuperclass</strong></em> that is <em>AuditableEntity</em> that adds creation user, modification user, creation timestamp and modification timestamp to entities, and all entities that needs to be audited extend the mapped superclass, so it's those fields in the abstract mapped superclass are set and persisted.</p>
<p>A huge pitfall I saw in production that led to a total refractoring of the persistence code, was on a project where all persistent classes where parents and siblings of entities, when the project grew a little bit a single 50 items paged listing took hundreds of SELECTs by hibernate to be fullfiled.</p>
"
573,8357383,12923,6277104,SternK,false,19,1714960195,1612567895,66071981,66045230,"<ol>
<li><em>@MappedSuperclass</em></li>
</ol>
<ul>
<li><p>By default, properties of the superclass are ignored and not persistent!
You have to annotate the superclass with <code>@MappedSuperclass</code> to enable embedding of its properties in the concrete subclass tables.</p>
</li>
<li><p>You can override column mappings from the superclass in a subclass with the <code>@AttributeOverride</code> annotation or several with <code>@AttributeOverrides</code>.</p>
</li>
<li><p>You could declare the identifier property in the superclass, with a shared column name and generator strategy for all subclasses, so you wouldn’t have to repeat it. <em>But it’s optional!</em></p>
</li>
<li><p>The main problem with implicit inheritance mapping is that it doesn’t support polymorphic associations very well. In the database, you usually represent associations as foreign key relationships. If the subclasses are all mapped to different tables, a polymorphic association to their superclass can’t be represented as a simple foreign key relationship.</p>
</li>
<li><p>Polymorphic queries that return instances of all classes that match the interface of the queried class are also problematic. Hibernate must execute a query against the superclass as several SQL <code>SELECT</code>s, one for each concrete subclass.</p>
</li>
<li><p>A further conceptual problem with this mapping strategy is that several different columns, of different tables, share exactly the same semantics. This makes schema evolution more complex. For example, renaming or changing the type of a superclass property results in changes to multiple columns in multiple tables. Many of the standard refactoring operations offered by your IDE would require manual adjustments, because the automatic procedures usually don’t account for things like <code>@AttributeOverrides</code>. It also makes it much more difficult to implement database integrity constraints that apply to all subclasses.</p>
</li>
</ul>
<p>So, this approach is a good choice for the top level of your class hierarchy,
where polymorphism isn’t usually required, and when modification of the superclass
in the future is unlikely.</p>
<ol start=""2"">
<li><em>@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)</em></li>
</ol>
<ul>
<li><p><em>The database identifier and its mapping have to be present in the superclass, to share it in all subclasses and their tables. This is no longer optional, as it was for the <code>@MappedSuperclass</code> mapping strategy.</em></p>
</li>
<li><p>Note that the JPA standard specifies that <code>TABLE_PER_CLASS</code> is optional, so not all JPA implementations may support it. The implementation is also vendor dependent — in Hibernate, it’s equivalent to a <code>&lt;union-subclass&gt;</code> mapping in the old native Hibernate XML metadata.</p>
</li>
<li><p>The advantages of this mapping strategy are clearer if we examine polymorphic queries. The tables are combined with a UNION operator, and a literal is inserted into the intermediate result; Hibernate reads this to instantiate the correct class given the data from a particular row. A union requires that the queries that are combined project over the same columns; hence, you have to pad and fill nonexistent columns with NULL. You may ask whether this query will really perform better than two separate statements. Here you can let the database optimizer find the best execution plan to combine rows from several tables, instead of merging two result sets in memory as Hibernate’s polymorphic loader engine would do.</p>
</li>
<li><p>Another much more important advantage is the ability to handle polymorphic associations. Hibernate can use a <code>UNION</code> query to simulate a single table as the target of the association mapping.</p>
</li>
</ul>
<p>So, this approach is a good choice when you need to use polymorphic queries and associations.</p>
<p>P.S. This is almost verbatim quotation from the excellent book: <em>Java Persistence with Hibernate</em> (Bauer, King, Gregory)</p>
"
574,19028501,27,13891097,Mohd Murad,false,-1,1612441160,1612441160,66045497,66045230,"<p>meaning a class whose mapping information is applied to the entities that inherit it.</p>
"
575,10133128,172,7487544,Greg Artisi,false,0,1733912077,1733912077,79271303,23028536,"<p>some words are not allowd like new, or numbers, maybe switch also.</p>
"
576,10640876,152,7835955,pranavmalhotra,false,0,1491631854,1491631854,43290816,23028536,"<p>You probably had a space after the packagename. </p>

<p>Intellij will give that error if the packagename ends with a space. </p>
"
577,277416,690875,571407,JB Nizet,false,6,1397295362,1397294899,23028607,23028536,"<p>When creating a package named switch, IntelliJ IDEA displays the following error message:</p>

<blockquote>
  <p>Not a valid package name, it would be impossible to create a class inside</p>
</blockquote>

<p>So, the message is quite clear. What you can do about it: use another name. The possibilities are infinite.</p>

<p>Here is the list of reserved keywords, that can't be used as identifiers: <a href=""http://docs.oracle.com/javase/specs/jls/se7/html/jls-3.html#jls-3.9"" rel=""noreferrer"">http://docs.oracle.com/javase/specs/jls/se7/html/jls-3.html#jls-3.9</a></p>
"
578,1310803,2699,1258838,Juliyanage Silva,false,0,1733912070,1733912070,79271302,1279393,"<p>From intellij you can open from Profiler too with Open Snapshot:
<a href=""https://i.sstatic.net/kEwcS0Nb.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/kEwcS0Nb.png"" alt=""enter image description here"" /></a></p>
"
579,51377,6484,153503,leonm,false,8,1252317401,1252317401,1388534,1279393,"<p>MAT ( <a href=""http://www.eclipse.org/mat"" rel=""noreferrer"">http://www.eclipse.org/mat/</a> ) is useful for comparing jmap/hprof files.  Try the dominator tree if you have a memory leak.</p>
"
580,818,1520,1069,John Smithers,false,10,1251709880,1251709880,1356581,1279393,"<p>Open VisualVM, click <code>File -&gt; Load..</code> and pick your jmap file.  </p>

<p>If it is not loaded, I guess there is a problem with your file.</p>
"
581,322981,335891,642706,Basil Bourque,false,1,1733716321,1733716321,79263793,40011232,"<h2><em>java.time</em></h2>
<p>In modern Java, use the <em>java.time</em> classes.</p>
<p>To represent a moment as seen in a particular time zone, use <code>ZonedDateTime</code>.</p>
<h2>Time zone</h2>
<p>Your code ignores the crucial issue of time zone.</p>
<p>If you do not specify a time zone, the JVM’s current default time zone is applied implicitly.  Better to specify explicitly your desired/expected time zone.</p>
<pre><code>ZoneId z = ZoneId.of( &quot;America/Edmonton&quot; ) ;
ZonedDateTime zdt = ZonedDateTime.now( z ) ;
</code></pre>
<p>Generate localized text automatically. Specify a <code>Locale</code> to determine the human language and cultural norms used in localizing.</p>
<pre><code>Locale locale = Locale.of( &quot;fr&quot; , &quot;CA&quot; ) ;  // French language, Canada cultural norms. Or, `( &quot;en&quot; , &quot;US&quot; )` for English language, United States cultural norms.
DateTimeFormatter f = 
    DateTimeFormatter
        .ofLocalizedDateTime( FormatStyle.LONG )
        .withLocale( locale ) ;
String output = zdt.format( f ) ;
</code></pre>
<blockquote>
<p>8 décembre 2024 à 20 h 46 min 14 s HNR</p>
</blockquote>
<p>If you insist, you can specify a custom format. In your Question, you used <code>hh</code> meaning 12-hour clock, but you neglected to add a AM/PM indication to disambiguate.</p>
<pre><code>DateTimeFormatter f = 
    DateTimeFormatter
        .ofPattern( &quot;MMM dd,uuuu  hh:mm a&quot; ) 
        .withLocale( locale ) ;
</code></pre>
<p>See this <a href=""https://ideone.com/OVABYj"" rel=""nofollow noreferrer"">code run at Ideone.com</a>.</p>
<blockquote>
<p>Dec 08,2024  08:48 PM</p>
</blockquote>
"
584,5769633,876,4553414,Andrew,false,0,1720488026,1720488026,78723326,77803626,"<p>I finally realized that the issue was caused by a complex object from a third-party lib in my data model. I resolved it by creating a customized deserializer.</p>
"
585,4739993,1972,3833111,Mr_Thorynque,false,0,1719418621,1718786321,78641375,77803626,"<p>This is not link to upgrade version, it need to add compiler args : -parameters In gradle :</p>
<p>apply plugin: 'java'
compileJava {
options.compilerArgs &lt;&lt; '-parameters'
}
There is something for maven.
And more, some IDE build without using Gradle / Maven configuration so you need to add this option. In eclipse STS :<a href=""https://i.sstatic.net/bZ2AJF8U.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/bZ2AJF8U.png"" alt=""enter image description here"" /></a></p>
<p>update :
from official documentation:
<a href=""https://docs.spring.io/spring-data/mongodb/reference/mongodb/mapping/mapping.html#mapping-custom-object-construction"" rel=""nofollow noreferrer"">https://docs.spring.io/spring-data/mongodb/reference/mongodb/mapping/mapping.html#mapping-custom-object-construction</a></p>
<blockquote>
<p>If the Java type has a property whose name matches the given field of
the input document, then it’s property information is used to select
the appropriate constructor parameter to pass the input field value
to. This works only if the parameter name information is present in
the java .class files which can be achieved by compiling the source
with debug information or using the new -parameters command-line
switch for javac in Java 8.</p>
</blockquote>
<p>Update 2:
I don't have actualy Intellij installed. But from documentation you can try this screen. <a href=""https://www.jetbrains.com/help/idea/compiling-applications.html"" rel=""nofollow noreferrer"">https://www.jetbrains.com/help/idea/compiling-applications.html</a>
<a href=""https://i.sstatic.net/nuslSyjP.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/nuslSyjP.png"" alt=""enter image description here"" /></a></p>
"
586,4181457,441,3426366,nrp,false,0,1711284143,1711283838,78214510,77803626,"<p>The Spring Data update causes this exception due to <a href=""https://github.com/spring-projects/spring-framework/wiki/Upgrading-to-Spring-Framework-6.x#parameter-name-retention"" rel=""nofollow noreferrer"">parameter name retention</a>: &quot;... code within the Spring Framework and Spring portfolio frameworks no longer attempts to deduce parameter names by parsing bytecode&quot;.</p>
<p>Adding a <code>@NoArgsConstructor</code> can be the first way to solve because &quot;...If an entity contains a field of some type which is defined in another package, a mapping exception will be thrown during a read operation if said object doesn't provide an empty constructor (private, protected or public)&quot; (<a href=""https://github.com/spring-projects/spring-data-mongodb/issues/4615"" rel=""nofollow noreferrer"">Spring Data MongoDb issue</a>).</p>
<p>If there is no opportunity to do that, you can add compiler argument (see <a href=""https://stackoverflow.com/questions/77427865/missing-parameter-name-in-mongodb-repository-causing-mappingexception"">this question</a>). However, there is a certain risk of exposing sensible information using this approach, for details see <a href=""https://ricma.co/posts/tech/dev/migrating-to-spring-61-javac-parameters/"" rel=""nofollow noreferrer"">this case study</a>.</p>
"
587,30468143,1,23348641,Subhi1412,false,0,1707126849,1707126849,77940000,77803626,"<p>Try adding @AllArgsConstructor or @RequiredArgsConstructor on the POJO which is giving this error. It should be resolved then.</p>
"
588,5117876,141,4102415,Martin,false,0,1733911131,1733911131,79271242,63402982,"<p>If you can advocate the approach not being the parallel collection anti-pattern mentioned above (you can easily for big data), the <a href=""https://fastutil.di.unimi.it/"" rel=""nofollow noreferrer"">fastutils</a> offer a solution in the class <strong><code>it.unimi.dsi.fastutil.Arrays</code></strong>. There are several sorting methods with an explicit comparator and swapper. Let say you want to sort UUIDs (stored as two longs each) but keep the track of their original indexes. Here you go:</p>
<pre><code>long[] uuids = ..
int[] indexes = new int[uuids.length / 2];
// fill indexes
java.util.Arrays.parallelSetAll(indexes, i -&gt; i);

IntComparator comparator = (k1, k2) -&gt; {
        int cmp = Long.compare(uuids[2 * indexes[k1]], uuids[2 * indexes[k2]]);
        if (cmp == 0) {
            cmp = Long.compare(uuids[2 * indexes[k1] + 1], uuids[2 * indexes[k2] + 1]);
        }
        return cmp;
    };

Swapper swapper = (k1, k2) -&gt; {
        int tmp = indexes[k1];
        indexes[k1] = indexes[k2];
        indexes[k2] = tmp;
    };

it.unimi.dsi.fastutil.Arrays.parallelQuickSort(0, indexes.length, comparator, swapper);
</code></pre>
"
589,8828430,26,6595860,Taylor,false,1,1597603496,1597603496,63440744,63402982,"<p>You could try creating an object based on the data that you actually have. In this case the object might contain two fields, numbers and occurrences. Then implement a comparator to compare by the occurrences field.</p>
"
590,13170666,88576,9513184,Unmitigated,false,2,1597353153,1597353153,63403264,63402982,"<p>You can create a two-dimensional array where each element is an array of length <code>2</code> and sort it based on the second element.</p>
<pre><code>int[] A1 = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }, A2 = { 1, 2, 3, 0, 2, 1, 1, 0, 0, 0 };
final int[][] res = new int[A1.length][2];
for(int i = 0; i &lt; res.length; i++) {
    res[i] = new int[] {A1[i], A2[i]};
}
Arrays.sort(res, (a,b)-&gt;Integer.compare(a[1], b[1]));
//Alternatively, Arrays.sort(res, Comparator.comparingInt(a -&gt; a[1]));
for(final int[] a : res) {
    System.out.println(a[0] + &quot; &quot; + a[1]);
}
</code></pre>
"
591,14995198,467,10824815,Sankeeth Ganeswaran,true,3,1597352841,1597352841,63403207,63402982,"<p>Pair Class could do the trick here.</p>
<pre><code>import java.util.*;
public class Main
{
    static class Pair implements Comparable&lt;Pair&gt;
    {
        int a1;
        int a2;
        Pair (int a1, int a2) //constructor 
        {
            this.a1 = a1;
            this.a2 = a2;
        }
        public int compareTo(Pair other) //making it only compare a2 values
        {
            return this.a2 - other.a2;
        }
    }
    public static void main(String[] args) 
    {
        int[] A1 = {1,2,3,4,5,6,7,8,9,10};
        int[] A2 = {1,2,3,0,2,1,1,0,0,0};
        Pair[] pairs = new Pair[A1.length];
        for (int i = 0; i &lt; pairs.length; i++)
        {
            pairs[i] = new Pair(A1[i], A2[i]);
        }
        Arrays.sort(pairs);
        //printing values 
        for (int i = 0; i &lt; A1.length; i++)
        {
            System.out.print(pairs[i].a1 + &quot; &quot;);
        }
        System.out.println();
        for (int i = 0; i &lt; A2.length; i++)
        {
            System.out.print(pairs[i].a2 + &quot; &quot;);
        }
    }
}
</code></pre>
<p>By making a Pair class that holds 2 variables <code>a1</code> and <code>a2</code>, you can override the <code>compareTo</code> method to only compare the <code>a2</code> value, so that when <code>Arrays.sort</code> is called, the pairs in the Pair array will be swapped only according to the <code>a2</code> values. You can then access the values in the pairs and print them out. This will produce your desired output.</p>
"
592,4195407,467,3436941,Khasan 24-7,false,0,1733910984,1733910984,79271238,45329484,"<p>As it is said &quot;Rely on abstraction, not concretion&quot;, using interface classes will add better approach to software engineering: it will help for <strong>open closed</strong> principle of <strong>SOLID</strong>, where project should be open to extensions and close to modifications. When we have our interface, we have one implementation today and we can add another new implementation when we need.</p>
"
593,1908489,9612,1722882,Plog,false,7,1501079285,1501078862,45329707,45329484,"<p>It's good practice to separate out the functionality of your application into separate classes. (See the single responsibility principle <a href=""https://en.wikipedia.org/wiki/Single_responsibility_principle"" rel=""noreferrer"">https://en.wikipedia.org/wiki/Single_responsibility_principle</a>).</p>

<p>What I mean by this in this context is that if you needed to do some more advanced business logic between your controller and the calls to your JPA repository then this should be included in a service layer. This prevents your controller class from being polluted with business logic when it should only be concerned with handling the request and passing on responsibility to the service layer.</p>

<p>However, if you are just doing some simple CRUD operations then it's absolutely fine to just call the repository directly from your controller. So it depends what your application needs to do really!</p>
"
594,,,,user4695271,true,6,1501170140,1501078803,45329686,45329484,"<p>Because the so-called ""service"" classes (""inherited"" with the N-tier architecture) are where the business logic ""lives"". In the end, it depends on your approach/design guidelines, the way you would like to manage transactions, structure your project, etcetera.</p>

<p>If you only need to make a call to the database and return that data, you can safely skip the ""service"" call/class. On the other hand, if you are doing something ""in the real life"", you will end up using those ""service"" classes a lot since most of the operations (read: <em>business logic</em>) is going to be there, so you would want to have all that behavior isolated in one place — otherwise you would be injecting beans everywhere without following any ""project organization"" among other things. It's a little bit tedious sometimes, but on the other hand, you know where to look for whenever you need to change something. In medium to large projects this is quite important; even more if you have several people modifying the same code base.</p>

<p><strong>TIP:</strong> Keep your classes small. Injecting tons of beans (repositories, services and what not) on a ""service"" class is bad design and may lead you to other non-senses.</p>
"
595,4988680,61,4011557,lilacwine,false,1,1501078777,1501078777,45329674,45329484,"<p>You don't have to use a service to be able to query data. It's a better practice to write a service to prevent code repetition when you need the same functionality in another part of the application.</p>
"
596,100270,131088,270371,davidxxx,false,1,1528965849,1528965849,50853277,50833633,"<p>I think that in some cases you <em>may</em> and sometimes even you <em>have to</em> assert multiple things in a single test method if your method perform multiple changes that you should check through different levels/abstractions.<br>
For example as you test a method that adds an element in a object that stores it, you can assert that the number of elements contained in the object were incremented by one but you can also check that the new element were correctly added concerning its values.<br>
You have two levels/abstractions : the object that contains the element that has a ""direct/core"" state and the elements that it contains that have their own states.   </p>

<p>In splitting it in two assertions, it would give a test that looks like :</p>

<pre><code>@Test
public void addElt(){
    foo.addElt(new Element(""a name"", ""a role""));

    assertThat(foo).extracting(Foo::getSize)
                   .contains(actualSize+1);    
    assertThat(foo.getLastElt()).extracting(Element::getName, Element::getRole)
                                .containsExactly(addedElt.getName(), addedElt.getRole());
}
</code></pre>

<p>So now why trying to couple two assertions that checks two different 
things ?<br>
Does it really bring a value for debugging your test ?<br>
I don't think so.<br>
Trying to assert the changes on the two level of abstraction in a single assertion makes clearly no sense : complex and useless noises.<br>
If the first assertion fails :</p>

<pre><code>assertThat(foo).extracting(Foo::getSize)
               .contains(actualSize+1);  
</code></pre>

<p>It very probably means that the element was not added.<br>
So in this case, performing the second assertion :</p>

<pre><code>assertThat(foo.getLastElt()).extracting(Element::getName, Element::getRole)
                            .containsExactly(addedElt.getName(), addedElt.getRole());
</code></pre>

<p>makes no sense as it will very probably be also in error.<br>
The developer that handles the failure test needs only to have useful information and not noise that can make its solving harder. So having a feedback about the size that is not which one expected is just what you need.   </p>

<p>What I try to explain is right for AssertJ as for any testing framework.</p>
"
597,1407336,7026,1348834,Joel Costigliola,false,2,1528954600,1528954600,50850282,50833633,"<p>If you don't like soft assertions, you can give a try to <a href=""https://stackoverflow.com/questions/40796756/assertall-vs-multiple-assertions-in-junit5"">JUnit 5 assertAll</a> but otherwise I would follow @GhostCat advice and try to assert one thing per test (that usually leads to only a few assertions).</p>
"
598,1663234,140229,1531124,GhostCat,false,3,1528882196,1528882196,50833768,50833633,"<p>A bit of example code would help, but then, this is more of a theoretical problem, as the real answer is: consider not having multiple assertions in one test call!</p>

<p>Meaning: the idea of a failing test is to get you to a problem as quickly as possible. When you combine multiple asserts into a single test, then you make our life harder by default. Because instead of knowing ""test X with assertion Y failed, you have to first study logs very carefully to identify which asserts passed, and which one failed.</p>

<p>Therefore the recommend practice is to <em>not</em> put multiple asserts/check into a single test. </p>
"
599,7312274,65,5571034,Yagoub GRINE,false,0,1733910003,1733910003,79271194,23260057,"<p>If you’re using IntelliJ IDEA, you can resolve this issue by adding the following parameters to your Maven test lifecycle configuration:</p>
<pre><code>MAVEN_OPTS=-Xms512m -Xmx1024m -XX:MaxPermSize=1024m
</code></pre>
<p><strong>Steps to Apply:</strong></p>
<ol>
<li><p>Open your Maven tool window in IntelliJ IDEA.</p>
</li>
<li><p>Right-click on the test lifecycle phase and select Edit Configuration.</p>
</li>
<li><p>In the dialog that appears:
•   Under Java Options, uncheck the “Inherit from settings” box if needed.
•   Add the environment variable MAVEN_OPTS with the value:
-Xms512m -Xmx1024m -XX:MaxPermSize=1024m
4.  Click Apply and OK.</p>
</li>
</ol>
<p>Here are the relevant screenshots for reference:</p>
<ol>
<li>Accessing the Maven Lifecycle Test
<a href=""https://i.sstatic.net/65IlIrSB.jpg"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/65IlIrSB.jpg"" alt=""Accessing the Maven Lifecycle Test"" /></a></li>
<li>Configuring Maven Options in IntelliJ:
<a href=""https://i.sstatic.net/TdSRb0Jj.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/TdSRb0Jj.png"" alt=""Configuring Maven Options in IntelliJ"" /></a></li>
</ol>
"
600,2084596,1196,1855840,ranma2913,false,0,1705502807,1705502807,77833320,23260057,"<p>Found a new solution for 2024. My Project is Spring-Boot 3.x, Java 17:</p>
<h1>Problem</h1>
<p>Error Log:</p>
<pre><code>...
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.2.5:test (default-test) on project rest-clients: 
[ERROR] 
[ERROR] Please refer to /rest-clients/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.
[ERROR] ExecutionException Error occurred in starting fork, check output in log
[ERROR] org.apache.maven.surefire.booter.SurefireBooterForkException: ExecutionException Error occurred in starting fork, check output in log
[ERROR]         at org.apache.maven.plugin.surefire.booterclient.ForkStarter.awaitResultsDone(ForkStarter.java:456)
[ERROR]         at org.apache.maven.plugin.surefire.booterclient.ForkStarter.runSuitesForkOnceMultiple(ForkStarter.java:358)
[ERROR]         at org.apache.maven.plugin.surefire.booterclient.ForkStarter.run(ForkStarter.java:296)
[ERROR]         at org.apache.maven.plugin.surefire.booterclient.ForkStarter.run(ForkStarter.java:250)
[ERROR]         at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1241)
[ERROR]         at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1090)
[ERROR]         at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:910)
[ERROR]         at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
[ERROR]         at org.apache.maven.lifecycle.internal.MojoExecutor.doExecute2(MojoExecutor.java:370)
[ERROR]         at org.apache.maven.lifecycle.internal.MojoExecutor.doExecute(MojoExecutor.java:351)
[ERROR]         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:215)
[ERROR]         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:171)
[ERROR]         at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:163)
[ERROR]         at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
[ERROR]         at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
[ERROR]         at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
[ERROR]         at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
[ERROR]         at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:294)
[ERROR]         at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
[ERROR]         at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
[ERROR]         at org.apache.maven.cli.MavenCli.execute(MavenCli.java:960)
[ERROR]         at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:293)
[ERROR]         at org.apache.maven.cli.MavenCli.main(MavenCli.java:196)
[ERROR]         at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
[ERROR]         at java.base/java.lang.reflect.Method.invoke(Method.java:580)
[ERROR]         at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
[ERROR]         at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
[ERROR]         at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
[ERROR]         at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
[ERROR]         at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
[ERROR]         at java.base/java.lang.reflect.Method.invoke(Method.java:580)
[ERROR]         at org.apache.maven.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:52)
[ERROR]         at org.apache.maven.wrapper.WrapperExecutor.execute(WrapperExecutor.java:161)
[ERROR]         at org.apache.maven.wrapper.MavenWrapperMain.main(MavenWrapperMain.java:73)
[ERROR] Caused by: org.apache.maven.surefire.booter.SurefireBooterForkException: Error occurred in starting fork, check output in log
[ERROR]         at org.apache.maven.plugin.surefire.booterclient.ForkStarter.fork(ForkStarter.java:577)
[ERROR]         at org.apache.maven.plugin.surefire.booterclient.ForkStarter.lambda$null$3(ForkStarter.java:350)
[ERROR]         at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
[ERROR]         at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
[ERROR]         at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
[ERROR]         at java.base/java.lang.Thread.run(Thread.java:1583)
[ERROR] 
[ERROR] -&gt; [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
</code></pre>
<p>I had a Spring-Boot Test that took a long time to shut down gracefully. My Tests are written using the Spock Framework.</p>
<h1>Solution</h1>
<p>The config which worked for me was surefire config property <a href=""https://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html#shutdown"" rel=""nofollow noreferrer"">shutdown</a>. When you use value <code>testset</code>, the docs say: &quot;With(shutdown=testset) the test set may still continue to run in forked JVM.&quot;</p>
<p>My understanding this changes the default 'force kill' forks behavior to a synchronous 'wait for test set to exit on it's own' behavior.</p>
<p>So I used this property to remove the error, so far successfully when running the maven commands from within IntelliJ IDEA, MacOS Terminal (ZSH), or Jenkins SH step.</p>
<p>I'm using the following plugin version properties &amp; plugin configs in my pom.xml to execute Spring-Boot Tests written with the Spock Framework and the jacoco-maven-plugin to generate a test coverage report.</p>
<h2>pom.xml</h2>
<pre class=""lang-xml prettyprint-override""><code>&lt;properties&gt;
  &lt;maven-surefire-plugin.version&gt;3.2.5&lt;/maven-surefire-plugin.version&gt;&lt;!-- Check the latest version: https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin --&gt;
  &lt;gmavenplus-plugin.version&gt;3.0.2&lt;/gmavenplus-plugin.version&gt;&lt;!-- Check the latest version: https://mvnrepository.com/artifact/org.codehaus.gmavenplus/gmavenplus-plugin --&gt;
  &lt;jacoco-maven-plugin.version&gt;0.8.11&lt;/jacoco-maven-plugin.version&gt;&lt;!-- Check the latest version: https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin --&gt;
&lt;/properties&gt;

&lt;build&gt;
  &lt;plugins&gt;
    &lt;!-- Test Plugins :: Start --&gt;
    &lt;plugin&gt;
      &lt;groupId&gt;org.codehaus.gmavenplus&lt;/groupId&gt;
      &lt;artifactId&gt;gmavenplus-plugin&lt;/artifactId&gt;
      &lt;version&gt;${gmavenplus-plugin.version}&lt;/version&gt;
      &lt;executions&gt;
        &lt;execution&gt;
          &lt;goals&gt;
            &lt;goal&gt;addTestSources&lt;/goal&gt;
            &lt;goal&gt;compileTests&lt;/goal&gt;
          &lt;/goals&gt;
        &lt;/execution&gt;
      &lt;/executions&gt;
    &lt;/plugin&gt;
    &lt;plugin&gt;
      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
      &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
      &lt;version&gt;${maven-surefire-plugin.version}&lt;/version&gt;
      &lt;configuration&gt;
        &lt;parallel&gt;classes&lt;/parallel&gt;
        &lt;threadCount&gt;4&lt;/threadCount&gt;
        &lt;forkCount&gt;2&lt;/forkCount&gt;
        &lt;!-- jacoco-maven-plugin :: When using the maven-surefire-plugin or maven-failsafe-plugin you must not use
             a `forkCount` of `0` or set the `forkMode` to `never` as this would prevent the execution of the tests
             with the javaagent set and no coverage would be recorded.
             @see https://www.jacoco.org/jacoco/trunk/doc/maven.html
        --&gt;
        &lt;!-- After the plugin process is shutdown by sending SIGTERM signal (CTRL+C), SHUTDOWN command is received by
           every forked JVM. The value is set to (shutdown=exit) by default (changed in version 3.0.0-M4). The
           parameter can be configured with other two values testset and kill. With(shutdown=testset) the test set
           may still continue to run in forked JVM. Using exit forked JVM executes System.exit(1) after the plugin
           process has received SIGTERM signal.
           Maven Docs: https://maven.apache.org/surefire/maven-surefire-plugin/examples/shutdown.html
           StackOverflow: 
        --&gt;
        &lt;shutdown&gt;testset&lt;/shutdown&gt;
        &lt;!--suppress UnresolvedMavenProperty --&gt;
        &lt;argLine&gt;${maven-surefire-plugin.jvm-flags} ${argLine}&lt;/argLine&gt;
        &lt;includes&gt;
          &lt;include&gt;**/*Spec.java&lt;/include&gt;
          &lt;include&gt;**/*Test.java&lt;/include&gt;
        &lt;/includes&gt;
      &lt;/configuration&gt;
    &lt;/plugin&gt;
    &lt;plugin&gt;
      &lt;groupId&gt;org.jacoco&lt;/groupId&gt;
      &lt;artifactId&gt;jacoco-maven-plugin&lt;/artifactId&gt;
      &lt;version&gt;${jacoco-maven-plugin.version}&lt;/version&gt;
      &lt;executions&gt;
        &lt;execution&gt;
          &lt;id&gt;jacoco-initialize&lt;/id&gt;
          &lt;phase&gt;process-test-classes&lt;/phase&gt;&lt;!-- https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Lifecycle_Reference --&gt;
          &lt;goals&gt;
            &lt;goal&gt;prepare-agent&lt;/goal&gt;
          &lt;/goals&gt;
        &lt;/execution&gt;
        &lt;execution&gt;
          &lt;id&gt;jacoco-report&lt;/id&gt;
          &lt;phase&gt;test&lt;/phase&gt;&lt;!-- https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Lifecycle_Reference --&gt;
          &lt;goals&gt;
            &lt;goal&gt;report&lt;/goal&gt;
          &lt;/goals&gt;
        &lt;/execution&gt;
        &lt;execution&gt;
          &lt;id&gt;jacoco-check&lt;/id&gt;
          &lt;phase&gt;test&lt;/phase&gt;&lt;!-- https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Lifecycle_Reference --&gt;
          &lt;goals&gt;
            &lt;goal&gt;check&lt;/goal&gt;
          &lt;/goals&gt;
          &lt;configuration&gt;
            &lt;haltOnFailure&gt;false&lt;/haltOnFailure&gt;&lt;!-- https://www.jacoco.org/jacoco/trunk/doc/check-mojo.html#haltOnFailure --&gt;
            &lt;rules&gt;
              &lt;rule&gt;
                &lt;element&gt;PACKAGE&lt;/element&gt;
                &lt;limits&gt;
                  &lt;limit&gt;
                    &lt;counter&gt;METHOD&lt;/counter&gt;
                    &lt;value&gt;COVEREDRATIO&lt;/value&gt;
                    &lt;minimum&gt;80%&lt;/minimum&gt;
                  &lt;/limit&gt;
                  &lt;limit&gt;
                    &lt;counter&gt;CLASS&lt;/counter&gt;
                    &lt;value&gt;MISSEDCOUNT&lt;/value&gt;
                    &lt;maximum&gt;0&lt;/maximum&gt;
                  &lt;/limit&gt;
                &lt;/limits&gt;
              &lt;/rule&gt;
            &lt;/rules&gt;
          &lt;/configuration&gt;
        &lt;/execution&gt;
      &lt;/executions&gt;
    &lt;/plugin&gt;
    &lt;!-- Test Plugins :: End --&gt;
  &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>
"
601,30271798,1,23199284,raj bhandari,false,0,1704438706,1704438599,77762980,23260057,"<p>Your java version is not compatible with this project .
Please downgrade you java version from the system and set the path and run the project. i hope it would resolved the issue.</p>
<p>best if luck!!</p>
"
602,18117848,117,13174289,dehidehidehi,false,0,1687095766,1687095766,76500853,23260057,"<p>What fixed it for me was to add to <strong>both</strong> <code>surefire</code> and <code>failsafe</code> plugins the following configuration:</p>
<pre class=""lang-xml prettyprint-override""><code>&lt;configuration&gt;
   &lt;reuseForks&gt;false&lt;/reuseForks&gt;
   &lt;forkCount&gt;0&lt;/forkCount&gt;
&lt;/configuration&gt;
</code></pre>
"
603,10595855,2906,7804595,Valeriy K.,false,0,1679996502,1679996502,75864611,23260057,"<p>In my case, I used javaagent in integration tests. I found that javaagent wasn't downloaded and this led to such error. So ensure your application can access javaagent.</p>
"
605,15069196,722,10875311,Akash Jain,false,-1,1733171331,1733171331,79245518,79245309,"<p>try creating a command file like <code>somecommand.txt</code></p>
<pre><code>stop in comm.app.aaa.func
set a = 0
cont
</code></pre>
<p>and then feed the command to <code>jdb</code></p>
<pre><code>rlwrap jdb -attach 192.168.5.55:9999 &lt; somecommand.txt
</code></pre>
<p><strong>OR</strong></p>
<p>run an inline script</p>
<pre><code>echo -e &quot;stop in comm.app.aaa.func\nset a = 0\ncont&quot; | rlwrap jdb -attach 192.168.5.55:9999

</code></pre>
<p>Hope this helps</p>
"
606,19395247,4171,14183092,kerbermeister,false,2,1675165431,1675164413,75296434,51449889,"<h3>[UPDATE 2023/01/31]</h3>
<p>I would like make an addition to this topic and share my solution since <code>exchange()</code> operator <a href=""https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/reactive/function/client/WebClient.RequestHeadersSpec.html#exchangeToMono(java.util.function.Function)"" rel=""nofollow noreferrer"">is deprecated</a> since 5.3 version.</p>
<p>Details:</p>
<blockquote>
<p>Deprecated. since 5.3 due to the possibility to leak memory and/or
connections; please, use exchangeToMono(Function),
exchangeToFlux(Function); consider also using retrieve() which
provides access to the response status and headers via ResponseEntity
along with error status handling.</p>
</blockquote>
<p>So, I'll give an example for this task using <a href=""https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/reactive/function/client/WebClient.RequestHeadersSpec.html#retrieve()"" rel=""nofollow noreferrer"">retrieve()</a> operator and somehow simplify the file saving to file system along with <em>streaming</em> approach.</p>
<p>As it gives us an opportunity to access both headers and response body, we could do something like this:</p>
<pre><code>Mono&lt;Void&gt; fileWritten = webClient.get()
        .uri(uriBuilder -&gt; uriBuilder.path(&quot;/file/&quot;).build())
        .retrieve()                         // using retrieve since exchange() is deprecated
        .toEntityFlux(DataBuffer.class)     // return Mono&lt;ResponseEntity&lt;Flux&lt;DataBuffer&gt;&gt;&gt;
        .flatMap(entity -&gt; {
            // here we can access headers, body and etc. since we have ResponseEntity here
            if (MediaType.APPLICATION_JSON_VALUE.equals(entity.getHeaders().getContentType().toString())) {
                return createFile(entity.getBody(), &quot;no_file_payload_response&quot;); // save no payload body to a file
            } else {
                return createFile(entity.getBody(), &quot;file&quot;); // save file body to a file
            }
        });

fileWritten.subscribe(); // just for testing purposes, subscribe where you want depending on your requirements
</code></pre>
<p>The method for saving our stream <code>Publisher&lt;DataBuffer&gt;</code> to file system:</p>
<pre><code>private Mono&lt;Void&gt; createFile(Publisher&lt;DataBuffer&gt; body, String fileName) {
    Path path = Path.of(&quot;your_desired_path/&quot; + fileName);
    return DataBufferUtils.write(body, path,
            StandardOpenOption.CREATE_NEW); // use OpenOption you want depending on your requirements
}
</code></pre>
<p>Also, as you can see, using <code>DataBufferUtils.write()</code> we can directly write our stream to a file</p>
<p>We don't use any blocking API's here, like Input/OutputStream, so we're not buffering the entire content of a file in memory at the time.</p>
"
607,27249879,31,20774516,Adam Drzewiecki,false,3,1733906165,1673457453,75086780,51449889,"<p>Try:</p>
<pre><code>myMono.subscribeOn(Schedulers.boundedElastic()).toFuture().get(5L, TimeUnit.SECONDS)
</code></pre>
"
608,1864409,261,1688301,Anton Seredkin,false,26,1614863307,1614863307,66475675,51449889,"<p>To execute Client Request outside the Server Request pool, use <code>myWebClientMono.share().block();</code></p>
"
609,2752477,793,2371545,adelinor,false,42,1634683350,1602601458,64337846,51449889,"<h3>[UPDATE 2021/10/19]</h3>
<p><code>toProcessor()</code> is now deprecated.</p>
<p>Consider using</p>
<pre class=""lang-java prettyprint-override""><code>myMono.toFuture().get();
</code></pre>
<hr />
<p>As stated in the most voted answer, one should never block. In my case, that is the only option as we are using a reactive library within an imperative piece of code. The blocking can be done by <a href=""https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html#toProcessor--"" rel=""noreferrer"">wrapping the mono in a processor</a>:</p>
<pre class=""lang-java prettyprint-override""><code>myMono.toProcessor().block()
</code></pre>
"
610,15181773,1,10954869,Nurlan Rysbaev,false,-11,1580374914,1580374914,59982263,51449889,"<pre><code>RestResultMessage message= createWebClient()
                .get()
                .uri(uri)
                .exchange()
                .map(clientResponse -&gt; {
                    //delegation
                    ClientResponseWrapper wrapper = new 
                                 ClientResponseWrapper(clientResponse);
                    return Mono.just(wrapper);
                })
                .block() //wait until request is not done
                .map(result -&gt; {  
                    //convert to any data
                    if (!result.statusCode().isError()){
                       //extract the result from request
                        return create(RestResultMessage.Result.success, result.bodyToMono(String.class).block());}
                    } else {
                        return create(RestResultMessage.Result.error, result.statusCode().name());
                    }
                })
                .block();
</code></pre>
"
611,380859,68,735148,Y G,false,0,1733904799,1306514535,6155287,6154302,"<p>I will go for your own solution and take the algorithm given by Apache <a href=""https://commons.apache.org/proper/commons-transaction/locks/deadlock.html"" rel=""nofollow noreferrer"">Apache Commons Transaction Algorithm</a> as starting point.
You can use a ReentrantReadWriteLock although usually this lock fits better the pattern of one producer-many readers case which may not be what you are looking for. It seems your lock is more like a regular reentrant mutex lock.</p>
"
612,101191,4235,272388,Kru,true,4,1306609342,1306512238,6154873,6154302,"<p>I don't know if I understood well your question, as you say that when you lock a subtree for write, the whole structure is locked.
So, the simple solution is to have one RW lock for the whole structure.</p>

<p>By the way, <code>java.util.concurrent.atomic</code> won't help you more than a tree of RW locks.</p>

<hr>

<p>If you want to be able locking siblings independly, you may go with the second solution (a tree of locks where each node has a reference to its parent).</p>

<p>Locking a node would be locking it using its write lock and locking every parent using read locks.
A parent cannot be locked while a child is, because you cannot acquire its write lock as locking a child already acquired the read lock.
Locking a child is only permitted if no other thread has write-locked any parent.</p>

<p>The lock described above is an exclusive lock.
<em>(another name for read-write locks is shared-exclusive locks)</em></p>

<p>To add shared locks, each node also needs an atomic integer indicating:
if it's positive, the number of indirect write-locked children; if it's negative the number of times the node has been read-locked.
Also, the node and its parents will be read locked to avoid new write locks being acquired on parents.</p>

<p>The pseudo-code:</p>

<pre><code>Node {
    // fields
    parent: Node
    lock: RWLock
    count: AtomicInteger
}

public boolean trylocktree(node: Node, exclusive: boolean) {
    if (exclusive) {
        return trylocktree_ex(node, true);
    } else {
        return trylocktree_sh(node);
    }
}
private boolean switch_count(i: AtomicInteger, diff: int) {
    // adds diff to i if the sign of i is the same as the sign of diff
    while (true) {
        int v = i.get();
        if (diff &gt; 0 ? v &lt; 0 : v &gt; 0)
            return false;
        if (i.compareAndSet(v, v + diff))
            return true;
    }
}
private boolean trylocktree_ex(node: Node, writing: boolean) {
    // check if a node is read-locked
    if (!switch_count(node.count, 1))
        return false;
    // lock using the lock type passed as an arg
    if (!node.lock(writing).trylock()) {
        node.count--;
        return false;
    }
    // read-lock every parent
    if (!trylocktree_ex(node.parent, false)) {
        node.count--
        node.lock(writing).unlock();
        return false;
    }
    return true;
}
private boolean trylocktree_sh(node: Node) {
    // mark as shared-locked subtree
    if (!switch_count(node.count, -1))
        return false;
    // get shared-lock on parents
    if (!readlock_recursively(node)) {
        node.count++;
        return false;
    }
    return true;
}
private boolean readlock_recursively(node: Node) {
    if (!node.lock(false).trylock())
        return false;
    if (!readlock_recursively(node.parent)) {
        node.lock(false).unlock();
        return false;
    }
    return true;
}
</code></pre>

<p>If any lock couldn't be acquired, then you unlock what you have locked and retry later (you can use a global condition variable, a timeout, etc to achieve this).</p>

<p><strong>EDIT:</strong> added code to read-lock/write-lock a tree</p>
"
613,1658807,32447,1527544,Antoniossss,true,1,1708281282,1708281282,78016939,78016922,"<p>Typical SRPING&lt;-&gt;JPA&lt;-&gt;HIBERNATE version mismatch</p>
<p>Remove <code>hibernate</code> and related stuff from the POM. <code>pring-boot-starter-data-jpa</code> will pull required and COMPATIBLE version for you.</p>
"
614,263656,76028,549372,Martin Zeitler,false,0,1733898618,1733898618,79270668,77097128,"<p>Adding <a href=""https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client"" rel=""nofollow noreferrer""><code>mariadb-java-client</code></a> as dependency provides the driver ...</p>
<pre><code>dependencies {
    implementation(&quot;org.mariadb.jdbc:mariadb-java-client:3.5.1&quot;)
}
</code></pre>
"
615,26240396,1,20808338,patrickstart974,false,0,1694619036,1694619036,77098498,77097128,"<p>I found the issue I was using the wrong file : mariadb-java-client-3.2.0-sources.jar I use this instead : mariadb-java-client-3.2.0.jar It's working now</p>
"
616,18803236,9,13713129,Gavr,false,1,1694611801,1694611801,77097539,77097128,"<p>the problem is propably the string at line 14, try this .</p>
<pre><code>            String url = &quot;jdbc:mariadb://localhost:3306/your_database_name&quot;;
            String username = &quot;username&quot;;
            String password = &quot;password&quot;;
    
          try {
                Class.forName(&quot;org.mariadb.jdbc.Driver&quot;);
    
                // Create a database connection
            Connection connection = DriverManager.getConnection(url,username, 
   password);
}catch (ClassNotFoundException e) {
   e.printStackTrace();
}catch (SQLException e){
   e.printStackTrace();
}
</code></pre>
"
617,12635385,567,9185029,Alexander Katsenelenbogen,false,0,1694611123,1694611123,77097447,77097128,"<p>You should verify that the jdbc driver jar is in fact on the class path. One trick you can use is to simply <a href=""https://java2blog.com/print-classpath-java/"" rel=""nofollow noreferrer"">print out the classpath at the start of program execution.</a> If it <em>is</em> on your classpath, I'd be very surprised. If it is <em>not</em>, then you now have a line of investigation: How do you ensure that the driver jar is on your classpath when running within Eclipse?</p>
"
618,12714208,51,9236852,hani,false,0,1733896128,1732695521,79229431,4363952,"<p>CronSequenceGenerator is deprecated, You can use this :</p>
<pre><code>public static Date findNextTimeFromCornExpression (String cornExpression) {
    Date now = new Date();
    CronSchedule cronSchedule = CronSchedule.of(cornExpression);
    return cronSchedule.getExpression().getTimeAfter(now);
}
</code></pre>
<p>it work for java 17</p>
"
619,1628571,6261,1503570,lorraine batol,false,24,1470635845,1470635845,38822127,4363952,"<p>You can also leverage on spring's <a href=""http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/support/CronSequenceGenerator.html"" rel=""noreferrer"" title=""CronSequenceGenerator"">http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/scheduling/support/CronSequenceGenerator.html</a> for this</p>

<pre><code>CronSequenceGenerator generator = new CronSequenceGenerator(cronExpression);
Date nextRunDate= generator.next(new Date());
</code></pre>
"
620,6933297,1112,5322143,Jo&#227;o Neves,false,9,1441979041,1441903672,32507524,4363952,"<p>Here's an alternative similar to Quartz's CronExpression but without having to add a fully fledged scheduler to your project:
<a href=""https://github.com/jmrozanec/cron-utils"" rel=""noreferrer"">cron-utils</a></p>

<p>You can get the date you need with the following:</p>

<pre><code>//Get date for next execution
DateTime now = DateTime.now();
CronDefinition cronDefinition = CronDefinitionBuilder.instanceDefinitionFor(QUARTZ);
CronParser parser = new CronParser(cronDefinition);
ExecutionTime executionTime = ExecutionTime.forCron(parser.parse(""* * * * * * *""));
DateTime nextExecution = executionTime.nextExecution(now));
</code></pre>

<p>According to the official description, <a href=""https://github.com/jmrozanec/cron-utils"" rel=""noreferrer"">cron-utils</a> is:</p>

<blockquote>
  <p>A Java library to parse, validate, migrate crons as well as get human readable descriptions for them. The project follows the Semantic Versioning Convention and uses Apache 2.0 license.</p>
</blockquote>
"
621,419375,370,796509,nMoncho,false,8,1396624417,1396624417,22866604,4363952,"<p>If you're using Spring you could use:</p>

<pre><code>CronTrigger trigger = new CronTrigger(cron);
TriggerContext context = new TriggerContext() {

public Date lastScheduledExecutionTime() {
    return null;
}

public Date lastActualExecutionTime() {
    return null;
}

public Date lastCompletionTime() {
    return null;
}
};
return trigger.nextExecutionTime(context);
</code></pre>
"
622,104434,2863,279218,saugata,true,21,1291619244,1291619244,4364030,4363952,"<p>You can check <a href=""http://grepcode.com/file/repository.jboss.com/maven2/org.quartz-scheduler/quartz/1.7.3/org/quartz/CronExpression.java"">org.quartz.CronExpression</a>
It has a method named getNextValidTimeAfter which you can use.</p>
"
623,322981,335891,642706,Basil Bourque,false,1,1733895964,1733866820,79269887,15897844,"<h2>tl;dr</h2>
<pre class=""lang-java prettyprint-override""><code>Period
.between (
    LocalDate.parse ( &quot;3/9/2013&quot; ,  DateTimeFormatter.ofPattern( &quot;M/d/uuuu&quot; ) ) ,
    LocalDate.parse ( &quot;4/6/2013&quot; ,  DateTimeFormatter.ofPattern( &quot;M/d/uuuu&quot; ) ) ,
)
.isNegative ()
</code></pre>
<h2><em>java.time</em></h2>
<p>In modern Java (&amp; Kotlin) on Android, use the <em>java.time</em> classes that supplanted the terribly-flawed legacy date-time classes. Never use <code>Calendar</code>, <code>Date</code>, etc.</p>
<p>Android 26+ comes with an implementation of <em>java.time</em>. For earlier Android, the latest tooling provides most of the <em>java.time</em> functionality via “API desugaring”.</p>
<h3><code>LocalDate</code></h3>
<p>You said:</p>
<blockquote>
<p>String strDate1 = &quot;3/9/2013&quot;;</p>
<p>String strDate2 = &quot;4/6/2013&quot;;</p>
</blockquote>
<p>For a date-only value, without time-of-day, and without time zone or offset-from-UTC, use <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/time/LocalDate.html"" rel=""nofollow noreferrer""><code>java.time.LocalDate</code></a>.</p>
<p>FYI, better to use standard <a href=""https://en.wikipedia.org/wiki/ISO_8601"" rel=""nofollow noreferrer"">ISO 8601</a> formatting for your textual date-time values, rather than some custom or localized text. For a date-only value, that would be YYYY-MM-DD.</p>
<p>For your custom format, define a formatting pattern to match.</p>
<pre class=""lang-java prettyprint-override""><code>DateTimeFormatter f = DateTimeFormatter.ofPattern( &quot;M/d/uuuu&quot; ) ;
</code></pre>
<p>Parse.</p>
<pre class=""lang-java prettyprint-override""><code>LocalDate x = LocalDate.parse( strDate1 , f ) ;
LocalDate y = LocalDate.parse( strDate2 , f ) ;
</code></pre>
<p>To handle invalid inputs, trap for <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/time/format/DateTimeParseException.html"" rel=""nofollow noreferrer""><code>DateTimeParseException</code></a>.</p>
<p>Compare:</p>
<pre><code>boolean isXBeforeY = x.isBefore ( y ) ;
boolean isXAfterY = x.isAfter ( y ) ;
boolean isXEqualToY = x.isEqual ( y ) ;
</code></pre>
<p>Calculate elapsed time.</p>
<pre><code>Period elapsed = Period.between( x , y ) ;
</code></pre>
<p>You can check to see which date comes before the other by calling <a href=""https://docs.oracle.com/en/java/javase/23/docs/api/java.base/java/time/Period.html#isNegative()"" rel=""nofollow noreferrer""><code>Period#isNegative</code></a> &amp; <code>Period#isZero</code>.</p>
"
624,1144443,4637,2113996,eatSleepCode,false,0,1365498881,1365498881,15897964,15897844,"<p><a href=""http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html"" rel=""nofollow"">SimpleDateFormat</a> this shows small m is for minute and capital M is for month so try changing it.</p>
"
625,368269,94391,714969,Kevin Bowersox,false,0,1365498787,1365498787,15897920,15897844,"<p>You need to get months using <code>M</code> not minutes which is provided by <code>m</code>.</p>

<pre><code>SimpleDateFormat sdf = new SimpleDateFormat( ""M/d/yyyy"" );   
</code></pre>
"
626,2300811,2257,2021142,spiritwalker,false,0,1365498845,1365498686,15897884,15897844,"<p>try change your date format to the following</p>

<pre><code>SimpleDateFormat sdf = new SimpleDateFormat( ""M/d/yyyy"" );
</code></pre>
"
627,1025295,46368,1034737,PermGenError,true,5,1365498623,1365498623,15897862,15897844,"<p>you used wrong format for month. </p>

<pre><code>SimpleDateFormat sdf = new SimpleDateFormat( ""M/d/yyyy"" );
</code></pre>

<p><code>m</code> is for minutes in hours
<code>M</code> is for Month in year</p>
"
640,7407971,2523,5636313,Farid,false,5,1633684443,1633684443,69493372,43980110,"<p>If anyone is using Plain Java project with <code>Gradle</code> instead of <code>Maven</code> then change your module gradle file as follows:</p>
<p>Say you have following plugin in your module:</p>
<pre><code>apply plugin: 'java-library'
</code></pre>
<p>If you wanna have kotlin plugin then add kotlin plugin before java plugin:</p>
<pre><code>apply plugin: 'kotlin'
apply plugin: 'java-library'
</code></pre>
<p>Reasson is</p>
<blockquote>
<p>Your configuration adds the Kotlin compiler plugin, but doesn't adjust
the Java compiler plugin execution so that the Java compiler runs
after the Kotlin compiler. Therefore, the Java compiler runs before
Kotlin, and doesn't see Kotlin-compiled classes.</p>
</blockquote>
<p>as explained by <a href=""https://stackoverflow.com/a/43981979/5636313"">@yole</a> in answers</p>
"
628,2152974,400,1908807,moraleboost,false,0,1733884595,1733882488,79270286,72647286,"<p>Spring automatically calls <code>quit()</code> on your injected driver <a href=""https://github.com/spring-projects/spring-boot/blob/e72546d2a629b6bbb6203724ad0536d254f0e8a9/spring-boot-project/spring-boot-test-autoconfigure/src/main/java/org/springframework/boot/test/autoconfigure/web/servlet/WebDriverScope.java#L100"" rel=""nofollow noreferrer"">here</a>. I was attempting to take screenshots whenever my tests failed, and finding the driver was already closed. I already had the need for a custom driver, so I fixed this with a no-op <code>quit()</code> override.</p>
<pre><code>public class MyChromeDriver extends ChromeDriver
{
    private static final String SCREENSHOT_DIR = &quot;/path/for/screenshots/&quot;;
   
    public void takeScreenshot(String fileName) throws IOException
    {
        File srcfile = getScreenshotAs(OutputType.FILE);
        File dstFile = new File(SCREENSHOT_DIR + fileName + &quot;.png&quot;);

        dstFile.getParentFile().mkdirs();
        FileCopyUtils.copy(srcfile, dstFile);
    }
  
    /**
     * No-op quit which Spring can call after each test w/o doing any damage
     * @deprecated use {@link #realQuit()}
     */
    @Override
    @Deprecated
    public void quit() {}

    /**
     * Call this to actually invoke {@link ChromeDriver#quit()}
     */
    public void realQuit()
    {
        super.quit();
    }
}
</code></pre>
<p>This allowed me to give my base test class the ability to snap screenshots on error.</p>
<pre><code>@ExtendWith(SeleniumMvcIntegrationTest.class)
public class SeleniumMvcIntegrationTest implements TestWatcher
{
    @Inject
    protected MyChromeDriver driver;

    @Override
    public void testFailed(ExtensionContext context, Throwable throwable)
    {
        getTestInstanceDriver(context).takeScreenshot(throwable.getClass().getSimpleName() + &quot;-screenshot&quot;);

        // Can't call quit() in @AfterEach, or else it closes before we get the chance to take a screenshot
        getTestInstanceDriver(context).realQuit();
    }

    @Override
    public void testSuccessful(ExtensionContext context)
    {
        getTestInstanceDriver(context).realQuit();
    }

    @Override
    public void testDisabled(ExtensionContext context, Optional&lt;String&gt; reason)
    {
        getTestInstanceDriver(context).realQuit();
    }

    @Override
    public void testAborted(ExtensionContext context, Throwable cause)
    {
        getTestInstanceDriver(context).realQuit();
    }

    /**
     * This class is used to extend itself, which creates a new instance of SeleniumMvcIntegrationTest as a TestWatcher.
     * In the TestWatcher context, we want to access the driver belonging to the decorated instance; this convenience
     * method provides the ability to do that.
     */
    private MyChromeDriver getTestInstanceDriver(ExtensionContext context)
    {
        return ((SeleniumMvcIntegrationTest) context.getRequiredTestInstance()).driver;
    }
}
</code></pre>
<p>Where I'm calling <code>realQuit()</code>, you could just as easily leave the driver open.</p>
"
629,26038265,1,21209808,Владимир Алексеев,false,0,1676365366,1676365366,75445489,72647286,"<p>I faced a similar problem recently. Adding the    <code>@Scope(ConfigurableBeanFactory.SCOPE_SINGLETON)</code> Spring annotation in method, which inject <code>webDriver</code> bean, helped me.
<a href=""https://github.com/spring-projects/spring-boot/issues/7454"" rel=""nofollow noreferrer"">https://github.com/spring-projects/spring-boot/issues/7454</a></p>
"
630,1231269,163,1195806,disco.dan.silver,false,1,1656084069,1656084069,72746203,72647286,"<p>I found that there are two ways to address this.</p>
<p>However, it all comes down to the Selenium webdriver java implementation not really being &quot;Spring&quot; friendly. You need a new <code>WebDriver</code> for each test and it needs to be shared between page objects. There is no great way to do this with <code>@Autowired</code> page objects.</p>
<p>So you can use dependency injection, but you would have to use the <code>@DirtiesContext</code> annotation before each test, which would create and destroy the <code>WebDriver</code> each time (along with all the other injected objects). However, it would also be potentially very expensive depending on how intense each test is and how big the context that is being reloaded every time would be.</p>
<p>The other way is to not have the page objects injected, but to create them anew before each test (jUnit: <code>@BeforeEach</code>, TestNG: <code>@BeforeMethod</code>), with the <code>WebDriver</code> object as a constructor argument for each so that each page object can share the <code>WebDriver</code>. You would also need to perform the <code>WebDriver.quit()</code> after each test to shut down the stale driver (jUnit: <code>@AfterEach</code>, TestNG: <code>@AfterMethod</code>).</p>
"
631,22366381,1,16582085,Utshav Timsina,false,0,1630841020,1630841020,69062932,53497454,"<p>This is the Last Option that worked for me.. You need to check few things first</p>
<p>try installing the project using
<code>mvn clean install</code></p>
<p>If the project gets Installed then this is an issue of your IDE being unable to correctly build your project</p>
<p>FIX:: Worked For me Reinstall IDE.. Will save you a day.</p>
"
632,22366381,1,16582085,Utshav Timsina,false,0,1630840792,1630840792,69062900,53497454,"<p>This is the Last Option that worked for me..
You need to check few things first</p>
<ul>
<li>try installing the project using</li>
</ul>
<blockquote>
<p>mvn clean install</p>
</blockquote>
<p>If the project gets Installed then this is an issue of your IDE being unable to correctly build your project</p>
<p>FIX:: Worked For me
Reinstall IDE.. Will save you a day.</p>
"
633,19047275,99,13906204,p91java,false,1,1595040727,1595040727,62964131,53497454,"<p>Update your module-info.java file</p>
<pre><code>requires javafx.fxml;
requires javafx.controls;
requires javafx.graphics;
requires javafx.web;

opens sample;

opens sample.controller;
</code></pre>
<p>It opens the package (eg. sample) which contains your Launcher file and opens package conatinsyoyr controllers and its corresponding fxml files (eg. sample.controller)</p>
"
634,2137291,121,1896730,JyotiKumarPoddar,false,1,1592211806,1592211806,62384801,53497454,"<p><strong>I fixed this error by disabling Kotlin plugin since I am not using it and the problem is solved</strong></p>
"
635,16826723,9,12165830,mpho shai,false,-2,1592139588,1592132018,62371508,53497454,"<p>I had the same issue. Here is what worked:</p>

<ol>
<li>On IntellijIDEA go to 'Tools' menu at the top of the application: <img src=""https://i.sstatic.net/ykKyr.png"" alt=""IntelliJ IDEA IDE"">.</li>
<li>Then scroll down to 'Kotlin'.</li>
<li>Click 'Configure Kotlin in Project'.</li>
</ol>
"
636,38337363,1,28721846,Yordan Petkov,false,0,1733880453,1733858236,79269495,18907688,"<p>Try this one:</p>
<pre class=""lang-java prettyprint-override""><code>class DegreeCtoFahrenheit {

    public static void main (String[] args)
    {
        double tempInDegC = 30.2;
        var  tempInF = tempInDegC * (9/5) +32;
        System.out.println(&quot;Temperature in Fahrenheit is&quot; + tempInF);
    }
</code></pre>
"
637,1705277,17861,1564449,sashkello,false,0,1379642049,1379642049,18907733,18907688,"<p>In your loop you have <code>fdeg &lt;= 20</code> which can't be verified if <code>fdeg</code> is not initialized. That is, at the very first loop run it tries to check it but can't because <code>fdeg</code> is undefined.</p>

<p>Just put <code>double fdeg = 0;</code> and it will fix it. But I have a feeling you really mean <code>cdeg &lt;= 20</code> though.</p>
"
638,1082858,106215,1079354,Makoto,true,2,1379642022,1379642022,18907730,18907688,"<p>In this line:</p>

<pre><code>for (cdeg = 0; fdeg &lt;= 20; cdeg++)
</code></pre>

<p>You're making a declaration that <code>fdeg</code> is a defined value, and is less than or equal to 20.  However, you only <em>declare</em> <code>fdeg</code>, but you do not set any initial value to it.  You cannot use a variable that is not defined - hence the error:</p>

<blockquote>
  <p>variable <code>fdeg</code> might not have been initialized</p>
</blockquote>

<p>What you likely intended to do was go from <code>cdeg = 0</code> to <code>cdeg = 20</code>.  Simply change the variable in your loop.</p>

<pre><code>for (cdeg = 0; cdeg &lt;= 20; cdeg++)
</code></pre>
"
639,441661,88188,831878,Ray Toal,false,0,1379641854,1379641854,18907708,18907688,"<p>Change</p>

<pre><code>fdeg &lt;= 20
</code></pre>

<p>to</p>

<pre><code>cdeg &lt;= 20
</code></pre>
"
665,255665,234607,535871,Ted Hopp,false,1,1302713874,1302713874,5652850,5652772,"<p>If you want to tell the compiler that an error will definitely be thrown, but don't want to in-line the logic for constructing the error, you can do something like this:</p>

<pre><code>} else {
   throw createErrorMethod();
}
</code></pre>

<p>where <code>createErrorMethod()</code> is declared to return some kind of Throwable.</p>
"
641,3569155,3544,2979955,Chris Sprague,false,28,1586382340,1586382340,61110556,43980110,"<p>If you are using Android Studio and have already added the Kotlin plugins via Settings -> Plugins -> Kotlin, then it could be that you haven't setup the rest of Gradle to use Kotlin. Here's a snippet from <a href=""https://medium.com/@elye.project/setup-kotlin-for-android-studio-1bffdf1362e8"" rel=""noreferrer"">https://medium.com/@elye.project/setup-kotlin-for-android-studio-1bffdf1362e8</a>:</p>

<p>Step 1: Setup the Kotlin Plugin in Android Studio</p>

<blockquote>
  <p>Android Studio → Preferences… →Plugins → Browse Repository → type
  “Kotlin” in search box → install</p>
</blockquote>

<p>Step 2:  Add Kotlin classpath to project Build.Gradle</p>

<pre><code>buildscript {
    ext.kotlin_version = ""1.1.1""
    ext.supportLibVersion = ""25.3.0""
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0'
        classpath ""org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version""
        classpath ""org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version""

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
</code></pre>

<p>Step 3: Add Kotlin library and apply Kotlin Plugins in your module Build.gradle</p>

<pre><code>apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    // ... various gradle setup
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile ""com.android.support:appcompat-v7:$supportLibVersion""
    compile ""com.android.support:recyclerview-v7:$supportLibVersion""
    compile ""org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version""
}
</code></pre>
"
642,2890337,2475,2479282,Sean,false,5,1497041319,1497041319,44466470,43980110,"<p>I ran into this same error, but had the correct pom setup. My issue was that I had just converted a Java class to a Kotlin class with Intellij, which left that Kotlin file in <code>src/main/java</code>.</p>

<p>The solution for me was to create a <code>src/main/kotlin</code> and move my Kotlin class there, and leave my Java files in <code>src/main/java</code>. But you do definitely need the maven setup that @yole's answer shows.</p>
"
643,49385,96825,147024,yole,true,111,1494858275,1494858275,43981979,43980110,"<p>Your Maven configuration adds the Kotlin compiler plugin, but doesn't adjust the Java compiler plugin execution so that the Java compiler runs after the Kotlin compiler. Therefore, the Java compiler runs before Kotlin, and doesn't see Kotlin-compiled classes.</p>

<p>Here's a snippet showing the correct configuration for a mixed-language project (taken from <a href=""http://kotlinlang.org/docs/reference/using-maven.html#compiling-kotlin-and-java-sources"" rel=""noreferrer"">the documentation</a>):</p>

<pre><code>&lt;build&gt;
    &lt;plugins&gt;
        &lt;plugin&gt;
            &lt;artifactId&gt;kotlin-maven-plugin&lt;/artifactId&gt;
            &lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;
            &lt;version&gt;${kotlin.version}&lt;/version&gt;
            &lt;executions&gt;
                &lt;execution&gt;
                    &lt;id&gt;compile&lt;/id&gt;
                    &lt;goals&gt; &lt;goal&gt;compile&lt;/goal&gt; &lt;/goals&gt;
                    &lt;configuration&gt;
                        &lt;sourceDirs&gt;
                            &lt;sourceDir&gt;${project.basedir}/src/main/kotlin&lt;/sourceDir&gt;
                            &lt;sourceDir&gt;${project.basedir}/src/main/java&lt;/sourceDir&gt;
                        &lt;/sourceDirs&gt;
                    &lt;/configuration&gt;
                &lt;/execution&gt;
                &lt;execution&gt;
                    &lt;id&gt;test-compile&lt;/id&gt;
                    &lt;goals&gt; &lt;goal&gt;test-compile&lt;/goal&gt; &lt;/goals&gt;
                    &lt;configuration&gt;
                        &lt;sourceDirs&gt;
                            &lt;sourceDir&gt;${project.basedir}/src/test/kotlin&lt;/sourceDir&gt;
                            &lt;sourceDir&gt;${project.basedir}/src/test/java&lt;/sourceDir&gt;
                        &lt;/sourceDirs&gt;
                    &lt;/configuration&gt;
                &lt;/execution&gt;
            &lt;/executions&gt;
        &lt;/plugin&gt;
        &lt;plugin&gt;
            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
            &lt;version&gt;3.5.1&lt;/version&gt;
            &lt;executions&gt;
                &lt;!-- Replacing default-compile as it is treated specially by maven --&gt;
                &lt;execution&gt;
                    &lt;id&gt;default-compile&lt;/id&gt;
                    &lt;phase&gt;none&lt;/phase&gt;
                &lt;/execution&gt;
                &lt;!-- Replacing default-testCompile as it is treated specially by maven --&gt;
                &lt;execution&gt;
                    &lt;id&gt;default-testCompile&lt;/id&gt;
                    &lt;phase&gt;none&lt;/phase&gt;
                &lt;/execution&gt;
                &lt;execution&gt;
                    &lt;id&gt;java-compile&lt;/id&gt;
                    &lt;phase&gt;compile&lt;/phase&gt;
                    &lt;goals&gt; &lt;goal&gt;compile&lt;/goal&gt; &lt;/goals&gt;
                &lt;/execution&gt;
                &lt;execution&gt;
                    &lt;id&gt;java-test-compile&lt;/id&gt;
                    &lt;phase&gt;test-compile&lt;/phase&gt;
                    &lt;goals&gt; &lt;goal&gt;testCompile&lt;/goal&gt; &lt;/goals&gt;
                &lt;/execution&gt;
            &lt;/executions&gt;
        &lt;/plugin&gt;
    &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>
"
644,11291045,11,8280131,Mittul Mandhan,false,0,1733871215,1733870463,79270009,35569092,"<p>If you are using Jackson, Make sure all your serializable classes(including HAS-A classes) have a default constructor and getter methods.</p>
<p>In my case adding <code>@NoArgsConstructor</code> and <code>@Getter</code>
worked in Spring Boot</p>
"
645,26028028,51,19734673,Thiện Thuật,false,0,1710406221,1710406221,78159144,35569092,"<p>Excluse jackson-core and jackson-annotations from your jackson-databind dependency.
They try to add them seperately.</p>
<pre><code>&lt;dependency&gt;
      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
      &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;
      &lt;version&gt;${com.fasterxml.jackson.core.version}&lt;/version&gt;
      &lt;exclusions&gt;
        &lt;exclusion&gt;
          &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
          &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;
        &lt;/exclusion&gt;
        &lt;exclusion&gt;
          &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
          &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;
        &lt;/exclusion&gt;
      &lt;/exclusions&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
      &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;
      &lt;version&gt;${com.fasterxml.jackson.core.version}&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
      &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;
      &lt;version&gt;${com.fasterxml.jackson.core.version}&lt;/version&gt;
    &lt;/dependency&gt;
</code></pre>
<p>Please remember that all dependencies have to be the same version.</p>
"
646,29958009,11,22958451,Ronak Gupta,false,1,1700602113,1700574749,77523367,35569092,"<p>Sorry late to party but Using below dependency solved my problem.</p>
<p>Attached link:
<a href=""https://github.com/jcustenborder/kafka-connect-spooldir/issues/156"" rel=""nofollow noreferrer"">https://github.com/jcustenborder/kafka-connect-spooldir/issues/156</a></p>
<pre class=""lang-java prettyprint-override""><code>&lt;dependency&gt;
            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
            &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;
            &lt;version&gt;2.12.0&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
"
647,20986281,45,15420009,Dev9321,false,0,1684082376,1684082376,76248604,35569092,"<p>Start adding required <code>jackson</code> related jars which helps in converting <code>JSON</code> to <code>POJO</code> and <code>POJO</code> to <code>JSON</code> responses. (<code>jackson-core</code>, <code>jackson-annotations</code>, <code>jackson-databind</code>). Lets pretend you have already added these Jar still you're facing this issue here are some of the trouble shooting steps</p>
<p><em><strong>TROUBLE SHOOTING STEPS:</strong></em></p>
<ol>
<li>First check if they are any conflicts with any other jackson related jars which comes with different spring/java related jars with maven command <code>mvn dependecy:tree</code> if you find any conflicting jackson jars try excluding them like below</li>
</ol>
<pre><code>   &lt;exclusion&gt;      
   &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;  
   &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;    
   &lt;/exclusion&gt;   
   &lt;/&lt;exclusions&gt;
</code></pre>
<ol start=""2"">
<li>If you didn't find any conflicts then go to you're local maven .m2 directory (storage for all local maven dependencies) verify the expecting class is part of the jar.</li>
</ol>
<p><code> cd (.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.2.2)</code></p>
<p><code>jar -xvf</code> this command will explode the jar and generates all the corresponding classes</p>
<ol start=""3"">
<li>If it didn't worked still try deleting/re importing jackson related folder from local repository (.m2). you can re import by executing maven command (<code>mvn clean install</code>)</li>
</ol>
"
666,281244,39147,577423,Howard,false,0,1416207752,1302713719,5652833,5652772,"<p>A method declared ""throws Exception"" does not have to throw this exception in any run path. Therefore the compiler does not know whether always an exception will be thrown by the method and assumes an normal termination also. Thus it might be that <code>var1</code> is not initialized.</p>
"
648,11470688,71,8407617,Jagrat,false,7,1645597730,1645597730,71232248,35569092,"<p>I also faced the similar issues and by referring to the above solutions i was able to resolve the issue.</p>
<p><strong>All the dependencies must have same version</strong>.</p>
<p>Following are the dependencies added in the pom.xml file</p>
<pre><code>&lt;dependency&gt;
            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
            &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;
            &lt;version&gt;2.8.7&lt;/version&gt;
&lt;/dependency&gt;


 &lt;dependency&gt;
            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
            &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;
            &lt;version&gt;2.8.7&lt;/version&gt;
 &lt;/dependency&gt;


 &lt;dependency&gt;
            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;
            &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;
            &lt;version&gt;2.8.7&lt;/version&gt;
  &lt;/dependency&gt;
</code></pre>
"
649,17000499,50750,12299000,kaya3,false,1,1641646928,1641646928,70632551,415687,"<p>Flip this around and ask: why are fields initialised to default values? If the Java compiler required you to initialise fields yourself instead of using their default values, that would be more efficient because there would be no need to zero out memory before you used it. So it would be a sensible language design if <em>all</em> variables were treated like local variables in this regard.</p>
<p>The reason is not because it's more difficult to check this for fields than for local variables. The Java compiler already knows how to check whether a field is definitely initialised by a constructor, because it has to check this for <code>final</code> fields. So it would be little extra work for the compiler to apply the same logic to other fields to ensure they are definitely assigned in the constructor.</p>
<p>The reason is that, even for <code>final</code> fields where the compiler proves that the field is definitely assigned in the constructor, its value before assignment can still be visible from other code:</p>
<pre class=""lang-java prettyprint-override""><code>class A {
    final int x;
    A() {
        this.x = calculate();
    }
    int calculate() {
        System.out.println(this.x);
        return 1;
    }
}
</code></pre>
<p>In this code, the constructor definitely assigns to <code>this.x</code>, but even so, the field's default initial value of <code>0</code> is visible in the <code>calculate</code> method at the point where <code>this.x</code> is printed. If the field wasn't zeroed out before the constructor was invoked, then the <code>calculate</code> method would be able to observe the contents of uninitialised memory, which would be non-deterministic behaviour and have potential security concerns.</p>
<p>The alternative would be to forbid the method call <code>calculate()</code> at this point in the code where the field isn't yet definitely assigned. But that would be inconvenient; it is useful to be able to call methods from the constructor like this. The convenience of being able to do that is worth more than the tiny performance cost of zeroing out the memory for the fields before invoking the constructor.</p>
<p>Note that this reasoning does not apply to local variables, because a method's uninitialised local variables are not visible from other methods; because they are local.</p>
"
650,7113022,1,5440258,Ankit Mittal,false,0,1620977426,1620925673,67523312,415687,"<p>Memory stack for methods is created at execution time. The method stack order is decided at execution time.</p>
<p>There might be a function that may not be called at all.  So to instantiate local variables at the time of object instantiation would be a complete wastage of memory. Also, Object variables remain in memory for a complete object lifecycle of a class whereas, local variables and their values become eligible for garbage collection the moment they are popped from the memory stack.</p>
<p>So, To give memory to the variables of methods that might not even be called or even if called, will not remain inside memory for the lifecycle of an object, would be a completely illogical and memory-waste-worthy</p>
"
651,11214309,61,8227431,kumquatfelafel,false,3,1610853149,1536720560,52286782,415687,"<p>The idea behind local variables is they only exist inside the limited scope for which they are needed. As such, there should be little reason for uncertainty as to the value, or at least, where that value is coming from. I could imagine many errors arising from having a default value for local variables.</p>
<p>For example, consider the following simple code... (<strong>N.B. let us assume for demonstration purposes that local variables are assigned a default value, as specified, if not explicitly initialized</strong>)</p>
<pre><code>System.out.println(&quot;Enter grade&quot;);
int grade = new Scanner(System.in).nextInt(); // I won't bother with exception handling here, to cut down on lines.
char letterGrade; // Let us assume the default value for a char is '\0'
if (grade &gt;= 90)
    letterGrade = 'A';
else if (grade &gt;= 80)
    letterGrade = 'B';
else if (grade &gt;= 70)
    letterGrade = 'C';
else if (grade &gt;= 60)
    letterGrade = 'D';
else
    letterGrade = 'F';
System.out.println(&quot;Your grade is &quot; + letterGrade);
</code></pre>
<p>When all is said and done, <em><strong>assuming the compiler assigned a default value of '\0' to letterGrade</strong></em>, this code as written would work properly. However, what if we forgot the else statement?</p>
<p>A test run of our code might result in the following</p>
<pre class=""lang-none prettyprint-override""><code>Enter grade
43
Your grade is
</code></pre>
<p>This outcome, while to be expected, surely was not the coder's intent. Indeed, probably in a vast majority of cases (or at least, a significant number, thereof), the default value wouldn't be the <em>desired</em> value, so in the vast majority of cases the default value would result in error. It makes more sense to force the coder to assign an initial value to a local variable before using it, since the debugging grief caused by forgetting the <code>= 1</code> in <code>for(int i = 1; i &lt; 10; i++)</code> far outweighs the convenience in not having to include the <code>= 0</code> in <code>for(int i; i &lt; 10; i++)</code>.</p>
<p>It is true that try-catch-finally blocks could get a little messy (but it isn't actually a catch-22 as the quote seems to suggest), when for example an object throws a checked exception in its constructor, yet for one reason or another, something <em>must</em> be done to this object at the end of the block in finally. A perfect example of this is when dealing with resources, which must be closed.</p>
<p>One way to handle this in the past might be like so...</p>
<pre><code>Scanner s = null; // Declared and initialized to null outside the block. This gives us the needed scope, and an initial value.
try {
    s = new Scanner(new FileInputStream(new File(&quot;filename.txt&quot;)));
    int someInt = s.nextInt();
} catch (InputMismatchException e) {
    System.out.println(&quot;Some error message&quot;);
} catch (IOException e) {
    System.out.println(&quot;different error message&quot;);
} finally {
    if (s != null) // In case exception during initialization prevents assignment of new non-null value to s.
        s.close();
}
</code></pre>
<p>However, as of Java 7, this finally block is no longer necessary using try-with-resources, like so.</p>
<pre><code>try (Scanner s = new Scanner(new FileInputStream(new File(&quot;filename.txt&quot;)))) {
    ...
    ...
} catch(IOException e) {
    System.out.println(&quot;different error message&quot;);
}
</code></pre>
<p>That said, (as the name suggests) this only works with resources.</p>
<p>And while the former example is a bit yucky, this perhaps speaks more to the way try-catch-finally or these classes are implemented than it speaks about local variables and how they are implemented.</p>
<p>It is true that fields are initialized to a default value, but this is a bit different. When you say, for example, <code>int[] arr = new int[10];</code>, as soon as you've initialized this array, the object exists in memory at a given location. Let's assume for a moment that there is no default values, but instead the initial value is whatever series of 1s and 0s happens to be in that memory location at the moment. This could lead to non-deterministic behavior in a number of cases.</p>
<p>Suppose we have...</p>
<pre><code>int[] arr = new int[10];
if(arr[0] == 0)
    System.out.println(&quot;Same.&quot;);
else
    System.out.println(&quot;Not same.&quot;);
</code></pre>
<p>It would be perfectly possible that <code>Same.</code> might be displayed in one run and <code>Not same.</code> might be displayed in another. The problem could become even more grievous once you start talking reference variables.</p>
<pre><code>String[] s = new String[5];
</code></pre>
<p>According to definition, each element of s should point to a String (or is null). However, if the initial value is whatever series of 0s and 1s happens to occur at this memory location, not only is there no guarantee you'll get the same results each time, but there's also no guarantee that the object s[0] points to (assuming it points to anything meaningful) even <strong>is</strong> a String (perhaps it's a Rabbit, <strong>:p</strong>)! This lack of concern for type would fly in the face of pretty much everything that makes Java Java. So while having default values for local variables could be seen as optional at best, having default values for instance variables is closer to a <strong>necessity</strong>.</p>
"
652,6468900,348,7533664,htlbydgod,false,0,1504071958,1504071958,45952767,415687,"<p>Instance variable will have default values but the local variables could not have default values. Since local variables basically are in methods/behavior, its main aim is to do some operations or calculations. Therefore, it is not a good idea to set default values for local variables. Otherwise, it is very hard and time-consuming to check the reasons of unexpected answers.</p>
"
653,1678474,338,1543391,Mitra,false,-2,1610852787,1419974430,27712731,415687,"<p>I could think of the following two reasons</p>
<ol>
<li>As most of the answers said, by putting the constraint of initialising the local variable, it is ensured that the local variable gets assigned a value as the programmer wants and ensures the expected results are computed.</li>
<li>Instance variables can be hidden by declaring local variables (same name) - to ensure the expected behaviour, local variables are forced to be initialised to a value (I would totally avoid this, though).</li>
</ol>
"
654,10929,561316,20860,Bill Karwin,true,3,1733853301,1733853301,79269260,79269188,"<p>This isn't a problem with the Connector/J, it's a problem with the implementation of <code>java.sql.Timestamp.toString()</code> according to <a href=""https://bugs.mysql.com/bug.php?id=83989"" rel=""nofollow noreferrer"">https://bugs.mysql.com/bug.php?id=83989</a></p>
<p>That bug shows a standalone Java example of <code>java.sql.Timestamp</code> truncating trailing zeroes, even without fetching the value from a JDBC connection.</p>
<p>You can subclass <code>java.sql.Timestamp</code>.</p>
<p>Or you can cast a datetime to a string in your SQL query before it is returned in the result set.</p>
<p>I tested DBeaver and made it display trailing zeroes of a datetime by casting it. Here's my test query:</p>
<pre><code>mysql&gt; create table t ( id serial primary key, dt datetime(3));

mysql&gt; insert into t (dt) values (now()), (now(3));

mysql&gt; select id, dt, cast(dt as char) from test.t 
</code></pre>
<p>Here's a screenshot of the result in DBeaver, showing the non-cast <code>dt</code> column truncates trailing zeroes, and the column preserves trailing zeroes when I cast it to CHAR.</p>
<p><a href=""https://i.sstatic.net/1AyC8l3L.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/1AyC8l3L.png"" alt=""enter image description here"" /></a></p>
<p>I'm not sure why it was working with your old version. Perhaps you were using a different JDK that implemented <code>java.sql.Timestamp</code> differently?</p>
"
655,2838598,23,2438646,Burhan Ayan,false,0,1720538311,1720538311,78726450,29885428,"<p>Here is my solution if it is desired that the assignment of the <code>name</code> parameter should only be possible within the builder method;</p>
<pre class=""lang-java prettyprint-override""><code>-&gt; Person.builder(&quot;John&quot;).surname(&quot;Doe&quot;);
 X Person.builder(&quot;John&quot;).name(&quot;John&quot;);
 X Person.builder().name(&quot;John&quot;);
</code></pre>
<pre class=""lang-java prettyprint-override""><code>@Builder
public class Person {
    private String name;
    private String surname;

    private static class PersonBuilder {
        /**
         * Overrides existing name method and makes it private
         */
        private PersonBuilder name(String name) {
            name = name;
            return this;
        }
    }

    /**
     * An overriden default builder to make it private and give user only the
     * builder(string) method as option
     */
    private static PersonBuilder builder() {
        return new PersonBuilder();
    }

    public static PersonBuilder builder(String name) {
        return builder().name(name);
    }
}
</code></pre>
"
689,5145677,1699,4121744,BOC,true,38,1533848171,1533848171,51775637,51773218,"<p>I think that specifying a <a href=""https://docs.gradle.org/current/userguide/plugins.html#sec:custom_plugin_repositories"" rel=""noreferrer"">custom plugin repository</a> looks promising: this feature lets you configure the <code>plugins{}</code> DSL to resolve from other repositories in addition to the gradle plugin portal. I think you'd want to update your <code>settings.gradle</code> with configuration something along the lines of:</p>

<pre><code>pluginManagement {
  repositories {
      mavenLocal()
      gradlePluginPortal()
  }
}
</code></pre>

<p>(Note that this code block needs to appear at the top of <code>settings.gradle</code>).</p>
"
656,3884084,143,3215926,Cest la vie,false,0,1707503129,1707503129,77970138,29885428,"<p>As far as I'm concerned, <a href=""https://stackoverflow.com/a/49525430/3215926"">The Gilbert Arenas Dagger's answer</a> is the closest to perfect, but it's a bit verbose because it doesn't take into account what I call the &quot;Unobtrusive Principle&quot; of Lombok contract (in fact, I don't know, how it's called by authors - they just mention about it without any title):</p>
<blockquote>
<p>Lombok NEVER generates methods with <strong>name</strong>, already present in class explicitly, unless <code>@Tolerate</code> annotation stands over this explicitly presented method</p>
</blockquote>
<p><em>I call it the &quot;Unobtrusive Principle&quot; by analogy with Front-End - there was a popular similar principle for JavaScript some time ago</em></p>
<p>So, there is no need to write method <code>private static PersonBuilder builder()</code> in this example. You can just write <code>return new PersonBuilder().name(name);</code> instead of <code>return builder().name(name);</code> in your <code>builder(String name)</code> method - it will works exactly the same way:</p>
<pre class=""lang-java prettyprint-override""><code>import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NonNull;
import lombok.experimental.FieldDefaults;

@Getter
@Builder
@FieldDefaults(level = PRIVATE, makeFinal = true)
@AllArgsConstructor(access = AccessLevel.PRIVATE) // If immutability is desired
public class Person {
    @NonNull String name; // Presumably name cannot be null since its required by the builder
    String surname;

    public static PersonBuilder builder(String name) {
        return new PersonBuilder().name(name);
    }
}
</code></pre>
<p>P.S. <code>@FieldDefaults(level = PRIVATE, makeFinal = true)</code> can be replaced with <code>private final</code> modifiers before every field, or <code>lombok.config</code> settings file in a root of project, contains this rules:</p>
<pre><code>lombok.fieldDefaults.defaultPrivate = true
lombok.fieldDefaults.defaultFinal = true
</code></pre>
"
657,1884636,814,1704104,Bruno Negr&#227;o Zica,false,1,1685484727,1685483669,76368906,29885428,"<p>What about this approach?</p>
<pre class=""lang-java prettyprint-override""><code>import lombok.Data;
import lombok.experimental.Accessors;

@Data
@Accessors(chain = true, fluent = true)
public class Person {
    private final String name; // 'final' prevents lombok from creating a setter method
    private String surname;

    public Person(String name) {
        this.name = name; // mandatory
        this.surname = null; // optional, with default value of 'null'
    }

    public static void main(String[] args) {
        Person gabi = new Person(&quot;Gabriela&quot;);
        Person smith = new Person(&quot;John&quot;).surname(&quot;Smith&quot;);
        System.out.println(gabi);
        System.out.println(smith);
    }
}
</code></pre>
<p>Executing <code>main()</code> will print:</p>
<pre><code>Person(name=Gabriela, surname=null)
Person(name=John, surname=Smith)
</code></pre>
<p>The combination of</p>
<pre class=""lang-java prettyprint-override""><code>@Data
@Accessors(chain = true, fluent = true)
</code></pre>
<p>Makes lombok create setters that return <code>this</code> instead of void, and the getters and setters will be named as the property names, without 'get' and 'set' prefix.</p>
<p>There will be a setter for <code>surname()</code>, but because <code>name</code> is <code>final</code>,  there won't be a setter for <code>name</code>.</p>
<p>I guess this implemenation correctly accomodates the builder pattern when there are mandatory and optional fields.</p>
"
658,2927437,1333,2508466,yaccob,false,1,1648240438,1648240438,71622807,29885428,"<p>In order to make limitations and risks implied by lombok's builder implementation as obvious as possible and therefore reduce the probability of erroneous abuse, I propose the following solution:</p>
<pre class=""lang-java prettyprint-override""><code>import lombok.Builder;

@Builder(builderClassName = &quot;UnsafeBuilder&quot;)
public class Person {
    private String name;
    private String surname;

    public static UnsafeBuilder builder(String name) {
        return new UnsafeBuilder().name(name);
    }
}
</code></pre>
<p>Using this solution as intended is straightforward:</p>
<pre class=""lang-java prettyprint-override""><code>Person thePerson = Person.builder(&quot;the_name&quot;).surname(&quot;the_surname&quot;).build();
</code></pre>
<p>The only way to use the builder in an unintended way makes the risk obvious, and most probably won't be chosen by mistake:</p>
<pre class=""lang-java prettyprint-override""><code>final Person unsafePerson = new Person.UnsafeBuilder().surname(&quot;the_surname&quot;).build();
</code></pre>
<p>The class name could of course be chosen even more radically - for example <code>NeverCallThisConstructor</code>.</p>
"
659,10641439,149,7836305,Philippe Escure,false,5,1643278741,1643278741,70876875,29885428,"<p>Here is an inspiration of Pawel response, with an hidden generated builder :</p>
<pre><code>import lombok.Builder;
import lombok.ToString;

@Builder(builderMethodName = &quot;&quot;)
@ToString
public class Person {

    private String name;
    private String surname;

    public static PersonBuilder builder(String name) {
        return new PersonBuilder().name(name);
    }
}
</code></pre>
"
660,9650656,31,7161927,Wasim Daas,true,2,1733867285,1575402907,59164420,59154171,"<p>To be able do it I added to <code>hibernate.properties</code>:</p>
<pre><code>hibernate.persister.resolver=MyPersisterClassResolver
</code></pre>
<p>and created a new <code>PersisterClassResolver</code> class as follows:</p>
<pre><code>public class MyPersisterClassResolverextends StandardPersisterClassResolver {
    @Override
    public Class&lt;? extends EntityPersister&gt; singleTableEntityPersister() {
        return mySingleTabkePersister.class;
    }
}
</code></pre>
"
661,18891632,1,13781788,Mario Andres Iba&#241;ez Grajales,false,0,1733866490,1733866446,79269870,57686041,"<p>In my case, (I was using debug mode and the server was running in  eclipse) remove all the breakpoints, restart in normal mode and finally restart y debug mode again.</p>
"
662,20634582,29,15148595,deem sameer,false,1,1651048938,1651048938,72025787,57686041,"<p>I know it's old question but I been there for a while searching for a solution and as Banupriya velusamy said you need to configure jboss.as.management.blocking.timeout as a system property look at how: <a href=""https://access.redhat.com/solutions/1190323"" rel=""nofollow noreferrer"">https://access.redhat.com/solutions/1190323</a></p>
"
663,10837897,687,7970245,Turac,true,2,1566980790,1566980790,57688032,57686041,"<blockquote>
  <p>i tried changing the standalone config bat file by adding set JAVA_OPTS=%JAVA_OPTS% ""-Djboss.as.management.blocking.timeout=600""</p>
</blockquote>

<p>You changed .bat file but  it seems still timeout=300 in logs. You should change standalone.xml file. You can add <code>deployment-timeout=""xxx""</code> attribute to the <code>depoyment-scanner</code> element. <a href=""https://mirocupak.com/enabling-long-deployments-on-wildfly/"" rel=""nofollow noreferrer"">This page</a> help to you change timeout attribute.
Sometimes a timeout exception is simply a timeout exception. If this is the problem, the above actions will solve the problem. But if problem is not simply a timeout exception, this action(increase timeout) hidden the real problem.</p>

<p>First of all, the source of the problem may be the <code>eclipse</code>. Remove all breakpoints and restart server. If this solution is not solve the issue, start server manually with <code>standalone.bat</code> instead of <code>eclipse</code>.</p>

<p>If none of them did not solve issue, you should find the real problem youself. Example your DNS setting maybe was net set properly.</p>
"
664,14079642,1,10171021,Banupriya velusamy,false,0,1566975015,1566975015,57686483,57686041,"<p>configure jboss.as.management.blocking.timeout property in jboss to tune your timeout</p>
"
667,11683,1494514,22656,Jon Skeet,true,19,1302713627,1302713627,5652818,5652772,"<ol>
<li><p>No, the compiler doesn't determine that the <code>throwErrorMethod</code> will never complete normally. There's nothing in the specification to suggest it should. Unfortunately there's no way to indicate that a method will never return normally.</p></li>
<li><p>It's only ""may"" because there's a potential execution path which doesn't initialize the variable. The presence of such an execution path is defined to be an error.</p></li>
</ol>

<p>You may find this pair of blog posts (<a href=""http://blogs.msdn.com/b/ericlippert/archive/2011/02/21/never-say-never-part-one.aspx"" rel=""noreferrer"">part 1</a>; <a href=""http://blogs.msdn.com/b/ericlippert/archive/2011/02/24/never-say-never-part-two.aspx"" rel=""noreferrer"">part 2</a>) by Eric Lippert interesting. It's about C# rather than Java, but it's the same principle.</p>
"
668,64324,77475,189950,Kirk Woll,false,1,1302713616,1302713616,5652814,5652772,"<p>The compiler doesn't do the sort of check you are expecting.  It does not determine for sure that <code>throwErrorMethod</code> actually throws an exception <em>every time</em>.  Therefore, it assumes that it's possible to go into your <code>else</code> clause, invoke <code>throwErrorMethod</code>, <strong>return from that method</strong>, and then not initialize <code>var1</code> (which must be initialized).</p>
"
669,23121,532979,57695,Peter Lawrey,false,7,1302713981,1302713600,5652805,5652772,"<p>Exceptions are supposed to be exceptional. It doesn't assume that an exception is always thrown.</p>

<p>The compiler uses the word <code>may</code> as it cannot tell if you could access an uninitialsied variable. Additionally, you may change which the method does without recompiling this class and any assumption it made would be incorrect.</p>

<p>If you want to throw an Exception always, you can do</p>

<pre><code>final int var1;    

if ( isSomethingTrue ) {

   var1 = 123;

} else {
   throw exceptionMethod();
}

int var2 = var1;

// later
public Exception exceptionMethod() {
    return new Exception(""Complex-Exception-String"");
}
</code></pre>
"
670,10924786,59,8029803,Alejandro Burd&#237;o,false,0,1506331816,1506331816,46401884,17385890,"<p>I have a listview with Edittext and when I input text in it, if before this, I scroll the listview, the adapter take some positions, not the selected.</p>

<p>My adapter take various positions instead of my selection:</p>

<pre><code>etCantidad.addTextChangedListener(new TextWatcher() {
     @Override
     public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
     @Override
     public void onTextChanged(CharSequence s, int start, int before, int count) {}

     @Override
     public void afterTextChanged(Editable s) {
         String cantidadTMP = etCantidad.getText().toString();
         int cantidad;
         try {
              cantidad = Integer.parseInt(cantidadTMP);
              item.setCantidad(cantidad);
              Log.i(""Name"",""""+item.getNombre());
             }catch (Exception e){
                    cantidad = 0;
             }
         Log.i(""QuantityArrayAdapter"",String.valueOf(cantidad));
     }});
</code></pre>

<p>One Editext selection:</p>

<pre><code>09-25 09:22:10.458 12719-12719/? I/QuantityArrayAdapter: 1
09-25 09:22:10.458 12719-12719/? I/QuantityArrayAdapter: 1
09-25 09:22:10.458 12719-12719/? I/QuantityArrayAdapter: 1
</code></pre>

<p>So, I added this method in to the onTouchListener to only gets the selection position:</p>

<pre><code>etCantidad.setOnTouchListener(new View.OnTouchListener() {
        @Override
        public boolean onTouch(View v, MotionEvent event) {
            etCantidad.addTextChangedListener(new TextWatcher() {
                @Override
                public void beforeTextChanged(CharSequence s, int start, int count, int after) {

                }

                @Override
                public void onTextChanged(CharSequence s, int start, int before, int count) {
                }

                @Override
                public void afterTextChanged(Editable s) {
                    String cantidadTMP = etCantidad.getText().toString();
                    int cantidad;
                    try {
                        cantidad = Integer.parseInt(cantidadTMP);
                        item.setCantidad(cantidad);
                        Log.i(""Name"",""""+item.getNombre());
                    }catch (Exception e){
                        cantidad = 0;
                    }
                    Log.i(""QuantityArrayAdapter"",String.valueOf(cantidad));
                }
            });
            return false;
        }
    });
</code></pre>

<p>And only take the item i want so, its works for me.</p>
"
671,4779799,2214,3861913,Karthik Kompelli,false,0,1491206397,1491206397,43179411,17385890,"<p>Its working for me.... Please check this </p>

<pre><code>listview.setItemsCanFocus(true);
</code></pre>
"
672,298135,763,604003,mr_z_ro,false,4,1420517410,1420514280,27791575,17385890,"<p>To expand on <a href=""https://stackoverflow.com/users/1477901/aarbiyech"">aaRBiyecH</a>'s answer <a href=""https://stackoverflow.com/a/23272898/604003"">above</a>, here is a solution and a more in-depth explanation to your questions #1 and #3 (<a href=""http://forums.xamarin.com/discussion/comment/51259/#Comment_51259"" rel=""nofollow noreferrer"">source</a>):</p>

<p>You need to set the <a href=""http://developer.android.com/reference/android/view/ViewGroup.html#attr_android:descendantFocusability"" rel=""nofollow noreferrer"">DescendantFocusability</a> property of your ListView to ""afterDescendants"".</p>

<p>You can do this in the XML like this:</p>

<p><code>android:descendantFocusability=""afterDescendants""</code></p>

<p>or in code like this:</p>

<p><code>listview.setDescendantFocusability(ViewGroup.FOCUS_AFTER_DESCENDANTS)</code></p>

<p>You also need to set the items to be focusable.</p>

<p>You can do this in the code like this: 
<code>listview.setItemsCanFocus(true)</code>;</p>

<p>Also, you need to specify what is happening to the main window of your activity when the soft keyboard is shown. This is done by changing the <a href=""http://developer.android.com/guide/topics/manifest/activity-element.html#wsoft"" rel=""nofollow noreferrer"">WindowSoftInputMode</a> attribute. You probably want to set it to AdjustPan so that your listview is not resized and thus GetView isn't called again. This is probably what is happening now when you hide the keyboard, GetView is called again and reset the original value in the EditText.</p>

<p>You can do this using the attribute <code>android:windowSoftInputMode=""adjustPan""</code> on your main activity class's XML, or <code>getWindow().setSoftInputMode(LayoutParams.SOFT_INPUT_ADJUST_PAN)</code> programmatically.</p>
"
673,1595732,1443,1477901,desidigitalnomad,false,19,1398352304,1398352304,23272898,17385890,"<p>Solutions to issue #3:</p>

<ol>
<li><p>Set <code>descendantFocusablity=""beforeDescendants""</code> in the listview.</p></li>
<li><p>Set <code>windowSoftInputMode=""adjustPan""</code> in the manifest</p></li>
<li><p>Set <code>listview.setItemsCanFocus(true)</code></p></li>
</ol>
"
674,,,,user2396641,false,0,1372553243,1372552250,17385962,17385890,"<p>due to question 2 you can relate to this post
<a href=""https://stackoverflow.com/questions/3036296/edittext-items-in-a-scrolling-list-lose-their-changes-when-scrolled-off-the-scre"">EditText items in a scrolling list lose their changes when scrolled off the screen</a>
so there seems there s no easy solution to persist the edittexts when you scroll down</p>

<p>Yes your right you can try </p>

<p><a href=""https://stackoverflow.com/questions/8772714/edittext-loses-content-on-scroll-in-listview?rq=1"">EditText loses content on scroll in ListView</a></p>

<p>or just relate to the related posts on the right </p>
"
675,31682,22711,87197,Chris Dennett,false,1,1306353980,1306353980,6130232,5593215,"<p>You should use <a href=""http://visualvm.java.net/"" rel=""nofollow noreferrer"">VisualVM</a> to find memory leaks and CPU usage problems, which comes with the JDK. It's pretty good for profiling, and has many plugins. You can also start VisualVM <a href=""http://visualvm.java.net/eclipse-launcher.html"" rel=""nofollow noreferrer"">from Eclipse</a> automatically when an application runs. Netbeans probably has something similar. It also doesn't impact performance much, providing that you use sampling rather than profiling.</p>

<p>I used to prefer JRockIt Mission Control over this (with JRockIt VM), but this does the job these days.</p>

<p><img src=""https://i.sstatic.net/i7uP0.png"" alt=""VisualVM""></p>
"
676,48025,1684,142458,Greg Bowyer,false,2,1306353395,1306353395,6130109,5593215,"<p>Its impossible to trace with a ""product"" (read normal released) build, I would put the code through yourkit and see what's happening, hotspot will try to get the best possible optimisation at all times.</p>

<p>It will only go slower if you have code that forces de-optimisation in the jit, in the profiler you should be able to see this as things like large numbers of allocations, huge number of exceptions.</p>
"
677,5776867,18222,4558709,antonio,true,0,1475479565,1475479565,39826405,39821750,"<p><code>Geocoder.getFromLocationName</code> will return null or empty list if no matches were found or there is no backend service available (<a href=""https://developer.android.com/reference/android/location/Geocoder.html#getFromLocationName(java.lang.String,%20int)"" rel=""nofollow"">documentation</a>).</p>

<p>So, to solve your problem you must check if there are available results:</p>

<pre><code>private void geoLocate() throws IOException {
    String location = ""comida rapida y pizza"";
    Geocoder gc = new Geocoder(this);
    List&lt;Address&gt; list = new ArrayList&lt;&gt;(gc.getFromLocationName(location, 1));

    if (list != null &amp;&amp; list.size() &gt; 0) {
        Address address = list.get(0);
        String locality = address.getLocality();

        Toast.makeText(this, locality, Toast.LENGTH_SHORT).show();

        double lat = address.getLatitude();
        double lng = address.getLongitude();
        goToLocationZoom(lat, lng, 16);
    } else {
        Toast.makeText(this, ""No results found"", Toast.LENGTH_SHORT).show();
    }
}
</code></pre>
"
678,17138160,55,12402753,Mehrdad Bozorgmehr,false,1,1733863616,1733863616,79269758,79269071,"<p>Check which profile your project is running on, such as dev, prod, or test, to find the correct configuration file.</p>
<p>For more information, please change the log level of the application and edit your question with more details.</p>
<pre><code>logging.level.org.springframework=DEBUG
</code></pre>
"
679,38333731,1,28720084,Gregory Ledenev,false,-1,1733863565,1733850893,79269122,38866637,"<p>(Disclosure: I am the owner of the linked repo)</p>
<p>Java does not have built-in support for class (category) extensions, and it is unlikely that it will be added anytime soon. To address this missing functionality, I've made a small library - <a href=""https://github.com/gregory-ledenev/java-class-extension"" rel=""nofollow noreferrer"">Java Class Extension Library</a> that provides an ability to <strong>emulate</strong> class extensions (categories) in Java.</p>
<p>The library supports the following approaches for creating of class extensions:</p>
<ol>
<li><a href=""https://github.com/gregory-ledenev/java-class-extension/blob/main/doc/static-class-extensions.md"" rel=""nofollow noreferrer"">Static Class Extensions</a>: define and implement extensions as usual Java classes and then utilize the Java Class Extension library to find matching extensions.</li>
<li><a href=""https://github.com/gregory-ledenev/java-class-extension/blob/main/doc/dynamic-class-extensions.md"" rel=""nofollow noreferrer"">Dynamic Class Extensions</a>: utilize the Java Class Extension library to define extensions by composing them as sets of lambda operations and let the library create extensions dynamically on the fly.</li>
</ol>
<p>Both approaches leverage the ClassExtension interface, which facilitates querying for an extension based on an object's extension interface. Once obtained, these extensions unlock additional functionality with remarkable ease. For example, obtaining a Shippable extension and using its ship() method to perform shipping a book would look like:</p>
<pre class=""lang-java prettyprint-override""><code>Book book = new Book(&quot;The Mythical Man-Month&quot;);
Shippable shippable = StaticClassExtension.sharedExtension(book, Shippable.class);
shippable.ship();
</code></pre>
<p>or</p>
<pre class=""lang-java prettyprint-override""><code>Book book = new Book(&quot;The Mythical Man-Month&quot;);
Shippable shippable = DynamicClassExtension.sharedExtension(book, Shippable.class);
shippable.ship();
</code></pre>
<p>Shipping a collection of items is equally straightforward:</p>
<pre class=""lang-java prettyprint-override""><code>Item[] items = {
    new Book(&quot;The Mythical Man-Month&quot;), 
    new Furniture(&quot;Sofa&quot;), 
    new ElectronicItem(&quot;Soundbar&quot;)
};

for (Item item : items) {
    Shippable shippable = StaticClassExtension.sharedExtension(item, Shippable.class);
    item.ship();
}
</code></pre>
"
680,1367113,22545,1303324,Krzysztof Atłasik,false,2,1555309254,1470816122,38867493,38866637,"<p>It can be done in other languages for JVM, like Scala, <a href=""http://docs.groovy-lang.org/latest/html/api/groovy/lang/ExpandoMetaClass.html"" rel=""nofollow noreferrer"">Groovy</a> or Closure.</p>

<p>For example in Groovy:</p>

<pre><code>List.metaClass.printSize = {
    println delegate.size()
}

[1,2,3].printSize() //prints 3
</code></pre>

<p>In Scala you can use <code>implicit class</code>:  </p>

<pre><code>implicit class PrefixedString(val s: String) {
   def prefix = ""prefix_"" + s 
}

""foo"".prefix // returns ""prefix_foo""
</code></pre>

<p>Please have a look at <a href=""https://www.ibm.com/developerworks/library/j-jn5"" rel=""nofollow noreferrer"">this article.</a></p>

<p>An important remark is that Groovy/Scala source code is intended to be compiled to Java bytecode so that the resulting classes can be used in Java code.</p>
"
681,3585651,3139,2992899,Czyzby,true,8,1470814540,1470814540,38866997,38866637,"<p>No, vanilla Java does not feature extension methods. However, <a href=""https://projectlombok.org/"" rel=""noreferrer"">Lombok</a> adds many useful features - including extension methods syntax - thanks to its annotations and bytecode generation.</p>

<p>You can use its <a href=""https://projectlombok.org/features/experimental/ExtensionMethod.html"" rel=""noreferrer"">@ExtensionMethod</a> annotations to ""convert"" existing static methods to extension methods. The first parameter of the static methods basically becomes <code>this</code>. For example, this is a valid Lombok-enhanced Java code:</p>

<pre><code>import lombok.experimental.ExtensionMethod;

@ExtensionMethod({java.util.Arrays.class, Extensions.class})
public class ExtensionMethodExample {
  public String test() {
    int[] intArray = {5, 3, 8, 2};
    intArray.sort();

    String iAmNull = null;
    return iAmNull.or(""hELlO, WORlD!"".toTitleCase());
  }
}

class Extensions {
  public static &lt;T&gt; T or(T obj, T ifNull) {
    return obj != null ? obj : ifNull;
  }

  public static String toTitleCase(String in) {
    if (in.isEmpty()) return in;
    return """" + Character.toTitleCase(in.charAt(0)) +
        in.substring(1).toLowerCase();
  }
}
</code></pre>

<p>Note that Lombok extension methods can be ""invoked"" on null objects - as long as the static method is null-safe, <code>NullPointerException</code> will not be thrown, as this is basically translated to static method call. Yes - it comes down to syntax sugar, but I guess this is still more readable than the usual static methods calls.</p>

<p>Aside from that, you can use some other JVM language with Java interoperability, if that's OK in your project. For example, <a href=""http://kotlinlang.org/"" rel=""noreferrer"">Kotlin</a> comes with <a href=""https://kotlinlang.org/docs/reference/extensions.html"" rel=""noreferrer"">extension methods functionality</a>, as well as some useful extensions already defined in the standard library. Here's a <a href=""https://blog.frankel.ch/comparing-lombok-and-kotlin/"" rel=""noreferrer"">Kotlin and Lombok comparison</a>.</p>
"
682,7007079,12455,5375403,Jiri Tousek,false,2,1470813856,1470813856,38866760,38866637,"<p>The <a href=""https://en.wikipedia.org/wiki/Decorator_pattern#Java"" rel=""nofollow"">Decorator Pattern</a> is perhaps the closest match. It uses interface to maintain the type compatibility and composition to enhance the existing class' function. It's not the same principle as the one you're describing but might serve the same purpose.</p>
"
683,6324547,31,4941057,Basilios Raptis,false,0,1432652041,1432652041,30462056,8466462,"<p>This is possible with the lombok library. There is an annotation that is called @ExtensionMethod.</p>

<p>This gives you that functionality.</p>

<p>See <a href=""https://projectlombok.org/features/experimental/ExtensionMethod.html"" rel=""nofollow"">https://projectlombok.org/features/experimental/ExtensionMethod.html</a></p>
"
684,337722,1492,666172,Tom&#225;š Plešek,false,1,1323629358,1323629358,8466503,8466462,"<p>I'm not aware of a language construct, that would allow you to do that, but you could use Decorator pattern to achieve your goal.</p>
"
685,62516,21371,185723,dimitrisli,false,1,1323629356,1323629356,8466501,8466462,"<p>You could use <a href=""http://www.eclipse.org/aspectj/"" rel=""nofollow"">AspectJ</a> that is using compile-time weaving to add to the bytecode.</p>
"
686,221654,8008,479760,Sebastian Piu,true,9,1323629206,1323629206,8466482,8466462,"<p>As Oli mentions, it is not possible.</p>

<p>It is worth mentioning that an extension method in C# is just a fancy way of calling an Static method, so although it looks like </p>

<pre><code>someobject.MyExtensionMethod();
</code></pre>

<p>then the compiler translates that to</p>

<pre><code>SomeStaticClass.MyExtensionMethod(someobject);
</code></pre>

<p>You are not <em>really</em> adding a method to the object</p>
"
687,44195,272109,129570,Oliver Charlesworth,false,3,1323629093,1323629093,8466471,8466462,"<p>No, not with standard Java.</p>

<p></p>
"
688,7977492,827,6142313,Q. Qiao,false,0,1733863342,1733863342,79269741,51773218,"<p>Complement to @BOC's answer.</p>
<p>If you are behind some company vpn, you probably need to set it to:</p>
<pre><code>pluginManagement {
  repositories {
    maven {
      url &lt;local_repository_url&gt;
    }
  }
}
</code></pre>
"
690,80060,1564,226625,Mister_Tom,false,0,1733862579,1733862579,79269714,13747603,"<p>As of late 2017, Java has evolved to include some basic shell/script type of capabilities via <code>jshell</code>.</p>
<ul>
<li><a href=""https://dev.java/learn/jshell-tool/"" rel=""nofollow noreferrer"">JShell - The Java Shell Tool</a> Tutorial</li>
<li><a href=""https://openjdk.org/jeps/222"" rel=""nofollow noreferrer"">JEP 222: jshell: The Java Shell (Read-Eval-Print Loop)</a> added in Java 9</li>
</ul>
"
691,9858621,814,7302365,fxmasa,false,8,1534361917,1534361917,51865310,13747603,"<p>Java 11 has support for running source code without compilation.</p>

<p>For a file <code>HelloWorld.java</code> containing</p>

<pre><code>public class HelloWorld {
  public static void main(String[] args) {
    System.out.println(""Hello World!!!"");
  }
}
</code></pre>

<p>you can run</p>

<p><code>java HelloWorld.java</code></p>

<p>to execute the code. There is a limitation: all the classes have to be defined in the same file.</p>

<p>If the file doesn't have <code>.java</code> extension, you need to include <code>--source</code> option.</p>

<p>For example for a file <code>HelloWorld</code> containing a source code you need to run</p>

<p><code>java --source 11 HelloWorld</code>.</p>

<p>To run a java ""script"" directly in the shell you can use</p>

<pre><code>#!/usr/bin/java --source 11

public class HelloWorld {
  public static void main (String[] args) {
    System.out.println(""Hello World"")
  }
}
</code></pre>

<p>where <code>/usr/bin/java</code> is a path to <code>java</code> binary.</p>
"
692,418189,1910,794606,Jacek Cz,false,5,1489742202,1439479300,31992384,13747603,"<p>Since version 7.0, Java has ""official"" support for compiling at runtime (if tools.jar from SDK is on classpath). Probably, the execution speed can be as high as compiled java, higher than interpreters.</p>

<p>Starting point to read (many samples in the internet):</p>

<pre><code>import javax.tools.JavaCompiler;
import javax.tools.ToolProvider;


JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
if(compiler!=null) {
    .... 
}
</code></pre>
"
693,216605,12067,471955,Dave Moten,false,2,1399441253,1399441253,23509595,13747603,"<p>For simple stuff when groovy etc is not available I embed java into bash scripts as detailed  on project <a href=""http://github.com/davidmoten/java-script-template"" rel=""nofollow"">java-script-template</a>. Code looks like this:</p>

<pre><code>#!/bin/bash
set -e
TEMP_DIRECTORY=/tmp
TEMPFILE=`mktemp $TEMP_DIRECTORY/ScriptXXXXX|sed -e 's/\.//g'`
CLASS_NAME=`basename ""$TEMPFILE""`
JAVA_SOURCE=$TEMPFILE.java
cat &lt;&lt;EOF &gt;$JAVA_SOURCE.tmp

//Write your java class here with a main method
//Be sure to leave the name of the class as Script 

//import some commonly used imports
import java.io.*;
import java.text.*;
import java.util.*;

public class Script {

    public static void main(String[] args) throws Exception {
       System.out.println(""Here's a test run for you"");
    }

}

EOF

## change the name of the class to match the file
sed ""s/public class Script /public class $CLASS_NAME /g"" $JAVA_SOURCE.tmp &gt;$JAVA_SOURCE

## compile the java
javac $JAVA_SOURCE 

## run the class using all passed in parameters from the command line
java -classpath $TEMP_DIRECTORY $CLASS_NAME
</code></pre>
"
694,400590,6469,766648,jmarranz,false,1,1392464570,1392464570,21797059,13747603,"<p><a href=""https://github.com/jmarranz/relproxy/"" rel=""nofollow"">RelProxy</a> is a Java compiler on the fly (in memory), it makes Java feel like a scripting language but with no limitation. It also supports hot class reload of Groovy classes when Groovy is used in a Java environment.</p>
"
695,30680409,21,23521568,Shanta Kumar das,false,0,1733860364,1733854021,79269304,56705558,"<p>Instead of interacting directly between Service A and Service B, encapsulate the logic for those both of them dependent to each other. Create a third component like a mediator (updateService, responsible for reading and writing to db through A, get information from B)
Though there might be several techniques to resolve circular dependency like lazy initialization or implementing event driven pattern, the mediator strategy is decoupled and easier to trace dependencies.</p>
"
696,3782879,1,3141792,BionicCode,false,2,1561194085,1561189620,56713631,56705558,"<p><strong>Solution 1 (recommended):</strong>
the redesign of class responsibilities. Adhering to the Single Responsibility Principle and according to the class details you revealed, we can fix your class design by extracting at least one new class: the <code>DatabaseConnector</code>. This class encapsulates all database related operations (CRUD) and therefore lifts the circular dependency of the service classes (without changing the original conceptions of the classes).</p>

<pre><code>// This is just a raw template to express the intention
class DatabaseConnector {
  void createInDatabase(Object data) {
  }

  Object readFromDatabase(Object args) {
  }

  void updateInDatabase(Object data) {
  }

  void deleteFromDatabase(Object data) {
  }
}

class AService {
  @Autowired
  private DatabaseConnector dbConnector;    
}

class BService {
  @Autowired
  private DatabaseConnector dbConnector;    
}
</code></pre>

<p>You can add more specialized methods to the <code>DatabaseConnector</code> to meet special requirements (e.g. <code>readName()</code>, <code>readId()</code>, etc).</p>

<p>Since it is likely that more classes will need to access the database in future, you already solved or prevented new circular dependencies today. Encapsulation solved potentially upcoming problems.</p>

<p><strong>Solution 2:</strong> dependency inversion</p>

<pre><code>interface IAService {    
}

interface BService {
}

class AService implements IAService {
  @Autowired
  private IBService bService;    
}

class BService implements IBService {
  @Autowired
  private IAService aService;    
}
</code></pre>

<p>A circular dependency is always an indicator for bad class design. In most cases the origin is the violation of the Single Responsibility Principle (the <em>S</em> in SOLID). A wrong composition concept can also lead to this design error. What will always help, but not fix the conceptional flaws of class responsibilities, is the introduction of interfaces to invert all dependencies (the <em>D</em>  in SOLID). Taking the SOLID Principles serious can safe a lot of time and work and will always lead to better code (although you introduced higher code complexity).</p>

<p>The Mediator Pattern can also help to lift circular dependencies by encapsulating the bidirectional interaction of two or more objects.</p>

<p>The downside of your current code is (besides the circular dependency), that whenever class A changes and also data persistence changes, you have to touch and modify class B. This changes can break class B which is using the same persistence operations. This is true for all cases where one class has shared responsibilities with another class. If there wasn't the shared code, both classes wouldn't know each other at all. In your special case, where the dependency is cyclic, you add this flaw to the other dependency direction as well: whenever B needs to adjust or extend how to read data then you have to modify class A, which might break A. If you are using unit tests, then you would have to refactor the tests of <em>both</em> classes too. This tight (and cyclic) coupling of A and B will lead to errors or bugs. Extending code has become dangerous. But the good news is that circular dependencies never compile (since the dependency resolution leads to infinite recursion).</p>
"
697,11832874,88,8659092,Chris Toh,false,0,1561145891,1561145891,56709504,56705558,"<p>The easiest way is to move the method that Service B uses out of Service A and into Service B OR into a completely different class. </p>

<p>The design indicates that you probably have too many methods in Service A which Service A does not actually use, but which are public methods that should really be static and in another Class entirely.</p>
"
698,2497295,4047,2173392,pdem,false,5,1561129676,1561129302,56705929,56705558,"<p>The real question is why your conception making A and B dependent of each over?</p>

<ul>
<li>It could be that A and B represent the same concept, and may be merged.</li>
<li>It could also be that a part of your service A or B should be extracted in a new service C. </li>
</ul>

<p>In that last case you need to know which method depends on which service, and which one could be extracted in a new service. Without having the context and the list of methods it's difficult to propose a solution.
In the case of indirect recursive methods, you may have to cut also some methods.</p>

<p>Side note: don't try to find a workaround to make it work with circular dependencies, it shows a conception problem, you have to do the refactoring.</p>
"
699,10694047,1,7871899,Guillaume,false,-3,1561128274,1561128274,56705654,56705558,"<p>Try to put the autowired on setter instead:</p>

<pre><code>@Autowired
public void setServiceB(ServiceB service){
 this.serviceB = service;
 }
</code></pre>
"
700,31039,1866,84978,Monkey,false,2,1302359756,1302359756,5605650,5605575,"<p>There is a lot of Java programmers, a whole ecosystem to build upon. Much more than D :p An OS running most of the programs for it on a virtual machine have nice advantages for security (http://en.wikipedia.org/wiki/Language-based_system). But doing some exception for a very important application, from user point of view, can help performance. The choice of a specific JVM, it seems to be clear, it's to have something adapted to typical embedded resources. I think Google choices are quite pragmatic in that regard.</p>

<p>For the (rant on ?) teaching of languages at the university, I don't think it's about learning the latest fashionable language. It's about learning to learn computer related technologies, such as programming languages. The concepts did not changed much since, say 1960, 1970, although that ok, their implementation is different.</p>
"
701,47283,717784,139985,Stephen C,true,15,1360251035,1302359693,5605644,5605575,"<blockquote>
  <p>Why just Android is not written either with D or C/C++ languages? </p>
</blockquote>

<p>Because none of them is a fully managed language.  D <em>is</em> garbage collected, but you can also do manual memory management ... with all of the risks that that entails.</p>

<p>Also, because starting from a Java base (in the form of Apache Harmony, etc) meant that:</p>

<ul>
<li>Java developers would be able to transition to Android, and</li>
<li>there would be less for the Android development team to implement.</li>
</ul>

<p>However, as @Marchy points out, it wasn't Google that made the original decision:</p>

<blockquote>
  <p>""<em>... Google didn't BUILD Android. <a href=""http://en.wikipedia.org/wiki/Android_%28operating_system%29"" rel=""noreferrer"">[Android Inc]</a> was a startup they bought, and as a startup you use whatever is out there and optimize to gain momentum FAST and with VERY limited resources. ...</em>""</p>
</blockquote>

<p>Though obviously Google did have a hand, since (according to <a href=""http://en.wikipedia.org/wiki/Android_%28operating_system%29"" rel=""noreferrer"">Wikipedia</a>) Google helped finance Android Inc prior to the buyout. </p>

<blockquote>
  <p>Why Android dont run JVM but they build a Java concept does alternative JVM processing.</p>
</blockquote>

<p>Ultimately, because the restrictions that Sun / Oracle places on the Java language and platform would have made it impossible to innovate in the way Google has done with Android.  Specifically, Sun / Oracle won't license vendors to implement Java SE on mobile platforms.  </p>

<blockquote>
  <p>Are we then learning programming languages in University wrong way.</p>
</blockquote>

<p>Maybe <em>you</em> did!!  </p>

<p>But when I learned programming at University, it was in the full knowledge that I'd never use some of the languages I was taught about.  For instance, I've never used Algol-60, Simula-67, SNOBOL or CDC assembly language since.  But that did not invalidate the reasons that they were taught, or the valuable lessons I gained in learning them.</p>
"
702,12204,68590,23903,dsimcha,false,4,1302359088,1302359088,5605595,5605575,"<p>I'd guess it's because a lot of programmers are familiar with Java and Java, for all its faults as a language, has excellent library and tool support.  Also, the layer of VM indirection prevents the apps from being too tightly coupled to the hardware. </p>
"
703,23823578,289,17830956,sathish,false,0,1733859940,1733859940,79269581,51151585,"<p>I Replaced the latest Cucumber-JUnit dependency version 7.20.1 with</p>
<pre><code>&lt;dependency&gt;
        &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
        &lt;artifactId&gt;cucumber-junit&lt;/artifactId&gt;
        &lt;version&gt;3.0.2&lt;/version&gt;
        &lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>
<p>and manually wrote in testRunner.java file above @RunWith(Cucumber.class)</p>
<p>import cucumber.api.junit.Cucumber;</p>
<p>This solved my Cucumber.class cannot resolved as type issue!!</p>
"
704,9184388,12,13862823,Ashutosh Anand,false,0,1593841873,1593838877,62725525,51151585,"<p>I changed:</p>
<pre><code>    &lt;!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-junit --&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
        &lt;artifactId&gt;cucumber-junit&lt;/artifactId&gt;
        &lt;version&gt;6.1.2&lt;/version&gt;
        &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
</code></pre>
<p>To:</p>
<pre><code>    &lt;!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-junit --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
    &lt;artifactId&gt;cucumber-junit&lt;/artifactId&gt;
    &lt;version&gt;6.2.0&lt;/version&gt;
    &lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt;

It Worked...
</code></pre>
<p><strong>My Dependencies list:</strong></p>
<pre><code>&lt;!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-junit --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
    &lt;artifactId&gt;cucumber-junit&lt;/artifactId&gt;
    &lt;version&gt;6.2.0&lt;/version&gt;
    &lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt;

&lt;!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-jvm-deps --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
    &lt;artifactId&gt;cucumber-jvm-deps&lt;/artifactId&gt;
    &lt;version&gt;1.0.6&lt;/version&gt;
    &lt;scope&gt;provided&lt;/scope&gt;
&lt;/dependency&gt;
  
   &lt;!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-java --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;io.cucumber&lt;/groupId&gt;
    &lt;artifactId&gt;cucumber-java&lt;/artifactId&gt;
    &lt;version&gt;6.2.0&lt;/version&gt;
&lt;/dependency&gt;
  &lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;
&lt;dependency&gt;
    &lt;groupId&gt;junit&lt;/groupId&gt;
    &lt;artifactId&gt;junit&lt;/artifactId&gt;
    &lt;version&gt;4.13&lt;/version&gt;
    &lt;scope&gt;test&lt;/scope&gt;
&lt;/dependency&gt;
</code></pre>
"
705,11238234,1,8763592,man,false,-3,1593388309,1593350460,62623078,51151585,"<p>I have faced the same issue. Tried multiple things but what helped me is this <br/>
<code>import cucumber.api.junit.Cucumber;</code></p>
"
706,18736691,11,13660882,Sujani,false,1,1591040933,1591040933,62139895,51151585,"<p>I have removed the  test  tag and it worked.</p>

<pre><code>      &lt;!-- https://mvnrepository.com/artifact/info.cukes/cucumber-junit --&gt;
        &lt;dependency&gt;
           &lt;groupId&gt;info.cukes&lt;/groupId&gt;
            &lt;artifactId&gt;cucumber-junit&lt;/artifactId&gt;
            &lt;version&gt;1.2.5&lt;/version&gt;
        &lt;/dependency&gt;
</code></pre>
"
707,3577370,3861,2986279,Gaurav Khurana,false,0,1580121139,1580121139,59929346,51151585,"<p>Even though you might have <strong>cucumber-junit</strong> in <strong>pom.xml</strong></p>

<p>Confirm that under <strong>Maven Dependencies</strong> you must have <strong>cucumber-junit</strong></p>

<p><a href=""https://i.sstatic.net/ujsf6.png"" rel=""nofollow noreferrer""><img src=""https://i.sstatic.net/ujsf6.png"" alt=""enter image description here""></a></p>

<p>I had 1.2.6 but it was not under Maven dependencies, Got this from one the comments in the answer.</p>

<pre><code>  &lt;dependency&gt;
  &lt;groupId&gt;info.cukes&lt;/groupId&gt;
  &lt;artifactId&gt;cucumber-junit&lt;/artifactId&gt;
   &lt;version&gt;1.2.5&lt;/version&gt;
   &lt;scope&gt;test&lt;/scope&gt;
   &lt;/dependency&gt;
</code></pre>
"
